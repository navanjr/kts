create procedure dbo.paymentsImportBatch(
 @paymentType varchar(50),
 @batchId int,
 @debugMode varchar(10) = 'false' 
) as 
begin

  declare
   @idToken int,
   @voucherDate int,
   @voucherNumber varchar(50),
   @payee varchar(50),
   @amount varchar(50),
   @debitAcct varchar(50),
   @creditAcct varchar(50),
   @officialsFundCode varchar(50),
   @resultStringToken varchar(100),
   @officialName varchar(50),
   @officialDepositCode varchar(50),
   @officialBankCode varchar(50)

  declare @wt table (
   id int,
   voucherDate int,
   voucherNumber varchar(50),
   payee varchar(50),
   amount money,
   debitAcct varchar(500),
   creditAcct varchar(500),
   officialsFundCode varchar(50),
   accountBlob varchar(1000)
  )

  declare @results table( code int, message varchar(100) )

-- before we really get started lets check to see if we have the officials depository and bank accounts and fiscal cal and such...
  declare @code int, @message varchar(500)
  exec dbo.paymentsImportCheck
   @paymentType,
   @batchId,
   @officialName = @officialName output,
   @officialDepositCode = @officialDepositCode output,
   @officialBankCode = @officialBankCode output,
   @code = @code output,
   @message = @message output 

 if not @code = 0
 begin
   select '@code=' + cast(@code as varchar) + ';@message=' + @message + ';'
   return
 end
 
-- insert Official Vouchers
 if @paymentType = 'official voucher'
  insert @wt select 
   id,
   cast(voucherDate as int),
   voucherNumber,
   payee,
   cast(amount as money),
   debitAcct,
   creditAcct,
   null,
   null
  from dbo.voucherImportBRW(@batchId)

-- insert Official Warrants
 if @paymentType = 'Official Warrant'
 begin
  insert @wt select 
   id,
   cast(warrantDate as int),
   warrantNumber,
   vendorCode,
   cast(amount as money),
   debitAcct,
   creditAcct,
   clerksFund,
   null
  from dbo.warrantImportBRW(@batchId)
 end

  if @debugMode = 'true'
   select * from @wt

-- check them out
  if not exists(select * from @wt)
  begin
   select '@code=1;@message=No rows found to process for import;'
   return
  end

  if exists(select * from @wt where debitAcct < '  0' or creditAcct < '  0')
  begin
   exec dbo.logit @@procid, 'missing required account information'
   select '@code=1;@message=some items are missing required account information;'
   return
  end
  
-- so far so good... lets verify gl Accounts

  while exists(select * from @wt)
  begin
    select top 1 @idToken = id, 
     @voucherDate = voucherDate,
     @voucherNumber = voucherNumber,
     @payee = payee,
     @amount = amount,
     @debitAcct = debitAcct,
     @creditAcct = creditAcct
    from @wt order by id

   if @debugMode = 'false'
   begin
    exec dbo.paymentCRUD 0,  
     @paymentType = @paymentType,
     @officialName = @officialName,
     @officialDepositCode = @officialDepositCode,
     @officialBankCode = @officialBankCode,
     @voucherDate = @voucherDate,
     @voucherNumber = @voucherNumber,
     @payee = @payee,
     @amount = @amount,
     @debitAcct = @debitAcct,
     @creditAcct = @creditAcct,
     @postResult = @resultStringToken output

    insert @results select dbo.readString('@code=',@resultStringToken),@resultStringToken

    end

    delete @wt where id = @idToken
  end

 if exists(select * from @results where code = 1)
  select '@code=0;@message=Finished but with errors;'
 else
  select '@code=0;@message=Finished without errors;'
 
 return
end