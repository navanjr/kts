create procedure dbo.receiptCRUD(
 @mode int,
 @receiptId int = 0,
 @series varchar(50) = '',
 @deletePosted varchar(10) = 'FALSE',
 @voidReceipt varchar(5) = 'FALSE',
 @debugMode varchar(5) = 'FALSE',
 @newReceiptId int = 0 output,
 @newJeId int = 0 output,
 @invoiceId int = 0,
 @refundAmount money = 0,
 @voidFees int = 0,
 @blob varchar(8000)=''
) as
/*
 remember
  C = 0
  R = 1
  U = 2
  D = 3
*/
begin
 
  exec dbo.logit @@procid, '@mode',@mode

 declare 
  @slink varchar(15) = 'o' + cast(@receiptId as varchar),
  @receiptType varchar(50),
  @comments varchar(250)  = ''

 select @comments = dbo.readstring('@comments=',@blob)

         declare @jeType varchar(50),
                 @accountDesc varchar(50) = '',
                 @resultCode varchar(50) = '',
                 @resultMessage varchar(1000) = '',
                 @newId int = '',
                 @receiptSLink varchar(16) = 'o'+cast(@receiptId as varchar(15))

 select @receiptType = key3 from object where id = @receiptId and typ = 4502

-- Create
 if @mode = 0
 begin
  -- bail if no series
  if len(@series)<2
   return


  insert object (typ,key1,key3,olink1,e2,d1) select 4502,'00000',upper(@series),'newReceipt',@blob,@comments  
  set @newReceiptId = (select top 1 id from object where typ=4502 and olink1='newReceipt' order by id desc)  
  update object set olink1 = '' where typ=4502 and id = @newReceiptId
  return
 end


-- Refund
 if @mode = 1 and @receiptId > 0 
    begin
     if @debugMode = 'FALSE' 
       begin
          if @receiptType <> 'TAX' and exists(select * from gldetail where slink='o'+cast(@receiptId as varchar) and isnull(bsId,0)>0)
          begin
           select '@code=1;@message=Money from this receipt has already been apportioned aborting cancel request.;'
           return
          end

          if @receiptType <> 'TAX' and exists(select * from journallink where receiptid=@receiptId)
          begin
           select '@code=1;@message=This receipt has already been cancelled or modified aborting cancel request. ;'
           return
          end

         -- create new JE
               	select  @jeType = case when key3='Tax' then 'Tax Refund' else 'Receipt Cancel' end, 
                        @accountDesc = case when key3='Tax' then 'Tax Receipt Refund Control #' else rtrim(key3)+' Receipt Cancel Receipt #' end+cast(key1 as varchar) 
                 from object where id = @receiptId 
            exec dbo.journalEntryCRUD
                 @mode = 0,
                 @description = @accountDesc,
                 @jeType = @jeType,
                 @resultCode = @resultCode output,
                 @resultMessage = @resultMessage output,
                 @newId = @newId output
                 select @slink = 'o' + cast(@newId as varchar)

         -- Refund a portion of an invoice
         if @invoiceId > 0
         begin

         -- create journalLinks
                insert into journalLink
                  select @newId,invoiceId,methodRate,receiptId from receiptlink where receiptId = @receiptId and invoiceId=@invoiceId

         -- If no refund Amount entered then adjust out sub invoices as well    
            if @refundAmount <= 0.00
             begin
           -- create journalLinks
                insert into journalLink
                  select @newId,invoiceId,methodRate,receiptId from receiptlink where receiptId = @receiptId and invoiceId 
                   in (select id from invoices where invoiceId=@invoiceId)

             end
         -- create gldetailstage linked to journallink
                  insert into gldetailstage(accountId,accountCode,accountDesc,amount,slink,contraId,sourcecode,slink2)
                  select a.accountId,a.accountCode,a.accountDesc,case when @refundAmount > 0.00 then @refundAmount*-1 else amount*-1 end,'j'+cast(j.id as varchar),contraId,sourcecode,@receiptSLink
                  from glDetail g ,receiptlink r,journalLink j, glaccounts a 
                         where g.accountcode=a.accountcode and 
                          j.jeId = @newId and j.invoiceId = r.invoiceId and r.receiptId = @receiptId and g.slink = 'l'+CAST(r.id as varchar) and a.accounttype='ACCRUED RECEIVABLE'

                  insert into gldetailstage(accountId,accountCode,accountDesc,amount,slink,contraId,sourcecode,slink2)
                  select a.accountId,a.accountCode,a.accountDesc,case when @refundAmount > 0.00 then @refundAmount else amount*-1 end,'j'+cast(j.id as varchar),contraId,sourcecode,@receiptSLink 
                  from glDetail g ,receiptlink r,journalLink j, glaccounts a 
                         where g.accountcode=a.accountcode and 
                          j.jeId = @newId and j.invoiceId = r.invoiceId and r.receiptId = @receiptId and g.slink = 'l'+CAST(r.id as varchar)  and a.accounttype='RECEIVABLE'

         -- create gldetailstaged linked to collection account
                insert into gldetailstage(accountId,accountCode,accountDesc,amount,slink,slink2)
                  select contraId,
                   isnull((select accountCode from glaccounts where accountId=contraId),''),
                   isnull((select accountDesc from glaccounts where accountId=contraId),''),
                   case when @refundAmount > 0.00 then @refundAmount else amount end,
                   'o'+cast(@newId as varchar),@receiptSLink 
                   from glDetail g ,receiptlink r,journalLink j, glaccounts a 
                         where g.accountcode=a.accountcode and j.jeId = @newId and j.invoiceId = r.invoiceId and r.receiptId = @receiptId
                            and left(g.slink,1)='l' and dbo.slinkid(g.slink)=r.id
                            and a.accounttype='ACCRUED RECEIVABLE'
          if isnull(@voidFees,0) = 1
          begin
           -- create journalLinks
                insert into journalLink
                  select distinct @newId,invoiceId,methodRate,receiptId from receiptlink where receiptId = @receiptId and invoiceId in (select id from invoices where invoiceid=@invoiceId)

           -- create gldetailstage linked to journallink
                  insert into gldetailstage(accountId,accountCode,accountDesc,amount,slink,contraId,sourcecode,slink2)
                  select a.accountId,a.accountCode,a.accountDesc, amount*-1,'j'+cast(j.id as varchar),contraId,sourcecode,@receiptSLink 
                    from glDetail g, receiptlink r, journalLink j, glaccounts a 
                         where g.accountcode=a.accountcode 
                           and j.jeId = @newId 
                           and j.invoiceId = r.invoiceId 
                           and r.invoiceId in (select id from invoices where invoiceid=@invoiceId) 
                           and g.slink = 'l'+CAST(r.id as varchar) 
                           and a.accounttype='ACCRUED RECEIVABLE'
                           and r.receiptId = @receiptId

                  insert into gldetailstage(accountId,accountCode,accountDesc,amount,slink,contraId,sourcecode,slink2)
                  select a.accountId,a.accountCode,a.accountDesc,amount*-1,'j'+cast(j.id as varchar),contraId,sourcecode,@receiptSLink 
                    from glDetail g ,receiptlink r,journalLink j, glaccounts a 
                         where g.accountcode=a.accountcode 
                           and j.jeId = @newId 
                           and j.invoiceId = r.invoiceId 
                           and r.invoiceId in (select id from invoices where invoiceid=@invoiceId) 
                           and g.slink = 'l'+CAST(r.id as varchar) 
                           and a.accounttype='RECEIVABLE'
                           and r.receiptId = @receiptId

           -- create gldetailstaged linked to collection account
                insert into gldetailstage(accountId,accountCode,accountDesc,amount,slink,slink2)
                  select contraId,
                   isnull((select accountCode from glaccounts where accountId=contraId),''),
                   isnull((select accountDesc from glaccounts where accountId=contraId),''),
                   amount,
                   'o'+cast(@newId as varchar),@receiptSLink 
                   from glDetail g ,receiptlink r,journalLink j, glaccounts a 
                         where g.accountcode=a.accountcode 
                           and j.jeId = @newId 
                           and j.invoiceId = r.invoiceId 
                           and r.invoiceId in (select id from invoices where invoiceid=@invoiceId) 
                           and left(g.slink,1)='l' 
                           and dbo.slinkid(g.slink)=r.id
                           and a.accounttype='ACCRUED RECEIVABLE'
                           and r.receiptId = @receiptId
          end

         end
         else
         begin

         -- create journalLinks
                insert into journalLink
                  select @newId,invoiceId,methodRate,receiptId from receiptlink where receiptId = @receiptId 

            if @receiptType <> 'TAX' 
            begin
                insert into journalLink
                  select @newId,0,0,@receiptId
            end


         -- create gldetailstaged linked to object record
                insert into gldetailstage(accountId,accountCode,accountDesc,amount,slink,slink2,contraId)
                  select accountId,accountCode,accountDesc,amount*-1,'o'+cast(@newId as varchar),@receiptSLink,contraId from gldetail where slink = @receiptSLink
                        and accountCode not in (select accountCode from glaccounts where accountType='SUSPENSE')

         -- create gldetailstage linked to penalty invoice
                insert into gldetailstage(accountId,accountCode,accountDesc,amount,slink,contraId)
                  select accountId,accountCode,accountDesc,amount*-1,slink,contraId from gldetail where slink in 
                    (select 't'+cast(r.invoiceId as varchar) from receiptLink r,invoices i  where r.receiptId = @receiptId and r.invoiceId = i.ID and i.TYP = 'p')

         -- create gldetailstage linked to journallink
                  insert into gldetailstage(accountId,accountCode,accountDesc,amount,slink,contraId,sourcecode,slink2)
                  select accountId,accountCode,accountDesc,amount*-1,'j'+cast(j.id as varchar),contraId,sourcecode,@receiptSLink from glDetail g ,receiptlink r,journalLink j
                         where j.jeId = @newId and j.invoiceId = r.invoiceId and r.receiptId = @receiptId and j.receiptId=r.receiptId 
                            and left(g.slink,1)='l' and dbo.slinkid(g.slink)=r.id
         end
         select '@code=0;@message=Created Journal Entry;@jeId='+cast(@newId as varchar(15))+';'
        end
      else
        begin
       select  'Tax Refund','Tax Receipt Refund Control #'+cast(key1 as varchar) from object where id = @receiptId
       select @newId,invoiceId,methodRate,receiptId from receiptlink where receiptId = @receiptId 
       select accountId,accountCode,accountDesc,amount*-1,'o'+cast(@newId as varchar) from gldetail where slink = 'o'+cast(@receiptId as varchar)
       union
       select accountId,accountCode,accountDesc,amount*-1,slink from gldetail where slink in 
                    (select 't'+cast(r.invoiceId as varchar) from receiptLink r,invoices i  where r.receiptId = @receiptId and r.invoiceId = i.ID and i.TYP = 'p')

        select accountId,accountCode,accountDesc,amount*-1,'j'+cast(j.id as varchar),contraId,sourcecode from glDetail g ,receiptlink r,journalLink j
               where j.jeId = @newId and j.invoiceId = r.invoiceId 
                 and left(g.slink,1)='l' and dbo.slinkid(g.slink)=r.id

       select * from glDetail 
               where slink in (select slink from receiptSLinks(@receiptId)) and left(slink,1) not in ('o','t')
                     and slink not in 
                    (select 't'+cast(r.invoiceId as varchar) from receiptLink r,invoices i  where r.receiptId = @receiptId and r.invoiceId = i.ID and i.TYP <> 'p')


        return
    
        end
    end


-- Delete
 if @mode = 3 or @mode = 6
 begin
-- bail if posted and @deletePosted = 'False'
  if dbo.isPosted(@slink) = 'TRUE' and @deletePosted = 'False'
  begin
   exec dbo.logit @@procid, 'Receipt Posted... Bailing.'
   return
  end

-- bail if period is locked
  if (select fpStatus from dbo.glStatus(@slink)) = 'locked'
  begin
   exec dbo.logit @@procid, 'Period is locked... Bailing.'
   return
  end

-- bail if receipt apportioned
  if exists(select * from gldetail where slink=@slink and isnull(bsId,0)>0)
  begin
   exec dbo.logit @@procid, 'Receipt has been apportioned... Bailing.'
   select '@code=1;@message=Receipt has been apportioned, aborting delete;'
   return
  end
  
  declare @receiptlinks table (slink varchar(15))
  insert @receiptlinks
   select 'l'+cast(id as varchar) from receiptlink where receiptid = @receiptId

  if exists(select * from gldetail g, @receiptlinks rl where g.slink = rl.slink and isnull(bsId,0)>0)
  begin
   exec dbo.logit @@procid, 'Receipt has been apportioned... Bailing.'
   select '@code=1;@message=Receipt has been apportioned, aborting delete;'
   return
  end

  declare
   @tokenSlink varchar(15),
   @token int,
   @tokenInt int
--   @tokenReceiptLink int

-- get all the slinks effected by this invoice
 -- invoices
  declare @slinks table(
   id int identity(1,1),
   slink varchar(15),
   parentInvoiceId int,
   invoiceType varchar(50),
   processFlag int default 0
  )
  insert @slinks (slink) select slink from receiptSLinks(@receiptId)
  -- get the parent InvoiceId and typ to know what invoice are fee/penalty invoices
  update a set a.parentInvoiceId = b.invoiceId, a.invoiceType = b.typ 
   from @slinks a, invoices b where dbo.slinkId(a.slink) = b.id and dbo.slinkType(a.slink) = 't'

  exec dbo.logit @@procid, 'Begin Transaction...'
  begin transaction

-- remove fee/penalty invoices and their GL, but only if they are not tax receipts
  if @receiptType not in ('TAX')
  begin
   while exists(select * from @slinks where dbo.slinkType(slink) = 't' and parentInvoiceId > 0 and invoiceType = 'F' and processFlag = 0)
   begin 
    select top 1 @token = id, @tokenSlink = slink, @tokenInt = dbo.slinkId(slink)
     from @slinks where dbo.slinkType(slink) = 't' and parentInvoiceId > 0 and invoiceType = 'F' and processFlag = 0
    if not isnull((select fpStatus from dbo.glStatus(@tokenSlink)),'') = 'locked'
    begin
     exec invoiceCRUD 3, @invoiceId = @tokenInt, @postCheckOverride = 0
    end
    update @slinks set processFlag = 1 where id = @token
   end
  end

-- remove penalty invoices and their GL, but only if they are linked to this receipt
   while exists(select * from @slinks where dbo.slinkType(slink) = 't' and parentInvoiceId > 0 and invoiceType = 'P' and processFlag = 0)
   begin 
    select top 1 @token = id, @tokenSlink = slink, @tokenInt = dbo.slinkId(slink)
     from @slinks where dbo.slinkType(slink) = 't' and parentInvoiceId > 0 and invoiceType = 'P' and processFlag = 0
    if not isnull((select fpStatus from dbo.glStatus(@tokenSlink)),'') = 'locked'
    begin
     exec invoiceCRUD 3, @invoiceId = @tokenInt, @postCheckOverride = 0
    end
    update @slinks set processFlag = 1 where id = @token
   end

-- remove paid records
   update paid set slink = case when @voidReceipt = 'TRUE' then 'o'+cast(mailLogId as varchar) else null end where slink = 'o'+cast(@receiptId as varchar) and isnull(mailLogId,0)>0
   delete from paid where slink = 'o'+cast(@receiptId as varchar) and isnull(mailLogId,0)=0

--remove receiptLinks and their GL
  while exists(select * from @slinks where dbo.slinkType(slink) = 'l' and processFlag = 0)
  begin 
   select top 1 @token = id, @tokenSlink = slink from @slinks where dbo.slinkType(slink) = 'l' and processFlag = 0
   if not isnull((select fpStatus from dbo.glStatus(@tokenSlink)),'') = 'locked'
   begin
    delete glDetail where slink = @tokenSlink
    delete glDetailStage where slink = @tokenSlink
    if @voidReceipt = 'FALSE'
     update receiptLink set invoiceId=invoiceId*-1,receiptId=receiptId*-1 where receiptId = @receiptId and id = dbo.slinkId(@tokenSlink)
   end
   update @slinks set processFlag = 1 where id = @token
  end

--remove receipt(object) and gl
  while exists(select * from @slinks where dbo.slinkType(slink) = 'o' and processFlag = 0)
  begin 
   select top 1 @token = id, @tokenSlink = slink from @slinks where dbo.slinkType(slink) = 'o' and processFlag = 0
   if not isnull((select fpStatus from dbo.glStatus(@tokenSlink)),'') = 'locked'
   begin
    if @voidReceipt = 'FALSE'
    begin
     update object set typ = -4502 where typ = 4502 and id = dbo.slinkId(@tokenSlink)
     delete paid where slink = @tokenSlink and isnull(mailLogId,0)=0
     update paid set slink = null where slink = @tokenSlink and isnull(mailLogId,0)>0
    end
    else
    begin
     update object set a17 = 'VOID' where typ = 4502 and id = dbo.slinkId(@tokenSlink)
     update paid set amount = 0 where slink = @tokenSlink and isnull(mailLogId,0)=0
     update paid set slink = null where slink = @tokenSlink and isnull(mailLogId,0)>0
    end
    delete receiptDetail where slink = @tokenSlink
    delete glDetail where slink = @tokenSlink
    delete glDetailStage where slink = @tokenSlink
   end
   update @slinks set processFlag = 1 where id = @token
  end

--recalc Tax invoices
  while exists(select * from @slinks where dbo.slinkType(slink) = 't' and processFlag = 0)
  begin 
   select top 1 @token = id, @tokenInt = dbo.slinkId(slink) from @slinks where dbo.slinkType(slink) = 't' and processFlag = 0
   exec dbo.invoiceUpdate @tokenInt
   update @slinks set processFlag = 1 where id = @token
  end

  if @debugMode = 'TRUE'
  begin
   exec dbo.logit @@procid, 'Rollback Transaction...'
   rollback transaction
   return
  end 

  if @receiptType in ('TAX')
   exec dbo.apiDeletedProc 'o', @receiptId, 'receipts'

  if @mode = 6
  begin
    update object set a17='Abandoned' where id = @receiptId
  end

  exec dbo.logit @@procid, 'Commit Transaction...'
  commit transaction

 end


-- Adjust Apportionment
 if @mode = 5 and @receiptId > 0
    begin
     if @debugMode = 'FALSE' 
       begin

         -- create new JE
               	select  @jeType = 'Adjust Apportionment', @accountDesc = 'Adjust Apportionment Receipt #'+cast(key1 as varchar) from object where id = @receiptId 
            exec dbo.journalEntryCRUD
                 @mode = 0,
                 @description = @accountDesc,
                 @jeType = @jeType,
                 @resultCode = @resultCode output,
                 @resultMessage = @resultMessage output,
                 @newId = @newId output

                 select @slink = 'o' + cast(@newId as varchar)


         -- create journalLinks
                insert into journalLink
                  select @newId,0,0,@receiptId  

         -- create gldetailstaged linked to object record
                insert into gldetailstage(accountId,accountCode,accountDesc,amount,slink,contraId,sourcecode,slink2)
                  select accountId,accountCode,accountDesc,amount*-1,@slink,contraId,sourcecode,@receiptSLink from gldetail g, journallink j 
                     where g.slink = @receiptSLink
                        and j.receiptId=@receiptId  
                        and g.accountCode in (select accountCode from glaccounts where accountType in ('ACCRUED RECEIVABLE','FUND'))

         select '@code=0;@message=Created Journal Entry;@jeId='+cast(@newId as varchar(15))+';'
        end
   end


 return
end