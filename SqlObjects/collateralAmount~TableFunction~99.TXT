create function dbo.collateralAmount(@effectiveDate int)
returns @rt table(id int identity(1,1),
                  bankAccountCode varchar(60),
                  bankAccountDesc varchar(50),
                  bankName varchar(50),
                  glBalance money,
                  outstandingPayments money,
                  statementBalance money,
                  amount money,
                  collateralAmount money,
                  FDICAmount money,
                  notCoveredAmount money,
                  unusedCollateral money,
                  bankPercent numeric(19,12),
                  CDARS varchar(5),
                  processcode int,
                  bankAccountType varchar(50))
as
begin
declare @collateralDetail table(key1 varchar(60),
                                key2 varchar(60),
                                key3 varchar(60),
                                a1 varchar(50),
                                a2 money,
                                collaterallAmount money)

declare @collateral table(bankName varchar(50),
                          amount money,
                          totalCollateral money)

declare @FDIC table(bankName varchar(50),
                          totalFDIC money)

declare @bankNameToken varchar(50),
        @bankGlBalance money,
        @bankCollateral money,
        @collateralDifference money,
        @bankFDIC money,
        @FDICDifference money,
        @idToken int,
        @bankCollateralAmount money

insert @collateralDetail                          
 select key1,key2,key3,a1,case when isnumeric(a2)=1 then cast(a2 as money) else 0 end,
 case when isnumeric(a2)=1 then cast(a2 as money)*
   isnull((select case when isnumeric(ct.key2)=1 and cast(ct.key2 as money)<>0.00 then 100/cast(ct.key2 as money) else 1 end from object ct where ct.typ=4708 and ct.key1 = o.a1 and o.a1 > ' 0'),1) 
  else 0 end
 from object o where typ=4707
        

insert @rt (bankAccountCode, bankAccountDesc, bankName, glBalance, outstandingPayments, statementBalance, processcode, notCoveredAmount, unusedCollateral,CDARS,bankAccountType)
 select accountCode,
        accountDesc,
        bankName, 
        isnull((select sum(g.amount) from gldetail g where g.[date]<=@effectiveDate and g.accountcode=a.accountcode),0),
        isnull((select sum(g.amount*-1) from gldetail g where g.[date]<=@effectiveDate and g.accountcode=a.accountcode and amount < 0.00 and isnull(bsId,0)=0),0),
        isnull((select sum(g.amount) from gldetail g where g.[date]<=@effectiveDate and g.accountcode=a.accountcode and (amount > 0.00 or isnull(bsId,0)>0)),0),
        0,0.00,0.00,CDARS,a.accounttype
 from glaccounts a
  where a.accounttype in (select accounttype from dbo.glbankfundtypes('BANK') where accounttype not in ('SUSPENSE','CASH'))
 group by a.accountcode,a.accountdesc,a.bankName,a.CDARS,a.accounttype

delete from @rt where statementBalance = 0.00

insert @collateral                          
 select key1,
 sum(a2),
 sum(collaterallAmount)
 from @collateralDetail where a1<>'FDIC' and key2<=@effectiveDate and (key3 >= @effectiveDate or key3 <'1')
  group by key1
  
insert @collateral 
 select distinct bankName,0,0 from @rt where bankName not in (select bankName from @collateral)

insert @FDIC
 select key1, sum(case when isnumeric(a2)=1 then cast(a2 as money) else 0 end) 
 from object where typ=4707 and a1='FDIC' and key2<=@effectiveDate and (key3 >= @effectiveDate or key3 <'1')
  group by key1
  
insert @FDIC
 select distinct bankName,0 from @rt where bankName not in (select bankName from @FDIC)

 update r set processcode=1
 from @rt r
   where r.CDARS='CDARS'
                          

while exists(select * from @rt where processcode=0 and CDARS<>'CDARS')
begin
 select top 1 @bankNameToken=bankName, @idToken=id from @rt where processcode=0
 
 select @bankGlBalance = sum(statementBalance) from @rt where bankName=@bankNameToken and CDARS<>'CDARS'

 select top 1 @bankCollateralAmount = isnull(amount,0.00) from @collateral where bankName=@bankNameToken
 select top 1 @bankCollateral = isnull(totalCollateral,0.00) from @collateral where bankName=@bankNameToken
 select top 1 @bankFDIC = isnull(totalFDIC,0.00) from @FDIC where bankName=@bankNameToken
 
 if @bankGlBalance > 0.00
 begin
 update r set processcode=1, 
  bankPercent = r.statementBalance/@bankGlBalance,
  amount = round(@bankCollateralAmount*r.statementBalance/@bankGlBalance,2),
  collateralAmount = round(@bankCollateral*r.statementBalance/@bankGlBalance,2),
  FDICAmount = round(@bankFDIC*r.statementBalance/@bankGlBalance,2)
 from @rt r
   where r.bankName=@bankNameToken and r.CDARS<>'CDARS'
 end
 else
 begin
 update r set processcode=1, 
  bankPercent = 0.00,
  amount = 0.00,
  collateralAmount = 0.00,
  FDICAmount = 0.00
 from @rt r
   where r.bankName=@bankNameToken
 end
 
 if isnull((select sum(collateralAmount) from @rt where bankName=@bankNameToken),0.00)<> @bankCollateral 
  begin
   select @collateralDifference = @bankCollateral-sum(collateralAmount) from @rt where bankName=@bankNameToken
   
   update @rt set collateralAmount=collateralAmount+@collateralDifference where id=@idToken
  end

 if isnull((select sum(FDICAmount) from @rt where bankName=@bankNameToken),0.00)<> @bankFDIC 
  begin
   select @FDICDifference = @bankFDIC-sum(FDICAmount) from @rt where bankName=@bankNameToken
   
   update @rt set FDICAmount=FDICAmount+@FDICDifference where id=@idToken
  end

end

update @rt set FDICAmount=statementBalance where CDARS='CDARS'

update @rt set notCoveredAmount=isnull(statementBalance,0)-(isnull(collateralAmount,0)+isnull(FDICAmount,0)) where isnull(statementBalance,0.00) > isnull(collateralAmount,0)+isnull(FDICAmount,0)

update @rt set unusedCollateral=(isnull(statementBalance,0)-(isnull(collateralAmount,0)+isnull(FDICAmount,0)))*-1 where isnull(statementBalance,0.00) < isnull(collateralAmount,0)+isnull(FDICAmount,0)

return
end