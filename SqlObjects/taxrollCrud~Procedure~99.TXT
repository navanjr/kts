create procedure dbo.taxrollCRUD (
 @method varchar(50) = '',
 @fileName varchar(max) = null,
 @taxYear int = 0
 )
as
begin
 set nocount on
 
 exec dbo.logit @@procid, 'taxrollCRUD...','@method',@method
  
 declare
  @cmd varchar(8000),
  @cmdOutput varchar(8000),
  @gitRepo varchar(max) = (select path from dbo.paths() where name = 'gitRepo'),
  @assessorSys varchar(50) = dbo.settingsf('taxroll.assessorSys','state')

-- update adtax info from adtaxCheck
 if @method = 'updateFromAdtaxCheck' and isnull(@taxyear,0) > 0 
   begin
    update a set
	a.[RECORDTYPE] = c.[RECORDTYPE],
	a.[ADDITIONNUMBER] = c.[ADDITIONNUMBER],
	a.[TOWNSHIPBLOCK] = c.[TOWNSHIPBLOCK],
	a.[RANGELOT] = c.[RANGELOT],
	a.[SECTIONNUMBER] = c.[SECTIONNUMBER],
	a.[QTRSECTIONNUMBER] = c.[QTRSECTIONNUMBER],
	a.[PARCELNUMBER] = c.[PARCELNUMBER],
	a.[PROPERTYSPLIT] = c.[PROPERTYSPLIT],
	a.[FULLPIDNUMBER] = c.[FULLPIDNUMBER],
	a.[PIDSORTNUMBER] = c.[PIDSORTNUMBER],
	--a.[ITEMNUMBER] = c.[ITEMNUMBER],
	--a.[REALTAXYEAR] = c.[REALTAXYEAR],
	a.[OWNERNAME] = c.[OWNERNAME],
	a.[BUSINESSNAME] = c.[BUSINESSNAME],
	a.[ADDRESS1] = c.[ADDRESS1],
	a.[ADDRESS2] = c.[ADDRESS2],
	a.[ADDRESS3] = c.[ADDRESS3],
	a.[CITY] = c.[CITY],
	a.[STATE] = c.[STATE],
	a.[ZIP1] = c.[ZIP1],
	a.[ZIP2] = c.[ZIP2],
	a.[ZIP3] = c.[ZIP3],
	a.[COUNTRY] = c.[COUNTRY],
	a.[ORGSCHOOLDISTRICTMAIN] = c.[ORGSCHOOLDISTRICTMAIN],
	a.[SCHOOLDISTRICTMAIN] = c.[SCHOOLDISTRICTMAIN],
	a.[ORGSCHOOLDISTRICTTAXRATE] = c.[ORGSCHOOLDISTRICTTAXRATE],
	a.[SCHOOLDISTRICTTAXRATE] = c.[SCHOOLDISTRICTTAXRATE],
	a.[FIREDISTRICT] = c.[FIREDISTRICT],
	a.[MORTGAGECODE] = case when dbo.settingsf('taxroll.ignoreAsessorMtgCodes','TRUE')='TRUE' THEN 0 ELSE c.[MORTGAGECODE] END,
	a.[OWNERNUMBER] = c.[OWNERNUMBER],
	a.[ACRES] = c.[ACRES],
	a.[LOTS] = c.[LOTS],
	a.[MFGHOMEASSESSED] = c.[MFGHOMEASSESSED],
	a.[GROSSASSESSED] = c.[GROSSASSESSED],
	a.[FREEPORTEXEMPTION] = c.[FREEPORTEXEMPTION],
	a.[BASEEXEMPTION] = c.[BASEEXEMPTION],
	a.[DBLEXEMPTION] = c.[DBLEXEMPTION],
	a.[EXEMPTION1] = c.[EXEMPTION1],
	a.[EXEMPTION2] = c.[EXEMPTION2],
	a.[EXEMPTION3] = c.[EXEMPTION3],
	a.[NETASSESSEDVALUE] = c.[NETASSESSEDVALUE],
	a.[TOTALTAXRATE] = c.[TOTALTAXRATE],
	a.[ORIGINALTOTALDUE] = c.[ORIGINALTOTALDUE],
	a.[TOTALDUE] = c.[TOTALDUE],
	a.[BALANCEDUE] = c.[BALANCEDUE],
	a.[CERTIFICATENUMBER] = c.[CERTIFICATENUMBER],
	a.[PAIDOFFDATE] = c.[PAIDOFFDATE],
	a.[PROPERTYLIENCODE1] = c.[PROPERTYLIENCODE1],
	a.[PROPERTYLIENAMOUNT1] = c.[PROPERTYLIENAMOUNT1],
	a.[PROPERTYLIENCODE2] = c.[PROPERTYLIENCODE2],
	a.[PROPERTYLIENAMOUNT2] = c.[PROPERTYLIENAMOUNT2],
	a.[LASTTRANDATE] = c.[LASTTRANDATE],
	a.[TAXCORRECTIONDATE] = c.[TAXCORRECTIONDATE],
	a.[TAXCORRECTIONINITIALS] = c.[TAXCORRECTIONINITIALS],
	a.[FLAG1] = c.[FLAG1],
	a.[FLAG2] = c.[FLAG2],
	a.[FLAG3] = c.[FLAG3],
	a.[LEGALDESCRIPTION] = c.[LEGALDESCRIPTION],
	a.[proploc] = c.[proploc],
	a.[LandAssessed] = c.[LandAssessed],
	a.[ImprovedAssessed] = c.[ImprovedAssessed],
	a.[MiscAssessed] = c.[MiscAssessed]
    from adtax a
     join adtaxCheck c on a.REALTAXYEAR = c.realtaxyear and a.ITEMNUMBER = c.itemnumber
    where a.recordType > '  0'
     and a.id not in (select i.taxrollid from invoices i where i.typ<>'s')
     and a.REALTAXYEAR = @taxyear

   exec dbo.logit @@procid, 'updated adtax from adtaxCheck... @@rowCount', @@rowCount
  end

-- prep table for taxLevyCheck
 if @method = 'prepTaxLevy'
   begin
    if exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[taxLevyCheck]') and OBJECTPROPERTY(id, N'IsTable') = 1)    
     delete from dbo.taxLevyCheck

    if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[taxLevyCheck]') and OBJECTPROPERTY(id, N'IsTable') = 1)   
     create table taxLevyCheck(
      taxAreaCode varchar(10),
      SchoolDistrict varchar(50),
      TaxRate varchar(50))
   end

-- prep table for taxLevyCheckDefault
 if @method = 'prepTaxLevyDefault'
   begin
    if exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[taxLevyCheckDefault]') and OBJECTPROPERTY(id, N'IsTable') = 1)    
     delete from dbo.taxLevyCheckDefault

    if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[taxLevyCheckDefault]') and OBJECTPROPERTY(id, N'IsTable') = 1)   
     create table taxLevyCheckDefault(
      School varchar(20),
      MillageName varchar(20),
      TaxRate varchar(50),
      TotalTaxRate varchar(50))
   end

-- update adtaxcheck from taxlevyCheck school district and taxrate 
 if @method = 'setLevy'
  begin
   if exists(select * from taxLevyCheck)
     update a set 
       a.ORGSCHOOLDISTRICTMAIN = left(l.schoolDistrict,20),
       a.SCHOOLDISTRICTMAIN = left(l.schoolDistrict,20),
       a.ORGSCHOOLDISTRICTTAXRATE = left(l.taxRate,20),
       a.SCHOOLDISTRICTTAXRATE = left(l.taxRate,20)
       from adtaxCheck a join taxLevyCheck l on l.taxAreaCode = a.pidSortNumber 
  end


-- import taxroll to adtaxCheck...
 if @method = 'importTax'
  begin
   set @cmd = 'conv '+ case when @assessorSys = 'LandMark' then 'importGSITax'  when @assessorSys = 'Default' then 'importDEFTax'  else 'importTax' end
   exec dbo.ktsBat @cmd, @output = @cmdOutput OUTPUT
  return
 end

-- clear adtaxCheck...a
 if @method = 'dropAdtaxCheck'
  begin
   exec dbo.logit @@procid, 'taxrollCRUD... @method',@method,'@taxYear',@taxYear
  
   if @taxYear>0
    delete from adtaxCheck where realtaxyear=@taxYear
   else
    drop table dbo.adtaxCheck

   return
  end

-- import tax levies to taxLevyimport...
 if @method = 'importTaxLevy'
  begin
   set @cmd = 'conv importTaxLv'
   exec dbo.ktsBat @cmd, @output = @cmdOutput OUTPUT, @silentmode='TRUE'

   declare @year varchar(4) = left(dbo.pathFile(dbo.settingsF('taxroll.importTaxLevyFile',''),'file'),4)

   if isnumeric(@year)=1
   begin
    exec dbo.taxRateImport @year, 'TaxLevyImport'
   end
  return
 end

 

-- move records from adtaxCheck into adtax...
 if @method = 'adTaxAddArchive'
 begin
    
    if dbo.settingsf('site.taxRollUseAdvance936Amounts','FALSE') = 'TRUE'
     begin
       UPDATE adtaxCheck 
        SET totaldue = cast(gsi_advancetax as money), 
            balancedue = cast(gsi_advancetax as money) 
        WHERE recordtype in ('P', 'M', 'R')  AND cast(gsi_advancetax as money) > 0
     end


    exec dbo.logit @@procid, 'taxrollCRUD... @method', @method
    delete from adtaxcheck where cast(realtaxyear as varchar)+''+cast(itemnumber as varchar) 
     in (select cast(realtaxyear as varchar)+''+cast(itemnumber as varchar) from adtax)

    delete from adtaxcheck where cast(realtaxyear as varchar)+''+cast(itemnumber as varchar) 
     in (select cast(realtaxyear as varchar)+''+cast(itemnumber as varchar) from adtaxarchive)

   if exists(select * from adtaxCheck)
    insert into adtax
     ([RECORDTYPE],[FULLPIDNUMBER],[ITEMNUMBER],[REALTAXYEAR],[OWNERNAME],[ADDRESS1],[ADDRESS2],[ADDRESS3],[CITY],[STATE],[ZIP1],[ZIP2]
      ,[ORGSCHOOLDISTRICTMAIN],[SCHOOLDISTRICTMAIN],[ORGSCHOOLDISTRICTTAXRATE],[SCHOOLDISTRICTTAXRATE]
      ,[MORTGAGECODE],[ACRES],[MFGHOMEASSESSED],[GROSSASSESSED],[EXEMPTION1],[NETASSESSEDVALUE],[TOTALTAXRATE],[ORIGINALTOTALDUE],[TOTALDUE],[BALANCEDUE]
      ,[CERTIFICATENUMBER],[LEGALDESCRIPTION],	[ADDITIONNUMBER],[TOWNSHIPBLOCK],[RANGELOT],[SECTIONNUMBER],[QTRSECTIONNUMBER],[PARCELNUMBER],[PROPERTYSPLIT]
      ,[PIDSORTNUMBER],[BUSINESSNAME],[ZIP3],[COUNTRY],[FIREDISTRICT],[OWNERNUMBER],[LOTS]
      ,[FREEPORTEXEMPTION],[BASEEXEMPTION],[DBLEXEMPTION],[EXEMPTION2],[EXEMPTION3],[PAIDOFFDATE],[PROPERTYLIENCODE1],[PROPERTYLIENAMOUNT1]
      ,[PROPERTYLIENCODE2],[PROPERTYLIENAMOUNT2],[LASTTRANDATE],[TAXCORRECTIONDATE],[TAXCORRECTIONINITIALS],[FLAG1],[FLAG2],[FLAG3],[origin],proploc,landAssessed,miscAssessed,improvedAssessed,[PHYSICALSTREETNUMBER],[PHYSICALSTREET],[PHYSICALTOWN],PHYSICALSTREETDIRECTION)
     select 
      [RECORDTYPE],[FULLPIDNUMBER],[ITEMNUMBER],[REALTAXYEAR],[OWNERNAME],[ADDRESS1],[ADDRESS2],[ADDRESS3],[CITY],[STATE],[ZIP1],[ZIP2]
      ,[ORGSCHOOLDISTRICTMAIN],[SCHOOLDISTRICTMAIN],[ORGSCHOOLDISTRICTTAXRATE],[SCHOOLDISTRICTTAXRATE]
      ,case when dbo.settingsf('taxroll.ignoreAsessorMtgCodes','TRUE')='TRUE' THEN 0 ELSE [MORTGAGECODE] END,[ACRES],[MFGHOMEASSESSED],[GROSSASSESSED],[EXEMPTION1],[NETASSESSEDVALUE],[TOTALTAXRATE],[ORIGINALTOTALDUE],[TOTALDUE],[BALANCEDUE]
      ,[CERTIFICATENUMBER],[LEGALDESCRIPTION],	[ADDITIONNUMBER],[TOWNSHIPBLOCK],[RANGELOT],[SECTIONNUMBER],[QTRSECTIONNUMBER],[PARCELNUMBER],[PROPERTYSPLIT]
      ,'',[BUSINESSNAME],[ZIP3],[COUNTRY],[FIREDISTRICT],[OWNERNUMBER],[LOTS]
      ,[FREEPORTEXEMPTION],[BASEEXEMPTION],[DBLEXEMPTION],[EXEMPTION2],[EXEMPTION3],[PAIDOFFDATE],[PROPERTYLIENCODE1],[PROPERTYLIENAMOUNT1]
      ,[PROPERTYLIENCODE2],[PROPERTYLIENAMOUNT2],[LASTTRANDATE],[TAXCORRECTIONDATE],[TAXCORRECTIONINITIALS],[FLAG1],[FLAG2],[FLAG3],'Original Invoice',proploc,landAssessed,miscAssessed,improvedAssessed,[PHYSICALSTREETNUMBER],[PHYSICALSTREET],[PHYSICALTOWN],[PHYSICALSTREETDIRECTION]
      from adtaxcheck 
       where 1=1 
        and balancedue > 0.00
        and case when @taxYear>0 then @taxYear else realTaxYear end = realTaxYear

    insert into adtaxarchive
     ([ADTAXID],[RECORDTYPE],[FULLPIDNUMBER],[ITEMNUMBER],[REALTAXYEAR],[OWNERNAME],[ADDRESS1],[ADDRESS2],[ADDRESS3],[CITY],[STATE],[ZIP1],[ZIP2]
      ,[ORGSCHOOLDISTRICTMAIN],[SCHOOLDISTRICTMAIN],[ORGSCHOOLDISTRICTTAXRATE],[SCHOOLDISTRICTTAXRATE]
      ,[MORTGAGECODE],[ACRES],[MFGHOMEASSESSED],[GROSSASSESSED],[EXEMPTION1],[NETASSESSEDVALUE],[TOTALTAXRATE],[ORIGINALTOTALDUE],[TOTALDUE],[BALANCEDUE]
      ,[CERTIFICATENUMBER],[LEGALDESCRIPTION],	[ADDITIONNUMBER],[TOWNSHIPBLOCK],[RANGELOT],[SECTIONNUMBER],[QTRSECTIONNUMBER],[PARCELNUMBER],[PROPERTYSPLIT]
      ,[PIDSORTNUMBER],[BUSINESSNAME],[ZIP3],[COUNTRY],[FIREDISTRICT],[OWNERNUMBER],[LOTS]
      ,[FREEPORTEXEMPTION],[BASEEXEMPTION],[DBLEXEMPTION],[EXEMPTION2],[EXEMPTION3],[PAIDOFFDATE],[PROPERTYLIENCODE1],[PROPERTYLIENAMOUNT1]
      ,[PROPERTYLIENCODE2],[PROPERTYLIENAMOUNT2],[LASTTRANDATE],[TAXCORRECTIONDATE],[TAXCORRECTIONINITIALS],[FLAG1],[FLAG2],[FLAG3],[origin],proploc,landAssessed,miscAssessed,improvedAssessed,[PHYSICALSTREETNUMBER],[PHYSICALSTREET],[PHYSICALTOWN],PHYSICALSTREETDIRECTION)
     select 0,
      [RECORDTYPE],[FULLPIDNUMBER],[ITEMNUMBER],[REALTAXYEAR],[OWNERNAME],[ADDRESS1],[ADDRESS2],[ADDRESS3],[CITY],[STATE],[ZIP1],[ZIP2]
      ,[ORGSCHOOLDISTRICTMAIN],[SCHOOLDISTRICTMAIN],[ORGSCHOOLDISTRICTTAXRATE],[SCHOOLDISTRICTTAXRATE]
      ,case when dbo.settingsf('taxroll.ignoreAsessorMtgCodes','TRUE')='TRUE' THEN 0 ELSE [MORTGAGECODE] END,[ACRES],[MFGHOMEASSESSED],[GROSSASSESSED],[EXEMPTION1],[NETASSESSEDVALUE],[TOTALTAXRATE],[ORIGINALTOTALDUE],[TOTALDUE],[BALANCEDUE]
      ,[CERTIFICATENUMBER],[LEGALDESCRIPTION],	[ADDITIONNUMBER],[TOWNSHIPBLOCK],[RANGELOT],[SECTIONNUMBER],[QTRSECTIONNUMBER],[PARCELNUMBER],[PROPERTYSPLIT]
      ,'',[BUSINESSNAME],[ZIP3],[COUNTRY],[FIREDISTRICT],[OWNERNUMBER],[LOTS]
      ,[FREEPORTEXEMPTION],[BASEEXEMPTION],[DBLEXEMPTION],[EXEMPTION2],[EXEMPTION3],[PAIDOFFDATE],[PROPERTYLIENCODE1],[PROPERTYLIENAMOUNT1]
      ,[PROPERTYLIENCODE2],[PROPERTYLIENAMOUNT2],[LASTTRANDATE],[TAXCORRECTIONDATE],[TAXCORRECTIONINITIALS],[FLAG1],[FLAG2],[FLAG3],'Original Invoice',proploc,landAssessed,miscAssessed,improvedAssessed,[PHYSICALSTREETNUMBER],[PHYSICALSTREET],[PHYSICALTOWN],[PHYSICALSTREETDIRECTION]
      from adtaxcheck 
       where 1=1 
        and balancedue <= 0.00
        and case when @taxYear>0 then @taxYear else realTaxYear end = realTaxYear

    drop table adTaxCheck
  return
 end

-- move records from adtaxCheck into adtax...
 if @method = 'adTaxAdd'
 begin
    
    if dbo.settingsf('site.taxRollUseAdvance936Amounts','FALSE') = 'TRUE'
     begin
       UPDATE adtaxCheck 
        SET totaldue = cast(gsi_advancetax as money), 
            balancedue = cast(gsi_advancetax as money) 
        WHERE recordtype in ('P', 'M', 'R')  AND cast(gsi_advancetax as money) > 0
     end


    exec dbo.logit @@procid, 'taxrollCRUD... @method', @method
    delete from adtaxcheck where cast(realtaxyear as varchar)+''+cast(itemnumber as varchar) 
     in (select cast(realtaxyear as varchar)+''+cast(itemnumber as varchar) from adtax)

    delete from adtaxcheck where cast(realtaxyear as varchar)+''+cast(itemnumber as varchar) 
     in (select cast(realtaxyear as varchar)+''+cast(itemnumber as varchar) from adtaxarchive)

   if exists(select * from adtaxCheck)
    insert into adtax
     ([RECORDTYPE],[FULLPIDNUMBER],[ITEMNUMBER],[REALTAXYEAR],[OWNERNAME],[ADDRESS1],[ADDRESS2],[ADDRESS3],[CITY],[STATE],[ZIP1],[ZIP2]
      ,[ORGSCHOOLDISTRICTMAIN],[SCHOOLDISTRICTMAIN],[ORGSCHOOLDISTRICTTAXRATE],[SCHOOLDISTRICTTAXRATE]
      ,[MORTGAGECODE],[ACRES],[MFGHOMEASSESSED],[GROSSASSESSED],[EXEMPTION1],[NETASSESSEDVALUE],[TOTALTAXRATE],[ORIGINALTOTALDUE],[TOTALDUE],[BALANCEDUE]
      ,[CERTIFICATENUMBER],[LEGALDESCRIPTION],	[ADDITIONNUMBER],[TOWNSHIPBLOCK],[RANGELOT],[SECTIONNUMBER],[QTRSECTIONNUMBER],[PARCELNUMBER],[PROPERTYSPLIT]
      ,[PIDSORTNUMBER],[BUSINESSNAME],[ZIP3],[COUNTRY],[FIREDISTRICT],[OWNERNUMBER],[LOTS]
      ,[FREEPORTEXEMPTION],[BASEEXEMPTION],[DBLEXEMPTION],[EXEMPTION2],[EXEMPTION3],[PAIDOFFDATE],[PROPERTYLIENCODE1],[PROPERTYLIENAMOUNT1]
      ,[PROPERTYLIENCODE2],[PROPERTYLIENAMOUNT2],[LASTTRANDATE],[TAXCORRECTIONDATE],[TAXCORRECTIONINITIALS],[FLAG1],[FLAG2],[FLAG3],[origin],proploc,landAssessed,miscAssessed,improvedAssessed,[PHYSICALSTREETNUMBER],[PHYSICALSTREET],[PHYSICALTOWN],PHYSICALSTREETDIRECTION)
     select 
      [RECORDTYPE],[FULLPIDNUMBER],[ITEMNUMBER],[REALTAXYEAR],[OWNERNAME],[ADDRESS1],[ADDRESS2],[ADDRESS3],[CITY],[STATE],[ZIP1],[ZIP2]
      ,[ORGSCHOOLDISTRICTMAIN],[SCHOOLDISTRICTMAIN],[ORGSCHOOLDISTRICTTAXRATE],[SCHOOLDISTRICTTAXRATE]
      ,case when dbo.settingsf('taxroll.ignoreAsessorMtgCodes','TRUE')='TRUE' THEN 0 ELSE [MORTGAGECODE] END,[ACRES],[MFGHOMEASSESSED],[GROSSASSESSED],[EXEMPTION1],[NETASSESSEDVALUE],[TOTALTAXRATE],[ORIGINALTOTALDUE],[TOTALDUE],[BALANCEDUE]
      ,[CERTIFICATENUMBER],[LEGALDESCRIPTION],	[ADDITIONNUMBER],[TOWNSHIPBLOCK],[RANGELOT],[SECTIONNUMBER],[QTRSECTIONNUMBER],[PARCELNUMBER],[PROPERTYSPLIT]
      ,'',[BUSINESSNAME],[ZIP3],[COUNTRY],[FIREDISTRICT],[OWNERNUMBER],[LOTS]
      ,[FREEPORTEXEMPTION],[BASEEXEMPTION],[DBLEXEMPTION],[EXEMPTION2],[EXEMPTION3],[PAIDOFFDATE],[PROPERTYLIENCODE1],[PROPERTYLIENAMOUNT1]
      ,[PROPERTYLIENCODE2],[PROPERTYLIENAMOUNT2],[LASTTRANDATE],[TAXCORRECTIONDATE],[TAXCORRECTIONINITIALS],[FLAG1],[FLAG2],[FLAG3],'Original Invoice',proploc,landAssessed,miscAssessed,improvedAssessed,[PHYSICALSTREETNUMBER],[PHYSICALSTREET],[PHYSICALTOWN],[PHYSICALSTREETDIRECTION]
      from adtaxcheck 
       where 1=1 
        and case when @taxYear>0 then @taxYear else realTaxYear end = realTaxYear

    drop table adTaxCheck
  return
 end



end