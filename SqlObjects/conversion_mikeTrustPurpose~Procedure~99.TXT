create proc dbo.conversion_mikeTrustPurpose(
 @mode varchar(50) = 'conversion',
 @method varchar(5) = 'GET',
 @class varchar(50) = null output,
 @code int = 0 output,
 @message varchar(100) = null output,
 @tally int = 0 output,
 @fixProc varchar(100) = null output,
 @guide varchar(100) = null output
) as 
begin
 set nocount on

 if @mode != 'conversion'
  return

 declare @st table(
  purpose varchar(50),
  derivedCode varchar(50)
 )

 declare
  @mikeTableName varchar(50) = 'ACKT99',
  @mikePath varchar(max),
  @sql nvarchar(max)

 select
  @mikePath = dbo.settingsF('conversion.mikepath','') + '\' + @mikeTableName + '.dbf',
  @sql = 'select * from openrowset(''VFPOLEDB'',''' + @mikePath + ''';'''';'''',''SELECT purpose FROM ' + @mikeTableName + ' where purpose >"  0" and !deleted()'')'

 insert @st (purpose) exec(@sql)

 update @st set derivedCode = 'TR' + dbo.deriveCode(purpose, null, 2, null)


 if @method = 'GET'
 begin  
  select 
   @class = 'conversion',
   @guide = 'GET|SHOW|FIX',
   @code = case when count(*) > 0 then 0 else 1 end,
   @tally = case when count(*) > 0 then 0 else 1 end,  
   @message = 'mike_TrustPurposes not found in KTS'
  from dbo.glAccounts
  where accountType = 'PURPOSE'
 end

 if @method = 'SHOW'
 begin  

  select * 
  from @st

 end

 if @method = 'FIX'
 begin  

  declare
   @typeCode varchar(50) = 'PURPOSE',
   @typeDesc varchar(50),
   @reportDesc varchar(50)

  select
   @typeDesc = key2,
   @reportDesc = key3
  from object
  where typ = 4702
   and key1 = @typeCode

  if exists(select * from glAccounts where accountType = @typeCode)
  begin
   exec dbo.logit @@procid, 'PURPOSE glAccounts already exist... Bailing.'
   return
  end

  if isnull(@typeDesc,'') < '  0'
  begin
   exec dbo.logit @@procid, 'missing gl account type PURPOSE... Bailing.'
   return
  end

  insert object (typ, key1, key2, a1, a2, a3)
  select
   4701,
   derivedCode,
   purpose,
   @typeCode,
   @typeDesc,
   @reportDesc
  from @st
     

  return

 end

end
