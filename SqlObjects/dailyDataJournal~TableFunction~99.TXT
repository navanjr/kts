CREATE function dbo.dailyDataJournal(@theDate int, @days int, @ordSeed varchar(50), @filterFlag varchar(10)) returns 
@rt table (
 id int,
 ord varchar(250),
 rowstring varchar(250),
 glBalanceString varchar(50),
 rowstring1 varchar(250),
 sourceNo varchar(50),
 recordCnt varchar(50),
 sourceAmt varchar(50),
 rowType char(10),
 brwBGColor int
)
begin

 declare @wt table(
  id int,
  ord varchar(50),
  reportOrder varchar(50),
  description varchar(50),
  subDescription varchar(50),
  minControlNumber varchar(50),
  maxControlNumber varchar(50),
  rowCnt int,
  amount money,
  glBalance money
 )
 declare @wtRaw table(
  id int,
  ord varchar(50),
  description varchar(50),
  subDescription varchar(50),
  jeNumber varchar(50),
  amount money,
  slink2 varchar(15),
  typ int
 )
  declare @accounts table(
  accountId int,
  collectionDescription varchar(50),
  reportOrder varchar(50)
 )

-- get the bank accounts 
 insert @accounts select accountId,collectionDescription,reportOrder from dbo.glBankAccounts

-- insert all raw receipt data
 insert @wtRaw
 select
  b.accountId,
  a.reportOrder,
  b.accountCode,
  b.accountDesc,
  c.key1,
  b.amount,
  b.slink,
  c.typ
 from @accounts a, glDetail b, object c
 where a.accountId = b.accountId
  and c.typ in (4512)
  and dbo.slinkType(b.slink) = 'o'
  and dbo.slinkId(b.slink) = c.id
  and c.key2 between @theDate and @theDate + @days

-- this will get just the account
 insert @wt
 select
  id,
  ord + 'a',
  ord,
  description,
  subDescription,
  min(jeNumber),
  max(jeNumber),
  COUNT(jeNumber),
  abs(SUM(amount)),
  0
 from @wtRaw
 group by
  id,
  ord,
  description,
  subDescription
 order by ord

-- get the balance of the accounts
 update a set a.glBalance = (select sum(amount) from glDetail where accountId = a.id) from @wt a

--insert main data
 insert @rt
 select
  cast('9' + cast(id as varchar) as int),
  @ordSeed + ord + '', -- removed b
  dbo.dailyDataFormatCollections(subDescription,minControlNumber,maxControlNumber,rowCnt,amount),
  dbo.padLeft(convert(varchar,glBalance,1),' ',16),
  '   ' + dbo.padRight(subDescription,' ',61),  
  case when minControlNumber is null then '' else dbo.padLeft(minControlNumber, 0, 5) + ' - ' + dbo.padLeft(maxControlNumber, 0, 5) end,
  dbo.padLeft(cast(rowCnt as varchar), ' ', 4),
  dbo.padLeft(convert(varchar,amount,1),' ',16),
  'detail',0
 from @wt

 -- headers
 insert @rt select 0,@ordSeed+'00a','','','','','','','lineFeed',0
 insert @rt select 0,@ordSeed+'00aa','  Transactions Effected by Journal Entry','','  Transactions Effected by Journal Entry','','','','sHeader',1
 insert @rt select 0,@ordSeed+'00ab',' ' + replicate('=',79),replicate('=',16),' ' + replicate('=',79),replicate('=',22),replicate('=',10),replicate('=',16),'line',0

-- insert subtotals
 insert @rt
 select
  0,
  @ordSeed + reportOrder + 'c',
  ' ' + replicate('-',79),
  replicate('-',16),
  ' ' + replicate('-',79),
  replicate('-',22),
  replicate('-',10),
  replicate('-',16),
  'line',0
 from @wt 
 group by reportOrder,description

 insert @rt
 select
  0,
  @ordSeed + reportOrder + 'd',
  dbo.padRight('      Total ' + description, ' ', 60)
  + dbo.padLeft(cast(sum(rowCnt) as varchar), ' ', 4)
  + dbo.padLeft(convert(varchar,sum(amount),1), ' ', 16),
  '',
  dbo.padRight('      Total ' + description, ' ', 60),
  '',
  dbo.padLeft(cast(sum(rowCnt) as varchar), ' ', 4),
  dbo.padLeft(convert(varchar,sum(amount),1), ' ', 16),
  'gFooter',0
 from @wt 
 group by reportOrder,description

 insert @rt
 select
  0,
  @ordSeed + reportOrder + 'e',
  replicate(' ',80),
  '',
  '',
  '',
  '',
  '',
  'lineFeed',0
 from @wt 
 group by reportOrder,description

-- insert grand total
 if exists(select * from @wt)
 begin
  insert @rt select 0,@ordSeed+'da',dbo.padLeft(replicate('=',20),' ',80),replicate('=',16),dbo.padLeft(replicate('=',20),' ',80),replicate('=',22),replicate('=',10),replicate('=',16),'line',0

  insert @rt
  select
   0,
   @ordSeed + 'db',
   dbo.padLeft('Total Journal Entry ', ' ', 60)
   + dbo.padLeft(cast(sum(rowCnt) as varchar), ' ', 4)
   + dbo.padLeft(convert(varchar,sum(amount),1), ' ', 16),
   dbo.padLeft(convert(varchar,sum(glBalance),1), ' ', 16),
   dbo.padLeft('Total Journal Entry  ', ' ', 50),
   '',
   dbo.padLeft(cast(sum(rowCnt) as varchar), ' ', 4),
   dbo.padLeft(convert(varchar,sum(amount),1), ' ', 16),
   'grandTotal',0
  from @wt 
 end

 return
end