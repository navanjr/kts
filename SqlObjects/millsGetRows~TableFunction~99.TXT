create function dbo.millsGetRows(
 @typ int,
 @year varchar(50),
 @amount money,
 @code varchar(50)=''
) returns @rt table(
 id int identity(1,1),
 description varchar(50),
 millamount decimal(19,9),
 millRate decimal(16,14),
 amount money,
 accountId int,
 accountCode varchar(50),
 stepDesc varchar(50),
 altSource varchar(50)
) as
begin

 declare
  @millTotal money,
  @totalFigured money,
  @apyear varchar(50),
  @apdistrict varchar(50),
  @aprate varchar(50),
  @today varchar(20) = dbo.clariondate(getdate())

 if @typ=4795 and @code < ' 0'
 begin
  insert @rt (description, millAmount, accountId, accountCode)
  select a.comment2,amount,b.accountId,a.accountCode from (select * from dbo.interestWorkSheetDetail(@today,@year)) a, glaccounts b 
   where a.tableType = 'Apportionment'
   and a.accountcode=b.accountcode
 end

 if @typ=4795 and @code > ' 0'
 begin
  insert @rt (description, millAmount, accountId, accountCode)
  select a.comment2,amount,b.accountId,a.accountCode from (select * from dbo.interestWorkSheetDetail(@today,'')) a, glaccounts b 
   where a.bankaccount=@code
   and a.accountcode=b.accountcode
 end

 if @typ=4009
 begin
  insert @rt (description, millAmount, accountId)
  select b.accountcode,case when isnumeric(key3)=1 then cast(key3 as decimal(19,9)) else 0 end,b.accountId from object a, glaccounts b where a.typ = @typ and a.key1 = @year and a.key2 = @code and cast(key3 as money)<>0.00
   and a.key1=b.apyear and a.a1=b.apdistrict and a.a2=b.aprate and b.accounttype='ACCRUED RECEIVABLE'
 end

 if @typ=4013
 begin
  if exists(select * from object where typ = @typ and key1 = @year and cast(key3 as money)<>0.00)
   begin
    insert @rt (description, millAmount, accountCode)
    select key2+' By ADA',
           case when isnumeric(key3)=1 then cast(key3 as decimal(19,9)) else 0 end,
           case when key2 > ' 0' then key2 else '@objectid='+cast(id as varchar)+';' end
     from object with (NOLOCK) where typ = @typ and key1 = @year and cast(key3 as money)<>0.00
   end
  else
   begin
    insert @rt (description, millAmount, accountCode)
     select left(@year+' ADA Missing',50), 1, left('@message='+@year+' ADA Missing',49)+';'
   end
 end

 if @typ=4014
 begin
  if exists(select * from object where typ = @typ and key1 = @year and a2 = @code and cast(key3 as money)<>0.00)
   begin
    insert @rt (description, millAmount, accountCode)
    select key2+' By Population' ,
           case when isnumeric(key3)=1 then cast(key3 as decimal(19,9)) else 0 end,
           case when key2 > ' 0' then key2 else '@objectid='+cast(id as varchar)+';' end
     from object with (NOLOCK) where typ = @typ and key1 = @year and a2 = @code and cast(key3 as money)<>0.00
   end
  else
   begin
    insert @rt (description, millAmount, accountCode)
     select left(@year+' '+@code+'Population Info Missing',50), 1, left('@message='+@year+' '+@code+' Population Info Missing',49)+';'
   end
 end

 if @typ=4022
 begin
  if exists(select * from object where typ = @typ and key1 = @year and cast(key3 as money)<>0.00)
   begin
    insert @rt (description, millAmount, accountCode, stepDesc, altSource)
    select key2,
     case when isnumeric(key3)=1 then cast(key3 as decimal(19,9)) else 0 end,
     case when key2 > ' 0' then key2 else '@objectid='+cast(id as varchar)+';' end,
     a1,
     case when a2 > ' 0' then a2 else null end 
     from object with (NOLOCK) where typ = @typ and key1 = @year and cast(key3 as money)<>0.00
   end
  else
   begin
    insert @rt (description, millAmount, accountCode)
     select left(@year+' Apportion Table Info Missing',50), 1, left('@message='+@year+' Apportion Table Info Missing',49)+';'
   end
 end

 if @typ=4512
 begin
-- For Journal Entries the @year is the slink to the Journal and @code is the interest to field
  insert @rt (description, millAmount, accountCode)
  select 'INTEREST', sum(amount)*-1, accountCode from gldetailstage with (NOLOCK)
  where slink=@year 
   and amount < 0 
   and isnull(contraId,0) = 0 
   and '1' = case when @code in ('A','S') and isnull(comment,'0') <> '0' then '1' 
                  else '0' end
  group by accountCode

  insert @rt (description, millAmount, accountCode)
  select left('INTEREST '+comment2,49), sum(amount)*-1, accountCode from gldetailstage with (NOLOCK)
  where slink=@year 
   and amount < 0 
   and isnull(contraId,0) = 0 
   and '1' = case when @code in ('R','S') and isnull(comment,'R') = 'R'  then '1' 
                  else '0' end
  group by accountCode, comment2
 end


 select @millTotal = sum(millAmount) from @rt

 update @rt set 
  millRate = case when @millTotal<>0 then  millAmount / @millTotal  else 0 end

 update @rt set 
  amount = round(@Amount * millRate,2)

-- fix any rounding issues
 select @totalFigured = sum(amount) from @rt
 if @totalFigured != @amount
 begin
  declare
   @fudgeAmount money,
   @fudgeToken int

  select top 1 
   @fudgeAmount = @totalFigured - @amount,
   @fudgeToken = id
  from @rt order by description, millAmount, accountId desc

  update @rt set amount = amount - @fudgeAmount where id = @fudgeToken
 end

 return
end