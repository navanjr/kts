create FUNCTION dbo.dir(@Wildcard VARCHAR(8000))
returns @rt table(
 objectName varchar(100),
 objectType varchar(50),
 objectOrder varchar(50),
 objectPath varchar(1000)
)
AS
BEGIN
   DECLARE 
       --all the objects used
       @objShellApplication INT, 
       @objFolder INT,
       @objItem INT,
       @objErrorObject INT,
       @objFolderItems INT, 
       --potential error message shows where error occurred.
       @strErrorMessage VARCHAR(1000), 
       --command sent to OLE automation
       @Command VARCHAR(1000), 
       @hr INT, --OLE result (0 if OK)
       @count INT,@ii INT,
       @name VARCHAR(2000),--the name of the current item
       @path VARCHAR(2000),--the path of the current item 
       @ModifyDate DATETIME,--the date the current item last modified
       @IsFileSystem INT, --1 if the current item is part of the file system
       @IsFolder INT --1 if the current item is a file
   IF LEN(COALESCE(@Wildcard,''))<2 
       RETURN

   SELECT  @strErrorMessage = 'opening the Shell Application Object' 
   EXECUTE @hr = sp_OACreate 'Shell.Application', 
       @objShellApplication OUT 
   --now we get the folder.
   IF @HR = 0  
       SELECT  @objErrorObject = @objShellApplication, 
               @strErrorMessage = 'Getting Folder"' + @wildcard + '"', 
               @command = 'NameSpace("'+@wildcard+'")' 
   IF @HR = 0  
       EXECUTE @hr = sp_OAMethod @objShellApplication, @command, 
           @objFolder OUT
   IF @objFolder IS NULL RETURN --nothing there. Sod the error message
   --and then the number of objects in the folder
       SELECT  @objErrorObject = @objFolder, 
               @strErrorMessage = 'Getting count of Folder items in "' + @wildcard + '"', 
               @command = 'Items.Count' 
   IF @HR = 0  
       EXECUTE @hr = sp_OAMethod @objfolder, @command, 
           @count OUT
    IF @HR = 0 --now get the FolderItems collection 
        SELECT  @objErrorObject = @objFolder, 
                @strErrorMessage = ' getting folderitems',
               @command='items()'
    IF @HR = 0  
        EXECUTE @hr = sp_OAMethod @objFolder, 
            @command, @objFolderItems OUTPUT 
   SELECT @ii = 0
   WHILE @hr = 0 AND @ii< @count --iterate through the FolderItems collection
            BEGIN 
                IF @HR = 0  
                    SELECT  @objErrorObject = @objFolderItems, 
                            @strErrorMessage = ' getting folder item ' 
                                   + CAST(@ii AS VARCHAR(5)),
                           @command='item(' + CAST(@ii AS VARCHAR(5))+')'
                           --@Command='GetDetailsOf('+ cast(@ii as varchar(5))+',1)'
                IF @HR = 0  
                    EXECUTE @hr = sp_OAMethod @objFolderItems, 
                        @command, @objItem OUTPUT 

                IF @HR = 0  
                    SELECT  @objErrorObject = @objItem, 
                            @strErrorMessage = ' getting folder item properties'
                                   + CAST(@ii AS VARCHAR(5))

                IF @HR = 0  
                    EXECUTE @hr = sp_OAMethod @objItem, 
                        'path', @path OUTPUT

                IF @HR = 0  
                    EXECUTE @hr = sp_OAMethod @objItem, 
                        'name', @name OUTPUT
/*
                IF @HR = 0  
                    EXECUTE @hr = sp_OAMethod @objItem, 
                        'ModifyDate', @ModifyDate OUTPUT
                IF @HR = 0  
                    EXECUTE @hr = sp_OAMethod @objItem, 
                        'IsFileSystem', @IsFileSystem OUTPUT
                IF @HR = 0  
                    EXECUTE @hr = sp_OAMethod @objItem, 
                        'IsFolder', @IsFolder OUTPUT
*/
               --and insert the properties into a table
               INSERT INTO @rt (objectName, objectPath) 
                   SELECT @NAME, @path
               IF @HR = 0  EXECUTE sp_OADestroy @objItem 
               SELECT @ii=@ii+1
            END 

        EXECUTE sp_OADestroy @objFolder 
        EXECUTE sp_OADestroy @objShellApplication

 update @rt set objectType = (select data from dbo.split(objectName,'~') where id = 2)
 update @rt set objectOrder = replace((select data from dbo.split(objectName,'~') where id = 3),'.TXT','')
 update @rt set objectName = (select data from dbo.split(objectName,'~') where id = 1)

RETURN
END