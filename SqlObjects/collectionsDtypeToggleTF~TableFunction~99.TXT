create function dbo.collectionsDtypeToggleTF(
 @dtype varchar(50),
 @taxrollDetailId int,
 @taxYear int,
 @date int,
 @days int
) returns @rt table(
 id int,
 invoiceIdMain int,
 taxrollDetailId int,
 display varchar(250),
 keyCode varchar(50),
 parcel varchar(50),
 item numeric(7,1),
 taxYearMax varchar(5),
 taxYearMin varchar(5),
 invoiceCount int,
 totalDue money,
 invoiceDue money,
 subInvoiceDue money,
 taxRuleDue money,
 invoiceBlob varchar(max),
 rowType int,
 ord varchar(250),
 name varchar(250)
) as
begin

 declare @limitToCurrentDelinquent varchar(50) = dbo.settingsF('site.collectionsLimitTaxwarrantPub1Year','FALSE') 

 if @dtype = 'RESALE'
  insert @rt(id,taxrollDetailId, keyCode, parcel, item, taxYearMax, taxYearMin, invoiceCount, invoiceDue, subInvoiceDue, taxRuleDue, invoiceBlob, rowType, name)
   select  d.id, d.id, d.parcelNumber, d.parcelNumber, 0.0,
   max(i.taxYear),
   min(i.taxYear),
   COUNT(i.id),
   sum(i.invoiceDue),
   SUM(i.subInvoiceDue),
   SUM(i.taxRuleDue),
   stuff((
    select
     '|' + right('000000000'+CAST(ii.id as varchar),9)
      + ':' + cast(ii.item as varchar)
      + ':' + ii.NAME
      + ':' + CAST(ii.taxYear as varchar)
      + ':' + cast(isnull(ii.invoiceDue,0) 
      + isnull(ii.subInvoiceDue,0) 
      + isnull(ii.taxRuleDue,0) as varchar)
    from invoices ii
    where ii.PARCEL = d.parcelNumber and d.parcelNumber > ' 0' and isnull(ii.invoiceDue + ii.taxRuleDue,0) != 0
    order by ii.taxyear desc
    for xml path('')
   ),1,1,''),
   0,
   isnull((
    select top 1 ii.NAME
    from invoices ii
    where ii.PARCEL = d.parcelNumber and d.parcelNumber > ' 0'  and isnull(ii.invoiceDue + ii.taxRuleDue,0) != 0
    order by ii.taxyear desc
   ),'')   
  from taxrollDetail d
  left outer join invoices i on ((i.PARCEL = d.parcelNumber and d.parcelNumber > ' 0' ) or i.ID in (select t.invoiceLinkId from taxrollDetail t where t.parcelNumber = d.parcelNumber and d.parcelNumber > ' 0'  and t.invoiceLinkId>0 and t.dtype='Attach'))  and isnull(i.invoiceDue + i.subInvoiceDue + i.taxRuleDue,0) != 0 
  where dbo.clariondate(d.creationDateTime) between @date and @date+@days and d.actionDate = 0 and d.dtype = @dtype and d.id = case when @taxrollDetailId > 0 then @taxrollDetailId else d.id end
   and d.parcelNumber >  '      ' 
  group by d.id, d.parcelNumber
 
 else
  insert @rt(id, taxrollDetailId, keyCode, item, parcel, taxYearMax, taxYearMin, invoiceCount, invoiceDue, subInvoiceDue, taxRuleDue, invoiceBlob, rowType, name)
  select  d.id, d.id, cast(d.itemNumber as varchar), d.itemNumber, '',
   max(i.taxYear),
   min(i.taxYear),
   COUNT(i.id),
   sum(i.invoiceDue),
   SUM(i.subInvoiceDue),
   SUM(i.taxRuleDue),
   stuff((
    select
     '|' + right('000000000'+CAST(ii.id as varchar),9)
      + ':' + cast(ii.item as varchar)
      + ':' + ii.NAME
      + ':' + CAST(ii.taxYear as varchar)
      + ':' + cast(isnull(ii.invoiceDue,0) 
      + isnull(ii.subInvoiceDue,0) 
      + isnull(ii.taxRuleDue,0) as varchar)
    from invoices ii
    where ii.item = d.itemNumber and isnull(ii.invoiceDue + ii.taxRuleDue,0) != 0 and case when @dtype = 'taxwarrant' and @limitToCurrentDelinquent = 'True' then @taxYear else ii.taxYear end = ii.taxYear
    order by ii.taxyear desc
    for xml path('')
   ),1,1,''),
   0,
   isnull((
    select top 1 ii.NAME
    from invoices ii
    where ii.item = d.itemNumber and isnull(ii.invoiceDue + ii.taxRuleDue,0) != 0 and case when @dtype = 'taxwarrant' and @limitToCurrentDelinquent = 'True' then @taxYear else ii.taxYear end = ii.taxYear
    order by ii.taxyear desc
   ),'') 
  from taxrollDetail d
  left outer join invoices i on d.itemNumber = i.item and isnull(i.invoiceDue + i.subInvoiceDue + i.taxRuleDue,0) != 0  
   and case when @dtype = 'taxwarrant' and @limitToCurrentDelinquent = 'True' then @taxYear else i.taxYear end = i.taxYear
  where dbo.clariondate(d.creationDateTime) between @date and @date+@days  and d.actionDate = 0 and d.dtype = @dtype and d.id = case when @taxrollDetailId > 0 then @taxrollDetailId else d.id end
  group by d.id, d.itemNumber

 return
end