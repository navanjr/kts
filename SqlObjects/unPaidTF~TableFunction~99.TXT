create function [dbo].[unpaidTF](
 @invoiceId int
) returns @rt table(
 invoiceid int,
 origin varchar(50),
 year varchar(4),
 invoiceDue Money,
 interestAsOfDate varchar(50),
 penaltyPercent decimal(19,9),
 penalty Money,
 link2parentInvoice int,
 trcode varchar(50)
)

as
begin

 declare 
  @parcel varchar(50),
  @year varchar(4),
  @typ varchar,
  @name varchar(50),
  @asOf varchar(10)

-- get variables from our invoice
 select
  @parcel = parcel,
  @name = name, 
  @year = taxyear,
  @typ = TYP 
 from invoices 
 where ID = @invoiceId

-- get all the other related invoices by parcel or name
 if @typ = 'R'
  insert into @rt (invoiceId,origin,year,invoiceDue,link2ParentInvoice,trcode)
  select  
   ID,
   'Parcel Search',
   taxyear,
   invoiceDue,
   invoiceId,
   case when ID = @invoiceID then 'Current Tax Due:' else 'Past Tax Due:' end 
  from invoices
  where PARCEL = @parcel
   and TYP = 'R'
   and invoiceDue != 0
   and id not in (select invoiceId from @rt)
 
 if @typ = 'P'
  insert into @rt (invoiceId,origin,year,invoiceDue,link2ParentInvoice,trcode)
  select  
   ID,
   'Name Search',
   taxyear,
   invoiceDue,
   invoiceId,
   case when ID = @invoiceID then 'Current Tax Due:' else 'Past Tax Due:' end 
  from invoices
  where name = @name
   and TYP != 'R'
   and invoiceDue != 0
   and id not in (select invoiceId from @rt)

-- get the sub or fee invoices, but do NOT insert fees into the table if there are no fees
  insert into @rt (invoiceId,origin,year,invoiceDue,link2ParentInvoice,trcode)
 select 
  id,
  'fee search',
  taxyear,
  invoicedue,
  invoiceId,
  'Fees Due:'
 from invoices 
 where invoiceId in (select invoiceId from @rt)

 set @asof = '01/15/' + cast(@year + 1 as varchar)

 update @rt set
  interestAsOfDate = @asof,
  penaltyPercent = dbo.penaltyPercent(invoiceId,@asof)

 update @rt set
  penalty = invoicedue*(penaltypercent/100)
  
 

--Need to NOT insert penalities into the table if there are no penalties.  Check for nulls.
  if isnull((select sum(penalty) from @rt),0) != 0 
  begin
    insert @rt (invoiceDue,trcode) select sum(penalty), 'Penalty Due:' from @rt
  end

--Grand Total
 insert @rt (invoiceDue,trcode)
  select sum(invoiceDue), 'Total' from @rt



 	
 return
end
