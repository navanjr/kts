create function [dbo].[unpaidTF](
 @invoiceId int
) returns @rt table(
 invoiceid int,
 origin varchar(50),
 year varchar(4),
 recordType varchar(10),
 perTyp varchar(10),
 invoiceDue Money,
 halfRate Money,
 interestAsOfDate varchar(50),
 subjectToPenalty int,
 penaltyPercent decimal(19,9),
 penalty Money,
 link2parentInvoice int,
 trcode varchar(50),
 trSection int,
 ord int
)

as
begin

 declare 
  @parcel varchar(50),
  @year varchar(4),
  @typ varchar,
  @name varchar(50),
  @asOf varchar(10),
  @totalTax money

-- get variables from our invoice
 select
  @parcel = parcel,
  @name = name, 
  @year = taxyear,
  @typ = TYP 
 from invoices 
 where ID = @invoiceId

-- get all the other related invoices by parcel or name
 if @typ = 'R'
  insert into @rt (invoiceId,origin,year,recordType,pertyp,invoiceDue,link2ParentInvoice,trSection,subjectToPenalty)
  select  
   i.ID,
   'Parcel Search',
   i.taxyear,
   i.typ,
   a.pertyp,
   i.invoiceDue,
   i.invoiceId,
   1,1
  from invoices i, adtax a
  where i.taxrollId = a.id
   and i.PARCEL = @parcel
   and i.TYP in ('R','O')
   and i.invoiceDue != 0
   and i.id not in (select invoiceId from @rt)

 
 if @typ in ('P','B','I','O','S')
  insert into @rt (invoiceId,origin,year,recordType,invoiceDue,link2ParentInvoice,trSection,subjectToPenalty)
  select  
   ID,
   'Name Search',
   taxyear,
   typ,
   invoiceDue,
   invoiceId,
   1,1
  from invoices
  where name = @name
   and TYP != 'R'
   and invoiceDue != 0
   and id not in (select invoiceId from @rt)

-- get the sub or fee invoices, but do NOT insert fees into the table if there are no fees
 insert into @rt (invoiceId,origin,year,invoiceDue,link2ParentInvoice,trSection,subjectToPenalty)
 select 
  id,
  'fee search',
  taxyear,
  invoicedue,
  invoiceId,
   1,0
 from invoices 
 where invoiceId in (select invoiceId from @rt)

 set @asof = '01/15/' + cast(@year + 1 as varchar)

 update @rt set
  interestAsOfDate = @asof,
  penaltyPercent = dbo.penaltyPercent(invoiceId,@asof)
 where subjectToPenalty = 1

 update @rt set
  penalty = invoicedue*(penaltypercent/100)
 where subjectToPenalty = 1

--Need to NOT insert penalities into the table if there are no penalties.  Check for nulls.
  if isnull((select sum(penalty) from @rt),0) != 0 
  begin
    insert @rt (invoiceDue,trSection,origin) select sum(penalty),1,'penalty' from @rt
  end

-- set the trcode for proper grouping on the report !! maintain this order to resolve any issues
--TODO: nate come back and make this site configurable
/* declare @siteSettings table(
  trCode varchar(50),
  halfRate money,
  ord int
 )
 insert @siteSettings select 
*/

 update @rt set 
  trcode = 'Fire District',
  halfRate = .5,
  ord = 2 
 where recordType = 'O'
 update @rt set trcode = 'Weed/Demo', halfRate = 1, ord = 3 where recordType = 'O' and perTyp != 'F' 
 update @rt set trcode = 'Current Yr Tax', halfRate = .5, ord = 1 where invoiceid = @invoiceId
 update @rt set trcode = 'Past Due', halfRate = 0, ord = 3 where recordType in ('P','I','B','R') and year != @year
 update @rt set trcode = 'Weed/Demo', halfRate = 1, ord = 2 where origin = 'fee search'
 update @rt set trcode = 'Past Due', halfRate = 0, ord = 3 where origin = 'fee search' and year != @year
 update @rt set trcode = 'Past Due', halfRate = 0, ord = 3 where origin = 'penalty'

--Grand Total Section 1
 select @totalTax = sum(invoiceDue) from @rt
 insert @rt (invoiceDue,trcode,trSection,origin,ord)
  select @totalTax, 'Total Tax',1,'sub total',4
--Grand Total
 insert @rt (invoiceDue,trcode,trSection,origin,ord)
  select @totalTax, 'Total Tax',2,'sub total',4

--Half Tax Section 2
 if isnull((select sum(invoiceDue) from @rt where trcode = 'Current Yr Tax'),0) > 25
  insert @rt (invoiceDue,trcode,trSection,origin,ord)
   select sum(invoiceDue*halfRate), 'Half Tax',2,'sub total',5 from @rt where trcode != 'Total Tax'
 	
 return
end
