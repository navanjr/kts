create function [dbo].[unpaidTF](
 @invoiceId int,
 @documentId int
) returns @rt table(
 invoiceid int,
 origin varchar(50),
 year varchar(4),
 recordType varchar(10),
 perTyp varchar(10),
 invoiceDue Money,
 halfRate Money,
 interestAsOfDate varchar(50),
 subjectToPenalty int,
 penaltyPercent decimal(19,9),
 penalty Money,
 fees money,
 link2parentInvoice int,
 trcode varchar(50),
 trSection int,
 ord int,
 name varchar(50),
 parcel varchar(50),
 realname varchar(50)
)

as
begin

 declare 
  @parcel varchar(50),
  @year varchar(4),
  @typ varchar,
  @name varchar(50),
  @asOf varchar(10),
  @item numeric(9,1),
  @totalTax money,
  @unPaid money,
  @LimitType varchar(10) = dbo.settingsf('site.LimitPastDueOnSType','FALSE'),
  @linkBackTaxByParcel varchar(10) = dbo.settingsf('site.statementBackTaxLinkParcel','TRUE')

-- get variables from our invoice
 select
  @parcel = parcel,
  @name = name, 
  @year = taxyear,
  @typ = TYP ,
  @item = item
 from invoices 
 where ID = @invoiceId

-- get all the other related invoices by parcel
 if @typ in ('R','S') 
  insert into @rt (invoiceId,origin,year,recordType,pertyp,invoiceDue,link2ParentInvoice,trSection,subjectToPenalty,name,parcel)
  select  
   i.ID,
   case when @linkBackTaxByParcel='TRUE' then 'Parcel Search' else 'Item# Search' end,
   i.taxyear,
   i.typ,
   a.pertyp,
   i.invoiceDue,
   i.invoiceId,
   1,1,
   i.name,i.parcel
  from invoices i left outer join adtax a
  on i.taxrollId = a.id
   where
    ((i.PARCEL = @parcel and i.parcel >' 0' and @linkBackTaxByParcel='TRUE') or i.item = @item)
   and i.TYP in ('R','O','S')
   and case when i.id<>@invoiceId then taxyear+1 else taxyear end <= @year
   and i.invoiceDue != 0
   and i.id not in (select invoiceId from @rt)
   

if @LimitType='TRUE'
  delete from @rt where recordType<>@typ

-- get all the other related invoices by name
 if @typ in ('P','B','I','O','M','U')
  insert into @rt (invoiceId,origin,year,recordType,invoiceDue,link2ParentInvoice,trSection,subjectToPenalty,name,parcel)
  select  
   ID,
   'Name Search',
   taxyear,
   typ,
   invoiceDue,
   invoiceId,
   1,1,
   name,parcel
  from invoices
  where name = @name
   and typ <> 'R'
   and invoiceDue != 0
   and id not in (select invoiceId from @rt)
   and (taxyear <> @year or item = @item or (parcel=@parcel and parcel > ' 0' and @linkBackTaxByParcel='TRUE'))

-- get the sub or fee invoices, but do NOT insert fees into the table if there are no fees
 insert into @rt (invoiceId,origin,year,invoiceDue,link2ParentInvoice,trSection,subjectToPenalty,name,parcel)
 select 
  id,
  'fee search',
  taxyear,
  invoicedue,
  invoiceId,
  1,0,
  name,parcel
 from invoices 
 where invoiceId in (select invoiceId from @rt) and typ not in ('A','P')


---set docVariables
if @documentId>0
 begin
  declare @docVariables varchar(max) = dbo.docVariablesBlob(@documentId)
  select @asof = dbo.readstring('@InterestTo=',@docVariables)
--   select top 1 @asof = settingValue from settings where parentId = 'o'+cast(@documentId as varchar) and dbo.splitF(settingName,'.',2) = 'interestTo'
  end
  else
   select @asof = dbo.taxStatementAsOf(@year) 
 

 update @rt set
  interestAsOfDate = @asof,
  penaltyPercent = dbo.penaltyPercent(invoiceId,@asof)
 where subjectToPenalty = 1

 update @rt set
  penalty = invoicedue*(penaltypercent/100)
 where subjectToPenalty = 1

--Need to NOT insert penalities into the table if there are no penalties.  Check for nulls.
  if isnull((select sum(penalty) from @rt),0) != 0 
  begin
    insert @rt (invoiceDue,trSection,origin) select sum(penalty),1,'penalty' from @rt
  end

-- set the trcode for proper grouping on the report !! maintain this order to resolve any issues
--TODO: nate come back and make this site configurable
/* declare @siteSettings table(
  trCode varchar(50),
  halfRate money,
  ord int
 )
 insert @siteSettings select 
*/

 update @rt set  trcode = 'Fire District',halfRate = .5,ord = 2 where recordType = 'O' and year = @year
 update @rt set trcode = 'Fee', halfRate = 1, ord = 3 where recordType in ('O') and isnull(perTyp,'') != 'F' 
 update @rt set trcode = 'Current Yr Tax', halfRate = .5, ord = 1 where invoiceid = @invoiceId 
 update @rt set trcode = 'Past Due', halfRate = 0, ord = 3 where recordType in ('O','P','I','B','R','S') and year < @year
 update @rt set trcode = 'Fee', halfRate = 1, ord = 2 where origin = 'fee search'
 update @rt set trcode = 'Past Due', halfRate = 0, ord = 3 where origin = 'fee search' and year < @year
 update @rt set trcode = 'Past Due', halfRate = 0, ord = 3 where origin = 'penalty'
 update @rt set trcode = 'Future Tax' where year > @year 
if @typ='S'
 update @rt set trcode = 'Current Yr Tax', halfRate = .5, ord = 1 where link2parentInvoice = @invoiceId

-- if we are not realestate search for links for fire districts into realestate
 if @typ != 'R'
 begin
  update r set r.realName = 
   (select max(i.name)+'('+cast(count(*) as varchar)+')' from invoices i where i.typ = 'R' and i.taxyear = @year and i.parcel = r.parcel)
   from @rt r where r.trcode = 'Fire District'
-- now remove the fire district if we are not realestate and the fire district it is already linked to a realestate by parcel #
  delete from @rt where trcode = 'Fire District' and realname is not null
 end

-- remove Future stuff
 delete @rt where year > @year

 select @unPaid=SUM(invoiceDue) from dbo.unpaidTFNew(@invoiceId) where trSection = 1 and trcode = 'Past Due'

--Grand Total Section 1
 select @totalTax = sum(invoiceDue) from @rt where  trCode=case when @unPaid>0 then trCode else 'Current Yr Tax' end
 insert @rt (invoiceDue,trcode,trSection,origin,ord,name,parcel)
  select @totalTax, 'Total Tax',1,'sub total',4,@name,@parcel
--Grand Total
 insert @rt (invoiceDue,trcode,trSection,origin,ord,name,parcel)
  select @totalTax, 'Total Tax',2,'sub total',4,@name,@parcel

--Half Tax Section 2
 if isnull((select sum(invoiceDue) from @rt where trcode = 'Current Yr Tax'),0) > 25 and @typ<>'S' 
  insert @rt (invoiceDue,trcode,trSection,origin,ord)
   select sum(invoiceDue*halfRate), 'Half Tax',2,'sub total',5 from @rt where trcode = 'Current Yr Tax'

--------Section 4

 --Half Tax
  if isnull((select sum(invoiceDue) from @rt where trcode = 'Current Yr Tax'),0) > 25 and @typ<>'S' and dbo.readstring('@SecondHalf=',@docVariables) not in ('yes','true')
   insert @rt (invoiceDue,trcode,trSection,origin,ord)
    select sum(invoiceDue*halfRate), 'halftax',4,'sub total',1 from @rt where trcode = 'Current Yr Tax'

 --Current Year Tax
  insert @rt (invoiceDue,trcode,trSection,origin,ord)
   select invoiceDue, 'currenttax',4,'sub Total',2 from @rt where trcode = 'Current Yr Tax'

--Second Half
  if isnull((select sum(invoiceDue) from @rt where trcode = 'Current Yr Tax'),0) > 25 and @typ<>'S' and dbo.readstring('@SecondHalf=',@docVariables) not in ('yes','true')
   insert @rt (invoiceDue,trcode,trSection,origin,ord)
    select invoiceDue, 'secondhalf',4,'sub total',6 from @rt where trcode = 'halftax'
  else
   insert @rt (invoiceDue,trcode,trSection,origin,ord)
    select invoicedue, 'secondhalf',4,'sub total',6 from @rt where trcode = 'currenttax'
/*
 --Penalty
  insert @rt (invoiceDue,trcode,trSection,origin,ord)
   select invoiceDue, 'penalty',4,'Sub Total',3 from @rt where origin = 'penalty'

 --Fee
  insert @rt (invoiceDue,trcode,trSection,origin,ord)
   select sum(isnull(invoiceDue,0)), 'fee',4,'Sub Total',4 from @rt where origin = 'fee search'
*/
 --Total Due
  insert @rt (invoiceDue,trcode,trSection,origin,ord,name,parcel)
   select sum(isnull(invoicedue,0)), 'totaldue',4,'Total',5,@name,@parcel from @rt where trSection = 4 and trcode not in ('halftax','secondhalf')



--------Section 5
 update rt set rt.fees = (select sum(isnull(r.invoiceDue,0)) from @rt r where r.link2parentInvoice = rt.invoiceid) from @rt as rt

 --Half Tax
  if isnull((select sum(invoiceDue) from @rt where trcode = 'Current Yr Tax'),0) > 25 and @typ<>'S' and dbo.readstring('@SecondHalf=',@docVariables) not in ('yes','true')
   insert @rt (invoiceDue,trcode,trSection,origin,ord)
    select sum(invoiceDue*halfRate), 'halftax',5,'Half Tax',2 from @rt where trcode = 'Current Yr Tax'

 --Current Year Tax
  insert @rt (invoiceDue,trcode,trSection,origin,ord)
   select invoiceDue, 'currenttax',5,'Current Yr Tax',1 from @rt where trcode = 'Current Yr Tax'
if @typ<>'S'
 begin
--Spacing lines
  insert @rt (invoiceDue,trcode,trSection,origin,ord,name,parcel)
    select 0, '',5,'',5,@name,@parcel 
  insert @rt (invoiceDue,trcode,trSection,origin,ord,name,parcel)
    select 0, '',5,'',6,@name,@parcel 

 --Past Due
 if exists(select * from @rt where trcode = 'past due' and recordtype <> 's')
  insert @rt (invoiceDue,trcode,trSection,origin,ord,name,parcel)
   select sum(isnull(invoicedue,0)+isnull(penalty,0)+isnull(fees,0)), 'pastdue',5,'Past Due',7,@name,@parcel from @rt where trcode = 'past due' and recordtype <> 's'

 --Special Assessments
 if exists(select * from @rt where trcode = 'past due' and recordtype = 's')
  insert @rt (invoiceDue,trcode,trSection,origin,ord,name,parcel)
   select sum(isnull(invoicedue,0)+isnull(penalty,0)+isnull(fees,0)), 'pastdue',5,'Special Assessments',8,@name,@parcel from @rt where trcode = 'past due' and recordtype = 's'
 end
 	
 return
end
