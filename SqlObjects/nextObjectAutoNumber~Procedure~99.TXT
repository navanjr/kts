create procedure dbo.nextObjectAutoNumber(
 @typ int,
 @seriesString varchar(50),
 @additionalWhereClause varchar(500) = null,
 @ignoreDeleted varchar(10) = 'FALSE',
 @clobber varchar(50) = null,
 @debugMode varchar(5) = 'FALSE',
 @newNumber nvarchar(max) = null output 
) as
-- this function looks for \0002 in the template code to know what format to return the next number as
--  also, looks for @seriesField= to know what object column to find the series data
begin

 if @clobber is not null
 begin
  set @newNumber = @clobber
  exec dbo.logit @@procid, '@newNumber', @newNumber, '@clobber', @clobber
  return
 end

 declare
  @padLength int,
  @suffixLength int,
  @keyCodeOptions varchar(50),
  @seriesField varchar(50)

  select @keyCodeOptions = dbo.readKeyCode(@typ,'\0002')
  select @seriesField = dbo.readKeyCode(@typ,'@seriesField=')
  select @seriesString = dbo.nextObjectAutoNumberControl(@typ,@seriesString)

  select 
   @padLength = cast(substring(@keyCodeOptions,1,2) as int),
   @suffixLength = cast(substring(@keyCodeOptions,3,2) as int)

  declare
    @sql    nvarchar(4000),
    @params nvarchar(4000)

  select @sql = 
  N' select @returnThis =  cast(cast(max(case when isnumeric(key1) = 1 then cast(key1 as int) else 0 end) as int) + 1 as varchar) ' + 
  N' from object where ' + case when @ignoreDeleted = 'TRUE' then 'typ' else 'abs(typ)' end + ' = ' + cast(@typ as varchar) 

  if isNull(@seriesString,'') > '  0'
   select @sql = @sql + N'  and ''' + @seriesString + ''' = dbo.nextObjectAutoNumberControl(' + cast(@typ as varchar) + ',' + @seriesField + ')'

  if isNull(@additionalWhereClause,'') > '  0'
   select @sql = @sql + N'  and ' + @additionalWhereClause


  select @params = N'@returnThis varchar(50) output'

  exec sp_executesql @sql, @params, @returnThis = @newNumber output

  select @newNumber = dbo.padLeft(isnull(@newNumber,'1'),'0',@padLength)

 declare @blob varchar(1000) = '@keyCodeOptions=' + isnull(@keyCodeOptions,'null')
  + ';@seriesField=' + isnull(@seriesField,'null')
  + ';@seriesString=' + isnull(@seriesString,'null')
  + ';@newNumber=' + isnull(@newNumber,'null')
  + ';@sql=' + isnull(@sql,'null')
  + ';'

 if @debugMode = 'TRUE'
 begin
  exec dbo.logit @@procid, 'SQL=', @sql
  exec dbo.logit @@procid, 'blob', @blob
  select @newNumber
 end
 exec dbo.logit @@procid, '@newNumber', @newNumber, '@additionalWhereClause', @additionalWhereClause  

 return
end