create function dbo.bankStatementBRW(
 @id int,
 @accountId int,
 @showFlag int, 
 @warrantFlag int,
 @orderByVoucherFlag int,
 @orderByClearedFlag int  
) returns @rt table(
 id int,
 fpid int,
 fpCode varchar(50),
 slink varchar(15),
 paymentType varchar(50),
 template varchar(50),
 typ int,
 depositDate varchar(50),
 instrumentNumber varchar(50),
 instrumentNumber2 varchar(50),
 description varchar(100),
 subDescription varchar(100),
 dbAmount money,
 crAmount money,
 rowType int,
 selectedFlag char(1),
 ord varchar(150),
 comment varchar(50),
 comment2 varchar(50),
 origin int,
 fundGrouping varchar(100),
 dateCleared varchar(50) 
)
begin

 declare @showTable table(id int)
 insert @showTable select 0
 if @showFlag = 1
  insert @showTable select @id

-- get all the gldetail for this account that is not cleared and maybe include the items cleared on this statement
 insert @rt (id,fpid,fpCode,slink,dbAmount,crAmount,subDescription,selectedFlag,rowType,comment,comment2,origin,dateCleared)
 select id* -1, fpid, fpCode, slink,
  case when amount > 0 then amount else 0 end,
  case when amount < 0 then amount*-1 else 0 end,
  slink,
  case when isnull(bsId,0) = 0 then '' else 'X' end,
  0,comment,comment2,1,dateCleared
 from dbo.glDetail 
 where accountId = @accountId
  and isnull(bsId,0) in (select id from @showTable)

-- populate the items with more details
 update a set
  a.description = '      ' + b.key1,
  a.depositDate = b.key2,
  a.instrumentNumber = b.key1,
  a.instrumentNumber2 = b.key3,
  a.subDescription = case b.a18
   when 'Treasurers Check' then
    'Payment #' + b.key1
   else
    b.a2
   end, --c.template + ' #' + case when b.typ=4771 then b.key3 + ', '+b.a18+' #' + b.key1 else b.key1 end,
  paymentType = b.a18,
  template = c.template,
  a.typ = b.typ
 from @rt a, object b, template c
 where left(slink,1) = 'o' 
  and cast(substring(slink,2,14) as int) = b.id
  and b.typ = c.id

-- deposit Fixes
 update @rt set
  paymentType = 'z' + template,
  subdescription = case when comment>' 0' then left(comment+' - '+comment2,100) else subdescription end
 where template = 'Deposits' and rowType = 0

-- je Fixes
 update @rt set
  subDescription = instrumentNumber2
 where template = 'Journal Entries' and rowType = 0

-- payment Fixes except miscellaneous
-- update @rt set 
--  instrumentNumber = instrumentNumber2
-- where rowtype = 0 and template = 'Payments' and paymentType != 'Miscellaneous'


-- set description and ord
 update @rt set
  description = '  ' + 
  case when @orderByVoucherFlag <> 1 then
   dbo.padLeft(instrumentNumber,'0',6) + ' / ' + dbo.padLeft(instrumentNumber2,'0',6)
  else
   dbo.padLeft(instrumentNumber2,'0',6) + ' / ' + dbo.padLeft(instrumentNumber,'0',6)
  end
    + '   ' + 
--  description = '   ' + dbo.padLeft(case when @orderByVoucherFlag <> 1 then instrumentNumber else instrumentNumber2 end,'0',6) + '   ' + 
    case when @orderByClearedFlag = 1 then dbo.date2(DateCleared) else dbo.date2(depositDate) end,
  ord = case when @orderByVoucherFlag = 1 then 
    paymentType + 'c' + dbo.padLeft(instrumentNumber2,'0',6)
    when @orderByClearedFlag = 1 then
    dateCleared
   else
    fpCode + paymentType + 'c' + dbo.padLeft(instrumentNumber,'0',6)
   end
 where rowtype = 0 and template not in ('deposits')

 update @rt set
  description = '      ' + 
   dbo.padLeft(instrumentNumber,'0',6) 
    + '   ' + 
    case when @orderByClearedFlag = 1 then dbo.date2(DateCleared) else dbo.date2(depositDate) end,
  ord = case when @orderByVoucherFlag = 1 then 
    paymentType + 'c' + dbo.padLeft(instrumentNumber2,'0',6)
    when @orderByClearedFlag = 1 then
    dateCleared
   else
    fpCode + paymentType + 'c' + dbo.padLeft(instrumentNumber,'0',6)
   end
 where rowtype = 0 and template in ('deposits')

-- add Period headers for the account details
 if @orderByVoucherFlag <> 1 and @orderByClearedFlag <> 1
  begin
   insert @rt (id,description,ord,rowType,origin)
    select
     0,
     'Period: ' + a.fpCode + ' ' + key2,
     a.fpCode,
     3,2 
    from @rt a, object b
    where a.fpid = b.id and a.rowType = 0
    group by b.key1,b.key2,b.id,a.fpCode
   end

-- add paymentType headers
 if @orderByClearedFlag <> 1
 begin
 if @orderByVoucherFlag = 1 
  begin
   insert @rt (id,description,ord,rowType,origin)
    select
     0,
     ' ' + case when left(paymentType,1) = 'z' then substring(paymentType,2,50) else paymentType end,
     paymentType + 'a',
     2,4 
    from @rt 
    where rowType = 0 and paymentType is not null
    group by paymentType
   end
  else
   begin
   insert @rt (id,description,ord,rowType,origin)
    select
     0,
     ' ' + case when left(paymentType,1) = 'z' then substring(paymentType,2,50) else paymentType end,
     fpCode +  paymentType + 'a',
     2,5 
    from @rt 
    where rowType = 0 and paymentType is not null
    group by fpCode, paymentType
   end
  end

-- add Warrants, Maybe
 if not @warrantFlag = 1
  return
 
 declare @limitfundcode varchar(50)
 
 select @limitfundcode = b.accountCode from object a, glAccounts b where a.id = @id and b.targetaccountCode = a.a16 and b.accountType = 'WARRANT' and a.a16>' 0'

 insert @rt (id,description,ord,origin) select 0,'','w',6 
 insert @rt (id,description,ord,rowType,origin) select 0,'Warrants: ','ww',3,7 
 declare @glAccountIds table (id int)
 insert into @glAccountIds
      select accountId from glAccounts where accountType = 'WARRANT' and (isnull(@limitfundcode,'ALL')='ALL' or accountCode=@limitfundcode)
 
 insert @rt (id,description,ord,origin) select 0,'','w',8
-- insert @rt (id,description,ord,origin) select 0,'Warrants: ','ww',9

-- get the warrants
 insert @rt (id, description, subDescription, dbAmount, ord, origin, fundGrouping)
  select b.id,
   '   ' + dbo.date1(b.key2) + ' - #' + b.key3,
   b.a2,
   sum(a.amount),
   'ww' + a.accountCode + b.key3,
   10,
   accountCode
  from dbo.glDetail a, object b
  where a.slink = 'o' + cast(b.id as varchar)
   and a.accountId in (select id from @glAccountIds)
   and b.link1 = 0
  group by a.accountCode, a.accountDesc, b.key2, b.a2, b.key3, b.id
  having sum(amount) > 0
 
-- add header rows for fund
 insert @rt (id, description, ord, rowType, origin)
 select 
  0,
  '-- ' + fundGrouping + ' - ' + t.accountDesc, 'ww' + fundGrouping, 2, 11
 from @rt r
 left join glAccounts g on g.accountcode = r.fundGrouping
 left join glAccounts t on t.accountcode = g.targetAccountCode
 where r.origin = 10
 group by r.fundGrouping, t.accountDesc

 return
end