create procedure dbo.spOverwriteTextFile(
 @fileName varchar(1000),
 @text varchar(max),
 @append varchar(10) = 'FALSE'
)
as

 declare
  @fileSystemObject INT,
  @textStream INT,
  @returnValue INT,
--variables for error handling
  @step int = 0,
  @errorStatus varchar(512),
  @errorDescription varchar(512)

--attempt to create the FileSystemObject
 set @step = 1
 exec @returnValue = sp_OACreate 'Scripting.FileSystemObject', @fileSystemObject OUTPUT, 1
 if @returnValue <> 0 GOTO errorHandler

--determine whether to append this data to the text file or to create a new file, overwriting any existing data
 if @append = 'TRUE'
 begin
  set @step = 2
  exec @returnValue = sp_OAMethod @fileSystemObject,'opentextfile', @textStream OUTPUT, @fileName, 8
  if @returnValue <> 0 GOTO errorHandler
 end
 else
 begin
  set @step = 3
  exec @returnValue = sp_OAMethod @fileSystemObject,'createtextfile', @textStream OUTPUT, @fileName, -1
  if @returnValue <> 0 GOTO errorHandler
 end

 set @step = 4
 exec @returnValue = sp_OAMethod @textStream, 'write', null, @text
 if @returnValue <> 0 GOTO errorHandler

 set @step = 5
 exec @returnValue = sp_OAMethod @textStream,'close'
 if @returnValue <> 0 GOTO errorHandler

--clean up
 exec sp_OADestroy @textStream
 exec sp_OADestroy @fileSystemObject

 exec dbo.logit @@procid, '@fileName', @fileName

 return 0

errorHandler:
 --get error
 exec sp_OAGetErrorInfo null, @errorStatus OUTPUT, @errorDescription OUTPUT
 exec dbo.logit @@procid, 'Error... @errorDescription', @step

 --raise error
 RAISERROR(@errorDescription,16,1)
 --clean up
 exec sp_OADestroy @textStream
 exec sp_OADestroy @fileSystemObject

 return 1