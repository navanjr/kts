create function dbo.apportionCollectionsWT( @accountId int, @apportionToDate int, @apportionCodeOnly varchar(10), @glDetailId int, @amount money) returns @wt table(
  id int identity(1,1),
  accountId int,
  creditCode varchar(50),
  apTableType varchar(50),
  apYear varchar(50),
  debitCode varchar(50),
  stepDesc varchar(50),
  amount money,
  appilottable varchar(50),
  apdistrict varchar(50),
  aprate varchar(50),
  appoptype varchar(50),
  processFlag int default 0,
  comment varchar(50),
  slink2 varchar(15),
  contraId int,
  sourceCode varchar(60),
  contraAccountCode varchar(60),
  contraAccountDesc varchar(60),
  acrAccountId int,
  acrAccountCode varchar(60),
  acrAccountDesc varchar(60),
  ord varchar(10)
)

begin


 declare
  @tokenId int,
  @tokenAccountId int,
  @tokenAmount money,
  @tokenYear varchar(50),
  @tokenCode varchar(50),
  @tokenappilottable varchar(50),
  @tokenapdistrict varchar(50),
  @tokenaprate varchar(50),
  @tokenappoptype varchar(50),
  @tokenStepDesc varchar(50),
  @tokenComment varchar(50),
  @accountType int,
  @accountTypeDesc varchar(50),
  @tokenSourceCode varchar(60),
  @tokencontraAccountCode varchar(60), 
  @tokencontraAccountDesc varchar(60), 
  @tokenacrAccountId int, 
  @tokenacrAccountCode varchar(60), 
  @tokenacrAccountDesc varchar(60)


declare @twt table(
	[id] [int] ,
	[fpid] [int],
	[fpCode] [varchar](10),
	[fpDesc] [varchar](50),
	[accountId] [int],
	[accountCode] [varchar](50),
	[accountDesc] [varchar](50),
	[amount] [money],
	[creationdate] [int],
	[creationtime] [int],
	[date] [int],
	[slink] [varchar](15),
	[bsId] [int],
	[slink2] [varchar](15),
	[comment] [varchar](50),
	[contraId] [int],
	[comment2] [varchar](50),
	[sourceCode] [varchar](60),
        contraAccountCode varchar(60),
        contraAccountDesc varchar(60),
        acrAccountId int,
        acrAccountCode varchar(60),
        acrAccountDesc varchar(60),
        stepDesc varchar(50))

 if isnull(@glDetailId,0) > 0
 begin
     insert into @twt select a.[id],a.[fpid],a.[fpCode],a.[fpDesc],a.[accountId],a.[accountCode],a.[accountDesc],a.[amount],a.[creationdate],a.[creationtime],a.[date],a.[slink],a.[bsId], a.[slink2],a.[comment],a.[contraId],a.[comment2],a.[sourceCode],
 c.accountCode as contraAccountCode,
 c.accountDesc as contraAccountDesc,
 a.accountId as acrAccountId, 
 '' as acrAccountCode,
 '' as acrAccountDesc,
 '' 
   from gldetail a, glaccounts c
     where a.id=@glDetailId and 
     contraId > 0 and 
     c.accountId = a.contraId and
     ISNULL(bsId,0) = 0 
 end 
 else 
 begin   
  if @accountId = 0
  begin
     insert into @twt select a.[id],a.[fpid],a.[fpCode],a.[fpDesc],a.[accountId],a.[accountCode],a.[accountDesc],a.[amount],a.[creationdate],a.[creationtime],a.[date],a.[slink],a.[bsId], a.[slink2],a.[comment],a.[contraId],a.[comment2],a.[sourceCode],
 c.accountCode as contraAccountCode,
 c.accountDesc as contraAccountDesc,
 a.accountId as acrAccountId, 
 '' as acrAccountCode,
 '' as acrAccountDesc,
 '' 
   from gldetailreports a, glaccounts c
     where a.contraId=c.accountId and 
     contraId > 0 and 
     c.accountType='FUND' and 
     ISNULL(bsId,0) = 0 
     and sourceDate <= cast(@apportionToDate as varchar)
  end
  else
  begin
   select @accountType = typ, @accountTypeDesc=a1 from object where id = @accountId 

   if @accountType = 4701 and @accountTypeDesc<>'ACCRUED RECEIVABLE'
    begin
 -- Add glDetail when apportioning by account
     insert into @twt select [id],[fpid],[fpCode],[fpDesc],[accountId],[accountCode],[accountDesc],[amount],[creationdate],[creationtime],[date],[slink],[bsId], [slink2],[comment],[contraId],[comment2],[sourceCode],
 '' as contraAccountCode,
 '' as contraAccountDesc,
 accountId as acrAccountId, 
 '' as acrAccountCode,
 '' as acrAccountDesc,
 ''   from gldetailreports 
     where contraId = @accountId and ISNULL(bsId,0) = 0 
      and sourceDate <= cast(@apportionToDate as varchar)
    end   

   if @accountType = 4701 and @accountTypeDesc='ACCRUED RECEIVABLE' and @apportionCodeOnly <> 'TRUE' and isnull(@amount,0) < .01
    begin
 -- Add glDetail when apportioning by accrued receivable account
     insert into @twt select [id],[fpid],[fpCode],[fpDesc],[accountId],[accountCode],[accountDesc],[amount],[creationdate],[creationtime],[date],[slink],[bsId], [slink2],[comment],[contraId],[comment2],[sourceCode],
 '' as contraAccountCode,
 '' as contraAccountDesc,
 accountId as acrAccountId, 
 '' as acrAccountCode,
 '' as acrAccountDesc,
 ''   from gldetailreports 
     where accountId = @accountId and contraId > 0 and ISNULL(bsId,0) = 0 
      and sourceDate <= cast(@apportionToDate as varchar)
    end

   if @accountType = 4701 and @accountTypeDesc='ACCRUED RECEIVABLE' and @apportionCodeOnly = 'TRUE' and isnull(@amount,0) > 0
    begin
 -- Add glDetail when apportioning by accrued receivable account
     insert into @twt select 0,0,'','',accountId,accountCode,accountDesc,@amount,null,null,0,'',0, '','',0,'','',
 '' as contraAccountCode,
 '' as contraAccountDesc,
 0 as acrAccountId, 
 '' as acrAccountCode,
 '' as acrAccountDesc,
 ''   from glaccounts 
     where accountId = @accountId 
    end

   if @accountType = 4701 and @accountTypeDesc='ACCRUED RECEIVABLE' and @apportionCodeOnly = 'TRUE' and isnull(@amount,0) < .01
    begin
 -- Add glDetail when apportioning by accrued receivable account
     insert into @twt select 0,0,'','',accountId,accountCode,accountDesc,100,null,null,0,'',0, '','',0,'','',
 '' as contraAccountCode,
 '' as contraAccountDesc,
 0 as acrAccountId, 
 '' as acrAccountCode,
 '' as acrAccountDesc,
 ''   from glaccounts 
     where accountId = @accountId 
    end

   if @accountType = 4512
    begin
 -- Add glDetail when apportioning protest by journal entry
     insert into @twt select a.[id],a.[fpid],a.[fpCode],a.[fpDesc],a.[accountId],a.[accountCode],a.[accountDesc],cast(b.key3 as money),a.[creationdate],a. [creationtime],a.[date],a.[slink],a.[bsId],a.[slink2],a.[comment],a.[contraId],a.[comment2],a.[sourceCode],
 '' as contraAccountCode,
 '' as contraAccountDesc,
 a.accountId as acrAccountId, 
 '' as acrAccountCode,
 '' as acrAccountDesc,
 ''   
from gldetail a, object b where b.typ=4775 and a.slink2=b.olink2 and b.link1=@accountId 

union all

     select a.[id],a.[fpid],a.[fpCode],a.[fpDesc],a.[accountId],a.[accountCode],a.[accountDesc],a.[amount],a.[creationdate],a.[creationtime],a.[date],a.[slink],a.[bsId],a.[slink2],a.[comment],a.[contraId],a.[comment2],a.[sourceCode],
 '' as contraAccountCode,
 '' as contraAccountDesc,
 a.accountId as acrAccountId, 
 '' as acrAccountCode,
 '' as acrAccountDesc,
 ''   
from gldetail a where left(slink,1)='o' and dbo.slinkId(a.slink)=@accountId and a.amount>0 

    end

   if @accountType = 4502
    begin
 --    declare @slink varchar(15) = 'o'+cast(@accountId as varchar(15)) 
  
 -- Add glDetail when special apportioning a receipt
     insert into @twt select [id],[fpid],[fpCode],[fpDesc],[accountId],[accountCode],[accountDesc],[amount],[creationdate],[creationtime],[date],[slink],[bsId], [slink2],[comment],[contraId],[comment2],[sourceCode],
 '' as contraAccountCode,
 '' as contraAccountDesc,
 accountId as acrAccountId, 
 '' as acrAccountCode,
 '' as acrAccountDesc,
 ''   from gldetail 
       where slink in (select slink from dbo.receiptSLinks(@accountId)) and contraId > 0 and ISNULL(bsId,0) = 0 
    end
  end
 end

--  update a set date=case when isnumeric(b.key2)=1 then cast(b.key2 as int) else 0 end from @twt a, object b where a.slink='o'+cast(b.id as varchar)

  update a set [date]=case when isnumeric(b.key2)=1 then cast(b.key2 as int) else 0 end 
from @twt a, object b where left(a.slink,1)='o' and cast(substring(a.slink,2,15) as int)=b.id

  update a set date=case when isnumeric(b.key2)=1 then cast(b.key2 as int) else 0 end 
from @twt a, object b, receiptLink c where a.slink='l'+cast(c.id as varchar) and c.receiptId = b.id

  update a set date=case when isnumeric(b.key2)=1 then cast(b.key2 as int) else 0 end 
from @twt a, object b, journalLink c where a.slink='j'+cast(c.id as varchar) and c.jeId = b.id

  delete from @twt where date > @apportionToDate

  delete from @twt where amount=0.00

  update t set contraAccountCode = g.accountCode, contraAccountDesc = g.accountDesc from @twt t, glaccounts g where t.contraId=g.accountId
  update t set acrAccountCode = g.accountCode, acrAccountDesc = g.accountDesc from @twt t, glaccounts g where t.acrAccountId=g.accountId




-- debit Collection Account
 insert @wt (accountId, debitCode, apTableType, amount, contraAccountCode, contraAccountDesc, ord)
 select a.contraId, b.accountCode, b.apTableType, SUM(a.amount), a.contraAccountCode, a.contraAccountDesc, '001'
  from @twt a, glAccounts b
  where a.contraId = b.accountId
  group by a.contraId, b.accountCode, b.apTableType, a.contraAccountCode, a.contraAccountDesc

-- debit Expense accounts
 insert @wt (accountId, debitCode,apTableType,amount, contraAccountCode, contraAccountDesc, ord)
 select b.accountId, b.accountCode, b.apTableType, SUM(a.amount), a.contraAccountCode, a.contraAccountDesc, '010'
  from @twt a, glAccounts b, glaccounts c
  where b.accountType = 'EXPENSE'
   and a.contraId = c.accountId
   and b.targetAccountCode = c.accountCode
  group by b.accountId, b.accountCode, b.apTableType, a.contraAccountCode, a.contraAccountDesc

-- Add additional debits to account for refunds if apportioning protest
  if @accountType = 4512
  begin
-- debit Collection Account
   insert @wt (accountId, debitCode, apTableType, amount, contraAccountCode, contraAccountDesc, ord)
   select a.contraId, b.accountCode, b.apTableType, SUM(cast(c.a5 as money)), contraAccountCode, contraAccountDesc, '001'
    from @twt a, glAccounts b, object c
    where a.contraId = b.accountId
     and c.typ = 4775 
     and c.olink2 = a.slink2
     and c.link1 = @accountId
    group by a.contraId, b.accountCode, b.apTableType, contraAccountCode, contraAccountDesc

-- debit Expense accounts
   insert @wt (accountId, debitCode,apTableType,amount, contraAccountCode, contraAccountDesc,ord)
   select b.accountId, b.accountCode, b.apTableType, SUM(cast(d.a5 as money)), contraAccountCode, contraAccountDesc,'010'
    from @twt a, glAccounts b, glaccounts c, object d
    where b.accountType = 'EXPENSE'
     and a.contraId = c.accountId
     and b.targetAccountCode = c.accountCode
     and d.typ = 4775 
     and d.olink2 = a.slink2
     and d.link1 = @accountId
    group by b.accountId, b.accountCode, b.apTableType, contraAccountCode, contraAccountDesc

  end


-- credit accrued receivables 
 insert @wt(accountId, creditCode, amount, comment,slink2, contraId, sourceCode, contraAccountCode, contraAccountDesc, acrAccountId, acrAccountCode, acrAccountDesc, ord)
 select a.accountId, b.accountCode, SUM(a.amount), isnull(a.comment,''),slink2, contraId, sourceCode, contraAccountCode, contraAccountDesc, acrAccountId, acrAccountCode, acrAccountDesc, '020'
  from @twt a, glAccounts b
  where a.accountId = b.accountId
  group by a.accountId, b.accountCode, isnull(a.comment,''), slink2, contraId, sourceCode, contraAccountCode, contraAccountDesc, acrAccountId, acrAccountCode, acrAccountDesc
  having SUM(a.amount) <> 0.00

-- credit funds
 insert @wt(accountId, creditCode, apTableType, apYear, amount, appilottable, apdistrict, aprate, appoptype, comment, sourceCode, contraAccountCode, contraAccountDesc, acrAccountId, acrAccountCode, acrAccountDesc,ord)
 select a.accountId, b.targetAccountCode, b.apTableType, b.apYear, SUM(a.amount), b.appilottable, b.apdistrict, b.aprate, b.appoptype, a.comment, a.sourceCode, contraAccountCode, contraAccountDesc, acrAccountId, acrAccountCode, acrAccountDesc,'030'
  from @twt a, glAccounts b
  where a.accountId = b.accountId
  group by a.accountId, b.apTableType, b.apYear, b.targetAccountCode, appilottable, apdistrict, aprate, appoptype, a.sourceCode, contraAccountCode, contraAccountDesc, acrAccountId, acrAccountCode, acrAccountDesc, a.comment
  having SUM(a.amount) <> 0.00

-- process the L types
 update @wt set processFlag = 1 where apTableType = 'L'
 while exists(select * from @wt where processFlag = 1)
 begin
  select top 1 @tokenId = id,
   @tokenAmount = amount,
   @tokenYear = apYear,
   @tokenCode = appilottable,
   @tokenComment = isnull(comment,''),
   @tokenSourceCode = isnull(sourceCode,''),
   @tokencontraAccountCode = contraAccountCode, 
   @tokencontraAccountDesc = contraAccountDesc, 
   @tokenacrAccountId = acrAccountId, 
   @tokenacrAccountCode = acrAccountCode, 
   @tokenacrAccountDesc = acrAccountDesc
 from @wt where processFlag = 1
  insert @wt(accountId, apTableType, amount, stepDesc, apYear, comment, sourceCode, contraAccountCode, contraAccountDesc, acrAccountId, acrAccountCode, acrAccountDesc,ord)
  select accountId, 'M', amount, @tokenComment, @tokenYear, @tokenComment, @tokenSourceCode, @tokencontraAccountCode, @tokencontraAccountDesc, @tokenacrAccountId, @tokenacrAccountCode, @tokenacrAccountDesc,'030'
   from dbo.millsGetRows(4009,@tokenYear,@tokenAmount,@tokenCode)
  update @wt set processFlag = 2, creditCode = null where id = @tokenId
 end

-- process the M types
 update @wt set processFlag = 1 where apTableType = 'M' and processFlag = 0 

 while exists(select * from @wt where processFlag = 1)
 begin
  select top 1 @tokenId = id, 
    @tokenAccountId = accountId, 
    @tokenAmount = amount, 
    @tokenComment = isnull(comment,''), 
    @tokenSourceCode = isnull(sourceCode,''), 
    @tokencontraAccountCode = contraAccountCode, 
    @tokencontraAccountDesc = contraAccountDesc, 
    @tokenacrAccountId = acrAccountId, 
    @tokenacrAccountCode = acrAccountCode, 
    @tokenacrAccountDesc = acrAccountDesc


from @wt where processFlag = 1
  insert @wt (accountId, apTableType, apYear, creditCode, amount, stepDesc, comment, sourceCode, contraAccountCode, contraAccountDesc, acrAccountId, acrAccountCode, acrAccountDesc, ord)
  select 0, apTableType, taxYear, apportionCode, amount, taxname, @tokenComment, case when @tokenSourceCode in ('AD VALOREM','') then sourceCode else @tokenSourceCode end, @tokencontraAccountCode, @tokencontraAccountDesc, @tokenacrAccountId, @tokenacrAccountCode, @tokenacrAccountDesc, '040'   
   from dbo.getRates('apportionment',@tokenAccountId,@tokenAmount,null,'')
  update @wt set processFlag = 2 where id = @tokenId
 end

-- process A types
 update @wt set processFlag = 1 where processFlag = 0 and apTableType = 'A'

 while exists(select * from @wt where processFlag = 1)
 begin
  select top 1 @tokenId = id, 
    @tokenAccountId = accountId,
    @tokenAmount = amount, 
    @tokenYear = apYear, 
    @tokenCode = creditCode, 
    @tokenStepDesc = isnull(stepDesc,''), 
    @tokenComment = isnull(comment,''), 
    @tokenSourceCode = isnull(sourceCode,''), 
    @tokencontraAccountCode = contraAccountCode, 
    @tokencontraAccountDesc = contraAccountDesc, 
    @tokenacrAccountId = isnull(acrAccountId,0), 
    @tokenacrAccountCode = acrAccountCode, 
    @tokenacrAccountDesc = acrAccountDesc 
from @wt where processFlag = 1

  insert @wt(accountId, apYear, creditCode, amount, stepDesc, comment, sourceCode, contraAccountCode, contraAccountDesc, acrAccountId, acrAccountCode, acrAccountDesc, ord)
  select @tokenAccountId, @tokenYear, accountCode, amount, left(@tokenStepDesc+' '+[description]+' '+@tokenYear,49), @tokenComment, @tokenSourceCode, @tokencontraAccountCode, @tokencontraAccountDesc, @tokenacrAccountId, @tokenacrAccountCode, @tokenacrAccountDesc, '050'
   from dbo.millsGetRows(4013,@tokenYear,@tokenAmount,'')
  update @wt set processFlag = 2, creditCode = null 
   where id = @tokenId
 end

-- process P types
 update @wt set processFlag = 1 where processFlag = 0 and apTableType = 'P' 

 while exists(select * from @wt where processFlag = 1)
 begin
  select top 1 @tokenId = id, 
    @tokenAccountId = accountId, 
    @tokenAmount = amount, 
    @tokenYear = apYear, 
    @tokenCode = creditcode, 
    @tokenappoptype = appoptype, 
    @tokenComment = isnull(comment,''), 
    @tokenSourceCode = isnull(sourceCode,''), 
    @tokencontraAccountCode = contraAccountCode, 
    @tokencontraAccountDesc = contraAccountDesc, 
    @tokenacrAccountId = acrAccountId, 
    @tokenacrAccountCode = acrAccountCode, 
    @tokenacrAccountDesc = acrAccountDesc 
  from @wt where processFlag = 1
  insert @wt(accountId, apYear, creditCode, amount, stepDesc, comment, sourceCode, contraAccountCode, contraAccountDesc, acrAccountId, acrAccountCode, acrAccountDesc, ord)
  select @tokenAccountId, @tokenYear, accountCode, amount, description+' '+@tokenYear, @tokenComment, @tokenSourceCode, @tokencontraAccountCode, @tokencontraAccountDesc, @tokenacrAccountId, @tokenacrAccountCode, @tokenacrAccountDesc, '060'
   from dbo.millsGetRows(4014,@tokenYear,@tokenAmount,@tokenappoptype)
  update @wt set processFlag = 2, creditCode = null where id = @tokenId
 end

-- process T types
 update @wt set processFlag = 1 where processFlag = 0 and apTableType = 'T' 

 while exists(select * from @wt where processFlag = 1)
 begin
  select top 1 @tokenId = id, 
    @tokenAccountId = accountId, 
    @tokenAmount = amount, 
    @tokenCode = appilottable,
    @tokenComment = isnull(comment,''), 
    @tokenSourceCode = isnull(sourceCode,''), 
    @tokencontraAccountCode = contraAccountCode, 
    @tokencontraAccountDesc = contraAccountDesc, 
    @tokenacrAccountId = acrAccountId, 
    @tokenacrAccountCode = acrAccountCode, 
    @tokenacrAccountDesc = acrAccountDesc 
  from @wt where processFlag = 1
  insert @wt(accountId, apYear, creditCode, amount, stepDesc, comment, sourceCode, contraAccountCode, contraAccountDesc, acrAccountId, acrAccountCode, acrAccountDesc, ord)
  select @tokenAccountId, @tokenCode, accountCode, amount, description+' '+@tokenCode, @tokenComment, @tokenSourceCode, @tokencontraAccountCode, @tokencontraAccountDesc, @tokenacrAccountId, @tokenacrAccountCode, @tokenacrAccountDesc, '070'
   from dbo.millsGetRows(4022,@tokenCode,@tokenAmount,'')
  update @wt set processFlag = 2, creditCode = null where id = @tokenId
 end

-- process S types
 update @wt set processFlag = 2,creditCode=isnull((select key2 from object where typ=4011 and key1=aprate),'') where processFlag = 0 and apTableType = 'S' 

 insert @wt (acraccountCode,amount,stepDesc)
  select acraccountCode, sum(amount), 'ACR1'
   from @wt where acraccountcode=creditcode
   group by acraccountCode

 insert @wt (acraccountCode,amount,comment,stepDesc)
  select acraccountCode, sum(amount), 'Apportioned','ACR2'
   from @wt where acraccountcode<>creditcode and creditcode>' 0'
   group by acraccountCode

 update w set comment='Match' from @wt w where stepDesc='ACR1' and amount = isnull((select sum(amount) from @wt where acraccountCode=w.acraccountCode and stepDesc='ACR2'),0)

 insert @wt (amount,acraccountCode,stepDesc,apYear)
  select sum(amount), left(isnull(apTableType,''),1)+rtrim(isnull(appoptype,'')),'Table1',isnull(apyear,'') from @wt
      where apTableType in ('P','A')
   group by isnull(apTableType,''),isnull(apyear,''),isnull(appoptype,'')
 
 insert @wt (amount, acraccountCode, stepDesc, apYear)
  select sum(amount), left(rtrim(stepDesc),5),'Table2A',isnull(apyear,'') from @wt
   where stepDesc like '%MILL%' and creditCode>' 0'
   group by left(rtrim(stepDesc),5),isnull(apyear,'')

 insert @wt (amount, acraccountCode, stepDesc,apYear)
  select sum(amount), right(rtrim(stepDesc),8),'Table2A',isnull(apyear,'') from @wt
   where stepDesc like '%ADA%' and creditCode>' 0' and stepDesc not like '%MILL%'
   group by right(rtrim(stepDesc),8),isnull(apyear,'')
 
 insert @wt (amount, acraccountCode, stepDesc, apYear)
  select sum(amount), right(rtrim(stepDesc),11),'Table2P',isnull(apyear,'') from @wt
   where stepDesc like '%POPULAT%' and creditCode>' 0'
   group by right(rtrim(stepDesc),11),isnull(apyear,'')

 update w set comment='Match' from @wt w where stepDesc='Table1' 
   and amount = isnull((select sum(amount) from @wt 
   where apyear=w.apyear and left(stepDesc,6)='Table2' and left(w.acraccountCode,1)=substring(stepDesc,7,1)),0)

 update w set comment='Match' from @wt w where left(stepDesc,6)='Table2' 
   and amount = isnull((select sum(amount) from @wt 
   where apyear=w.apyear and left(stepDesc,6)='Table1' and left(acraccountCode,1)=substring(w.stepDesc,7,1)),0)
   
 return
end