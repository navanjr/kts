create function dbo.apportionCollectionsWT( @accountId int, @apportionToDate int) returns @wt table(
  id int identity(1,1),
  accountId int,
  creditCode varchar(50),
  apTableType varchar(50),
  apYear varchar(50),
  debitCode varchar(50),
  stepDesc varchar(50),
  amount money,
  appilottable varchar(50),
  apdistrict varchar(50),
  aprate varchar(50),
  appoptype varchar(50),
  processFlag int default 0,
  comment varchar(50),
  slink2 varchar(15),
  contraId int,
  sourceCode varchar(60)
)

begin

 declare
  @tokenId int,
  @tokenAccountId int,
  @tokenAmount money,
  @tokenYear varchar(50),
  @tokenCode varchar(50),
  @tokenappilottable varchar(50),
  @tokenapdistrict varchar(50),
  @tokenaprate varchar(50),
  @tokenappoptype varchar(50),
  @tokenStepDesc varchar(50),
  @tokenComment varchar(50),
  @accountType int,
  @tokenSourceCode varchar(60)


declare @twt table(
	[id] [int] ,
	[fpid] [int],
	[fpCode] [varchar](10),
	[fpDesc] [varchar](50),
	[accountId] [int],
	[accountCode] [varchar](50),
	[accountDesc] [varchar](50),
	[amount] [money],
	[creationdate] [int],
	[creationtime] [int],
	[date] [int],
	[slink] [varchar](15),
	[bsId] [int],
	[slink2] [varchar](15),
	[comment] [varchar](50),
	[contraId] [int],
	[comment2] [varchar](50),
	[sourceCode] [varchar](60))

  select @accountType = typ from object where id = @accountId 

  if @accountType = 4701
   begin
-- Add glDetail when apportioning by account
    insert into @twt select [id],[fpid],[fpCode],[fpDesc],[accountId],[accountCode],[accountDesc],[amount],[creationdate],[creationtime],[date],[slink],[bsId],[slink2],[comment],[contraId],[comment2],[sourceCode] from gldetail 
    where contraId = @accountId and ISNULL(bsId,0) = 0 
   end

  if @accountType = 4512
   begin
-- Add glDetail when apportioning protest by journal entry
    insert into @twt select a.[id],a.[fpid],a.[fpCode],a.[fpDesc],a.[accountId],a.[accountCode],a.[accountDesc],cast(b.key3 as money),a.[creationdate],a.[creationtime],a.[date],a.[slink],a.[bsId],a.[slink2],a.[comment],a.[contraId],a.[comment2],a.[sourceCode] from gldetail a, object b where b.typ=4775 and a.slink2=b.olink2 and b.link1=@accountId 
   end

  if @accountType = 4502
   begin
--    declare @slink varchar(15) = 'o'+cast(@accountId as varchar(15)) 

-- Add glDetail when special apportioning a receipt
    insert into @twt select [id],[fpid],[fpCode],[fpDesc],[accountId],[accountCode],[accountDesc],[amount],[creationdate],[creationtime],[date],[slink],[bsId],[slink2],[comment],[contraId],[comment2],[sourceCode] from gldetail 
      where slink in (select slink from dbo.receiptSLinks(@accountId)) and contraId > 0 and ISNULL(bsId,0) = 0 
   end

  update a set date=case when isnumeric(b.key2)=1 then cast(b.key2 as int) else 0 end from @twt a, object b where a.slink='o'+cast(b.id as varchar)
  update a set date=case when isnumeric(b.key2)=1 then cast(b.key2 as int) else 0 end from @twt a, object b, receiptLink c where a.slink='l'+cast(c.id as varchar) and c.receiptId = b.id

  delete from @twt where date > @apportionToDate

  delete from @twt where amount=0.00


-- debit Collection Account
 insert @wt (accountId, debitCode, apTableType, amount)
 select a.contraId, b.accountCode, b.apTableType, SUM(a.amount)
  from @twt a, glAccounts b
  where a.contraId = b.accountId
  group by a.contraId, b.accountCode, b.apTableType

-- debit Expense accounts
 insert @wt (accountId, debitCode,apTableType,amount)
 select b.accountId, b.accountCode, b.apTableType, SUM(a.amount)
  from @twt a, glAccounts b, glaccounts c
  where b.accountType = 'EXPENSE'
   and a.contraId = c.accountId
   and b.targetAccountCode = c.accountCode
  group by b.accountId, b.accountCode, b.apTableType

-- Add additional debits to account for refunds if apportioning protest
  if @accountType = 4512
  begin
-- debit Collection Account
   insert @wt (accountId, debitCode, apTableType, amount)
   select a.contraId, b.accountCode, b.apTableType, SUM(cast(c.a5 as money))
    from @twt a, glAccounts b, object c
    where a.contraId = b.accountId
     and c.typ = 4775 
     and c.olink2 = a.slink2
     and c.link1 = @accountId
    group by a.contraId, b.accountCode, b.apTableType

-- debit Expense accounts
   insert @wt (accountId, debitCode,apTableType,amount)
   select b.accountId, b.accountCode, b.apTableType, SUM(cast(d.a5 as money))
    from @twt a, glAccounts b, glaccounts c, object d
    where b.accountType = 'EXPENSE'
     and a.contraId = c.accountId
     and b.targetAccountCode = c.accountCode
     and d.typ = 4775 
     and d.olink2 = a.slink2
     and d.link1 = @accountId
    group by b.accountId, b.accountCode, b.apTableType

  end


-- credit accrued receivables 
 insert @wt(accountId, creditCode, amount, comment,slink2, contraId, sourceCode)
 select a.accountId, b.accountCode, SUM(a.amount), isnull(a.comment,''),slink2, contraId, sourceCode
  from @twt a, glAccounts b
  where a.accountId = b.accountId
  group by a.accountId, b.accountCode, isnull(a.comment,''), slink2, contraId, sourceCode
  having SUM(a.amount) <> 0.00

-- credit funds
 insert @wt(accountId, creditCode, apTableType, apYear, amount, appilottable, apdistrict, aprate, appoptype, comment, sourceCode)
 select a.accountId, b.targetAccountCode, b.apTableType, b.apYear, SUM(a.amount), b.appilottable, b.apdistrict, b.aprate, b.appoptype, b.apdistrict, a.sourceCode
  from @twt a, glAccounts b
  where a.accountId = b.accountId
  group by a.accountId, b.apTableType, b.apYear, b.targetAccountCode, appilottable, apdistrict, aprate, appoptype, a.sourceCode
  having SUM(a.amount) <> 0.00

-- process the L types
 update @wt set processFlag = 1 where apTableType = 'L'
 while exists(select * from @wt where processFlag = 1)
 begin
  select top 1 @tokenId = id, @tokenAmount = amount, @tokenYear = apYear, @tokenCode = appilottable, @tokenComment = isnull(comment,''), @tokenSourceCode = isnull(sourceCode,'') from @wt where processFlag = 1
  insert @wt(accountId, apTableType, amount, stepDesc, apYear, comment, sourceCode)
  select accountId, 'M', amount, @tokenComment, @tokenYear, @tokenComment, @tokenSourceCode
   from dbo.millsGetRows(4009,@tokenYear,@tokenAmount,@tokenCode)
  update @wt set processFlag = 2, creditCode = null where id = @tokenId
 end

-- process the M types
 update @wt set processFlag = 1 where apTableType = 'M' and processFlag = 0 

 while exists(select * from @wt where processFlag = 1)
 begin
  select top 1 @tokenId = id, @tokenAccountId = accountId, @tokenAmount = amount, @tokenComment = isnull(comment,''), @tokenSourceCode = isnull(sourceCode,'') from @wt where processFlag = 1
  insert @wt (accountId, apTableType, apYear, creditCode, amount, stepDesc, comment, sourceCode)
  select 0, apTableType, taxYear, apportionCode, amount, taxname, @tokenComment, case when @tokenSourceCode in ('AD VALOREM','') then sourceCode else @tokenSourceCode end   
   from dbo.getRates('apportionment',@tokenAccountId,@tokenAmount,null,'')
  update @wt set processFlag = 2 where id = @tokenId
 end

-- process A types
 update @wt set processFlag = 1 where processFlag = 0 and apTableType = 'A'

 while exists(select * from @wt where processFlag = 1)
 begin
  select top 1 @tokenId = id, @tokenAccountId = accountId, @tokenAmount = amount, @tokenYear = apYear, @tokenCode = creditCode, @tokenStepDesc = isnull(stepDesc,''), @tokenComment = isnull(comment,''), @tokenSourceCode = isnull(sourceCode,'') from @wt where processFlag = 1

  insert @wt(accountId, apYear, creditCode, amount, stepDesc, comment, sourceCode)
  select @tokenAccountId, @tokenYear, accountCode, amount, @tokenStepDesc+' '+description+' '+@tokenYear, @tokenComment, @tokenSourceCode
   from dbo.millsGetRows(4013,@tokenYear,@tokenAmount,'')
  update @wt set processFlag = 2, creditCode = null 
   where id = @tokenId
 end

-- process P types
 update @wt set processFlag = 1 where processFlag = 0 and apTableType = 'P' 

 while exists(select * from @wt where processFlag = 1)
 begin
  select top 1 @tokenId = id, @tokenAccountId = accountId, @tokenAmount = amount, @tokenYear = apYear, @tokenCode = creditcode, @tokenappoptype = appoptype, @tokenComment = isnull(comment,''), @tokenSourceCode = isnull(sourceCode,'') from @wt where processFlag = 1
  insert @wt(accountId, apYear, creditCode, amount, stepDesc, comment, sourceCode)
  select @tokenAccountId, @tokenYear, accountCode, amount, description+' '+@tokenYear, @tokenComment, @tokenSourceCode
   from dbo.millsGetRows(4014,@tokenYear,@tokenAmount,@tokenappoptype)
  update @wt set processFlag = 2, creditCode = null where id = @tokenId
 end

-- process S types
 update @wt set processFlag = 2,creditCode=isnull((select key2 from object where typ=4011 and key1=aprate),'') where processFlag = 0 and apTableType = 'S' 




 return
end