create function dbo.mortgageTaxCalculator(
 @startDate int=0,
 @endDate int=0,
 @termYears decimal(19,9)=0,
 @loanAmount money=0,
 @taxRate money=0
) returns @rt table(
 startDate int,
 endDate int,
 termYears decimal(19,9),
 loanAmount money,
 taxRate money,
 taxAmount money,
 feeAmount money,
 taxTotal money,
 blob varchar(max)
) as 
begin

/*
Rate of Tax on each $100 or major fraction thereof :
5 years Of more .10
4 years and less than 5 Years .08
3 years and less than 4 years .06
2 years and less than 3 years .04
Less than 2 years .02 
Mortgage for less than $100 .10
Certification Fee per Mortgage $5.00
*/

 declare
  @taxAmount money,
  @feeAmount money = 5.0,
  @taxTotal money



-- sent endDate if empty
 if isnull(@endDate,0) < 1 and isnull(@termYears,0) > 0
  set @endDate = @startDate + (@termYears * 365)

-- sent term if empty
 if isnull(@endDate,0) > 0 and isnull(@termYears,0) < 1
  set @termYears = (@endDate - @startDate) / 365.0

 if @taxRate < .01
 begin
  if floor(@termYears) < 6
   select @taxRate = case floor(@termYears)
    when 5 then .1
    when 4 then .08
    when 3 then .06
    when 2 then .04
    else .02
   end
  else
   select @taxRate = .1

  if isnull(@endDate,0) < 1 and isnull(@termYears,0) < 1
   set @taxRate = .1
 end

 if @loanAmount < 100.00
  set @taxRate = .1

 select @taxAmount = ceiling(@loanAmount/100.0) * @taxRate
 select @taxTotal = @taxAmount + @feeAmount

 insert @rt
 select @startDate, @endDate, @termYears, @loanAmount, @taxRate, @taxAmount, @feeAmount, @taxTotal,
  '@startDate=' + cast(@startDate as varchar) + 
  ';@endDate=' + cast(@endDate as varchar) + 
  ';@termYears=' + cast(round(@termYears,2) as varchar) +
  ';@loanAmount=' + cast(@loanAmount as varchar) + 
  ';@taxRate=' + cast(@taxRate as varchar) + 
  ';@taxAmount=' + cast(@taxAmount as varchar) + 
  ';@feeAmount=' + cast(@feeAmount as varchar) + 
  ';@taxTotal=' + cast(@TaxTotal as varchar) + ';'

 return
end