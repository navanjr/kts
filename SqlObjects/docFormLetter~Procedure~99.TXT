create proc dbo.docFormLetter(
 @documentId int,
 @invoiceId int,
 @batchId int
) as
begin
 exec dbo.logit @@procid, '@documentId', @documentId, '@invoiceId', @invoiceId

 declare
  @rawText varchar(max),
  @sql nvarchar(max),
  @fieldToken varchar(50),
  @tag varchar(50),
  @value varchar(max),
  @tableId int,
  @tableToken varchar(50),
  @where varchar(200)
 
 declare @fields table(
  tableName varchar(50),
  fieldName varchar(50),
--  fieldType varchar(50),
  tag varchar(50),
  value varchar(max)
 )

insert @fields select null,null,'<legal>',dbo.getLegalDescription(@invoiceId)
insert @fields select null,null,'<addressee>',dbo.parseAddressAndName(dbo.getTaxInvoiceBlob(@invoiceId))
insert @fields select null,null,'<letterHead>',dbo.docLetterHeadSF(0)
insert @fields select null,null,'<documentDate>',dbo.padCenter(dbo.dateFormal(documentDate),' ',80) from dbo.docBRWDecoder(@batchId)
insert @fields select null,null,'<docUnpaid>',dbo.docUnpaidSF(@invoiceId,77481)
insert @fields select null,null,'<title>',dbo.padCenter(upper(key1),' ',80) from object where id = @documentId
insert @fields select null,null,'<line>',dbo.padleft('','_',60) 


declare @tables table(id int identity(1,1),tableToken varchar(50),whereFrom varchar(200))
 insert @tables
   select 'invoices','id = ' + cast(@invoiceId as varchar)
     union
   select 'site','1 = 1'
     union 
   select 'Adtax','id = (select taxrollid from invoices where id = ' + cast(@invoiceId as varchar) + ' )'
    
    


  while exists(select * from @tables)
begin

  select top 1 @tableId = id, @tableToken = tableToken,@where = wherefrom from @tables order by id desc



 declare i cursor for select column_name from INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @tableToken
 open i
 fetch next from i into @fieldToken
 while @@fetch_status = 0 
 begin
  set @sql = 'select ''' + @tableToken + ''',''' + @fieldToken + ''', ''<' + @fieldToken + '>'', ' + @fieldToken
   + ' from '+@tableToken+' WHERE ' + @where
  print(@fieldToken + ' | ' + @sql)
  insert @fields exec(@sql)
  fetch next from i into @fieldToken
 end
 close i
 deallocate i

 delete from @tables where id = @tableId
end

 select @rawText = e1 from object where typ = 4900 and id = @documentId

 declare f cursor for select tag, value from @fields
 open f
 fetch next from f into @tag, @value
 while @@fetch_status = 0 
 begin
  set @rawText = replace(@rawText,@tag,@value)
  fetch next from f into @tag, @value 
 end
 close f
 deallocate f


 --select * from @fields

 select @rawText 

 return
end