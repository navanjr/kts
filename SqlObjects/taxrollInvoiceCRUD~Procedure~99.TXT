create procedure dbo.taxrollInvoiceCRUD(@id int, @smode int = 0, @invoiceType varchar (1) = '') as
begin

 declare @styp char(1) = 't'
 declare
  @slink varchar(15),
  @code int,
  @arAccountId int,
  @message varchar(500),
  @taxyear varchar(4),
  @district varchar(15),
  @rateName varchar(15)

 select
  @code = code,
  @message = message,
  @arAccountId = debitId,
  @slink = slink,
  @taxYear = taxYear,
  @district = district,
  @rateName = rateName
 from dbo.taxrollCheck(@id,@invoiceType)
 if @code = 1 
 begin
  if @smode=0
   begin
    select '@code=1;@message=' + @message + ';'
   end
  return
 end

 if @invoiceType='S'
  begin
   exec dbo.pilotFundReceivableVerification @taxyear,'',@rateName,''
  end
 else
  begin

   if @invoiceType<>'B'
    begin
     exec dbo.pilotFundReceivableVerification @taxyear,@district,@rateName,''
    end

  end

 declare @invd table(
  id int,
  description varchar(500),
  subDescription varchar(500),
  sourceCode varchar(50),
  sourceId int,
  fundCode varchar(50),
  fundId int,
  amount money
 )
 insert @invd
 select id,description,subDescription,sourceCode,sourceId,fundCode,fundId,amount from dbo.taxrollGetRates(@id,@invoiceType)


 if not exists(select * from @invd)
 begin
  if @smode = 0
   begin
    select '@code=1;@message=No tax rate detail available.;'
   end
  return
 end

 begin transaction
  declare 
   @idToken int,
   @newAccountId int,
   @acctCodeToken varchar(50)
  
  while exists(select * from @invd where sourceId = 0) 
  begin

   select top 1
    @idToken = id,
    @acctCodeToken = sourceCode 
   from @invd where sourceId = 0 
   
   exec dbo.glAccountVerification @acctCodeToken, 'SOURCE', 'CREATE', @accountId = @newAccountId OUTPUT

   update @invd set sourceId = @newAccountId where id = @idToken   

  end

  while exists(select * from @invd where fundId = 0 and @invoiceType<>'S') 
  begin

  select top 1
   @idToken = id,
   @acctCodeToken = fundCode 
  from @invd where fundId = 0 

   exec dbo.glAccountVerification @acctCodeToken, 'RECEIVABLE', 'CREATE', @accountId = @newAccountId OUTPUT

   update @invd set fundId = @newAccountId where id = @idToken   

  end
 
  if exists(select * from @invd where isnull(sourceId,0) = 0)
  begin
   rollback transaction
   if @smode = 0
    begin
     select '@code=1;@message=Missing Source Account Information. Contact Support. (txinv.1);'
    end
   return
  end
  if exists(select * from @invd where isnull(fundId,0) = 0 and @invoiceType<>'S')
  begin
   rollback transaction
   if @smode = 0
    begin
     select '@code=1;@message=Missing Source Account Information. Contact Support. (txinv.2);'
    end
   return
  end
  if (select sum(amount) from @invd) = 0
  begin
   rollback transaction
   if @smode = 0
    begin
     select '@code=1;@message=No amount exists to stage GL.;'
    end
   return
  end

  -- insert invoice detail
  insert receiptDetail (slink,description,subDescription,sourceCode,fundCode,amount)
  select
   @slink,
   description,
   subDescription,
   sourceCode,
   fundCode,
   amount
  from @invd

  -- stage the GL
  declare @accountsWorking table(
   accountId int,
   amount money
  )
  declare 
   @tokenAmount money
 
  -- credit Source and Debit AR
  insert @accountsWorking
   select b.accountId, sum(a.amount)*-1 
   from receiptDetail a, dbo.glAccounts b 
   where a.slink = @slink and a.sourceCode = b.accountCode group by b.accountId
  select @tokenAmount = abs(sum(amount)) from @accountsWorking
  insert @accountsWorking select @arAccountId, @tokenAmount

  -- insert
  insert gldetailstage (slink,accountId,amount) select @slink,accountId,amount from @accountsWorking where amount != 0
 
  update a set
   a.accountCode = b.accountCode,
   a.accountDesc = b.accountDesc
  from glDetailStage a, glAccounts b
  where a.accountId = b.accountId
   and a.slink = @slink 

  -- post to the gl
  declare @test int = substring(@slink,2,14)
  exec dbo.glPost @test, @styp, @smode
  
  -- Check glDetail for good data
  if (select dbo.glPostCheck(@slink)) = 1 
  begin
   rollback transaction
   if @smode = 0
    begin
     select '@code=1;@message=Failed post GL check. Contact Support. (txinv.3);'
    end
   return
  end

  -- flag as posted
--  update taxReference set [status] = 'Posted' where id = @taxrollId
  
 commit transaction

end
