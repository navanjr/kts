create function dbo.docReceivablesBRW(
 @mode varchar(10) = 'SUMMARY',
 @invTypeString varchar(50),
 @taxYear varchar(5) = '',
 @paidRatio money = 0.00,
 @switches varchar(10),
 @dtypesBlob varchar(max)
) returns @rt table(
 id int,
 ord varchar(50),
 display varchar(max),
 blob varchar(max),
 name varchar(50),
 parcel varchar(50),
 item numeric(7,1),
 count int,
 invoiceAmount money,
 invoiceDue money,
 feesDue money,
 otherAmount money,
 taxyear varchar(4),
 typ varchar(5),
-- pertyp varchar(5),
 paidRatio money,
 rowType int,
 ownerNumber numeric(14,2)
) as
begin

 declare
  @theDate int = 99999,
  @taxRulesFlag int = dbo.splitF(@switches,null,1),
  @paidRatioGreaterThanFlag int = dbo.splitF(@switches,null,2),
  @includePriorYears int = dbo.splitF(@switches,null,3),
  @combineYears int = dbo.splitF(@switches,null,4),
  @dTypeCode varchar(50)

 declare @invoiceTypes table(typ varchar(1))
 if @invTypeString in ('ALL','')
  insert @invoiceTypes select typ from invoices group by typ
 else
  insert @invoiceTypes select data from dbo.split(@invTypeString, null)

 if @taxYear = 'ALL'
  set @taxYear = ''

 declare 
  @floorToken varchar(50),
  @noMortCode varchar(50) = 'FALSE'

 select @noMortCode='TRUE' from dbo.docDTypes(@dTypesBlob) where id = 4 and switch = 0

 declare @years table(
  taxYear varchar(5)
 )
 if @taxyear > '  0'
  if @includePriorYears = 1
   insert @years select taxyear from invoices where taxyear <= @taxyear group by taxyear
  else
   insert @years select @taxyear
 else
  insert @years select taxyear from invoices group by taxyear

-- declare dType cursor for select code from dbo.docDTypes(@dTypesBlob) where switch = 0

 declare @wt table(
  id int,
  name varchar(50),
  parcel varchar(50),
  item numeric(7,1),
  amount money,
  due money,
  fees money,
  otherAmount money,
  taxyear varchar(4),
  postDate int,
  typ varchar(5),
  pertyp varchar(5),
  paidRatio money,
  statementId int,
  mortgageCode varchar(50),
  ownerNumber numeric(14,2)
 )

-- Deal with Mortgagecodes, delete everything that is not the selected mortcodes
 declare @selectedMortgageCodes table(code varchar(50))
  insert @selectedMortgageCodes select code from dbo.docDTypes(@dtypesBlob) where id > 4 and switch = 1

if not exists(select * from @selectedMortgageCodes)
 insert @wt
 select
  i.id,
  name,
  PARCEL,
  item,
  invoiceAmount,
  invoiceDue,
  subInvoiceDue,
  taxRuleDue,
  taxyear,
  coalesce(nullif(interestDate,''),postDate),
  typ,
  pertyp,
  case when invoiceAmount != 0 then
   case when abs(round(invoiceDue / invoiceAmount, 1) - 1) = 1 then .99 else abs(round(invoiceDue / invoiceAmount, 4) - 1) end
  else
   0
  end,
  i.statementId,
  coalesce(nullif(cast(adtax.treamort as varchar),''),cast(adtax.mortgageCode as varchar)),
  adtax.ownerNumber 
 from invoices i
 left outer join adtax on taxrollId = adtax.id
 where (invoiceDue + taxRuleDue) != 0
  and invoiceId = 0
  and taxyear in (select taxyear from @years)
  and typ in (select typ from @invoiceTypes)
  and isnull(coalesce(nullif(cast(adtax.treamort as varchar),''),cast(adtax.mortgageCode as varchar)),'') not in (select code from dbo.docDTypes(@dtypesBlob) where id > 4 and switch = 0) 
  and case when @noMortCode='TRUE' then isnull(coalesce(nullif(cast(adtax.treamort as varchar),''),cast(adtax.mortgageCode as varchar)),'0') else '0' end = '0'
 else
 insert @wt
 select
  i.id,
  name,
  PARCEL,
  item,
  invoiceAmount,
  invoiceDue,
  subInvoiceDue,
  taxRuleDue,
  taxyear,
  coalesce(nullif(interestDate,''),postDate),
  typ,
  pertyp,
  case when invoiceAmount != 0 then
   case when abs(round(invoiceDue / invoiceAmount, 1) - 1) = 1 then .99 else abs(round(invoiceDue / invoiceAmount, 4) - 1) end
  else
   0
  end,
  i.statementId,
  coalesce(nullif(cast(adtax.treamort as varchar),''),cast(adtax.mortgageCode as varchar)), 
  adtax.ownerNumber 
 from invoices i
 left outer join adtax on taxrollId = adtax.id
 where (invoiceDue + taxRuleDue) != 0
  and invoiceId = 0
  and taxyear in (select taxyear from @years)
  and typ in (select typ from @invoiceTypes)
  and isnull(coalesce(nullif(cast(adtax.treamort as varchar),''),cast(adtax.mortgageCode as varchar)),'') in (select code from @selectedMortgageCodes) 

 if @taxRulesFlag = 1
 begin
-- remove the taxRule child invoices
  declare @saveIds table(id int, maxPaidRatio money, minPaidRatio money)
  insert @saveIds select statementId, max(paidRatio), min(paidRatio) from @wt where statementId > 0 group by statementId
  delete @wt where statementId > 0
 end

-- Deal with dtypes
 declare @dtypeIds table(id int, switch int)
 declare @deleteAllOthers int = 0
 insert @dtypeIds select invoiceLinkId, d.switch from taxRollDetail join dbo.docDTypes(@dTypesBlob) d on d.code = dtype and d.id < 4
 delete @wt where id in (select id from @dTypeIds where switch = 0)
 if (select switch from dbo.docDTypes(@dTypesBlob) where code = 'All Others') = 0
  delete @wt where id not in (select id from @dTypeIds where switch != 0)

/* open dType
 fetch next from dType into @dTypeCode
 while @@fetch_status = 0 
 begin
--  delete @wt where id in (select invoiceLinkId from taxRollDetail where dtype = @dTypeCode)
  if @dTypeCode = 'All Others'
   set @deleteAllOthers = 1
  else 
   insert @dtypeIds select invoiceLinkId from taxRollDetail where dtype = @dTypeCode
  fetch next from dType into @dTypeCode
 end
 close dType
 deallocate dType
*/
 
-- Deal with paidRatio
 update a set a.paidRatio = b.maxPaidRatio
 from @wt a, @saveIds b where a.id = b.id and b.maxPaidRatio > a.paidRatio

 if @paidRatio is not null
 begin
  if @paidRatioGreaterThanFlag = 1
  begin
    delete @wt where paidRatio < @paidRatio --and statementId = 0
  end
  else
  begin
    delete @wt where paidRatio != @paidRatio-- and statementId = 0
  end
 end

 if @mode = 'SUMMARY'
 begin

 insert @rt
 select
  0,
  cast(9999 - cast(taxyear as int) as varchar) + 'c|' + right('aaaa' + typ,4) + '|' + cast(paidRatio as varchar),
  '  Type:' + typ + case when pertyp > '  0' then '.' + pertyp else '' end + '  ' + convert(varchar, cast(paidRatio * 100 as int)) + '% paid' ,
  '','','',null,
  COUNT(*) as count,
  sum(amount) as amount,
  sum(due) as due,
  sum(fees) as fees,
  sum(otherAmount),
  taxyear,
  typ + case when pertyp > '  0' then '.' + pertyp else '' end,
  paidRatio,
  1,
  null--max(ownerNumber)
 from @wt
 group by 
  taxyear, typ, perTyp,
  paidRatio
 order by 
  taxyear desc,
  typ,
  paidRatio

-- insert group headers
-- Typ
 insert @rt (id, ord, display, count, invoiceDue, feesDue, rowType)
 select
  0,
  dbo.splitF(ord,'|',1) + '|' + dbo.splitF(ord,'|',2),
  ' Totals for Type: ' + dbo.splitF(max(typ),'.',1),
  sum(count),
  sum(invoiceDue),
  sum(feesDue),
  2
 from @rt
 where rowType < 2
 group by
  dbo.splitF(ord,'|',1) + '|' + dbo.splitF(ord,'|',2)
 having count(*) > 1

-- Taxyear
 insert @rt (id, ord, display, count, invoiceDue, feesDue, rowType)
 select
  0,
  cast(9999 - cast(taxyear as int) as varchar) + 'b',
  'Taxyear: ' + taxyear,
  sum(count),
  sum(invoiceDue),
  sum(feesDue),
  3
 from @rt
 where rowType < 2
 group by
  taxyear

 select @floorToken = max(taxyear) from @wt

 insert @rt (id, ord, display, rowType)
 select
  0,
  cast(9999 - cast(taxyear as int) as varchar) + 'a',
  '',
  4
 from @rt
 where rowType < 2
--  and taxyear < @floorToken
 group by
  taxyear

-- insert grand totals
 insert @rt (id, ord, display, count, invoiceDue, feesDue, rowType)
 select
  0,
  cast(1000 as varchar) + 'b',
  '',
  sum(count),
  sum(invoiceDue),
  sum(feesDue),
  5
 from @rt
 where rowType < 2

 end
 else
--@mode=detail 
 if @combineYears=1 and (charindex('R',@invTypeString)+charindex('O',@invTypeString)+charindex('S',@invTypeString))>0
  begin
     insert @rt (id, name, parcel, item, invoiceAmount, invoiceDue, feesDue, taxyear, typ, paidRatio, rowType, ownerNumber)
      select 0, '', parcel, 0, sum(amount), sum(due), sum(fees), max(taxyear), '', 0, 1, 0
       from @wt group by parcel
      
     update r set 
      r.id=w.id,
      r.name=w.name,
      r.item=w.item,
      r.typ=w.typ,
      r.ownerNumber=w.ownerNumber 
      from @rt r, @wt w where w.parcel=r.parcel and r.taxyear=w.taxyear
  end
 else
   insert @rt (
   id, name, parcel, item, invoiceAmount, invoiceDue, feesDue, taxyear, typ, paidRatio, rowType, ownerNumber
  )
  select
   id, name, parcel, item, amount, due, fees, taxyear, typ, paidRatio, 1, ownerNumber
 from @wt
 
 return 
end