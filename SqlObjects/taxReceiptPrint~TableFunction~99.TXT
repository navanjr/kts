create function [dbo].[taxReceiptPrint](@recId varchar(50),@invoiceId int) returns   
          @rt table(
			recId varchar(50),
			InvoiceId int,
			taxRollid int,
			typ varchar(10),
			parcel varchar(50),
			item varchar(50),
			taxyear varchar(50),
			receiptNo varchar(20),
			receiptDate varchar(20),
			schoolDistrict varchar(50),
			legal varchar(max),
			acres varchar(10),
			blk varchar(10),
			sec varchar(10),
			twp varchar(10),
			rng varchar(10),
			recOf varchar(max),
			paidBy varchar(100),
			TaxAmt money,
			TaxDue money,
			TaxPaid money,
			TotPaid money,
			Penalty  money,
			mail  money,
			lien  money,
			adv  money,
			mowing  money,
			other  money,
			ckoth  money,
			cash  money,
			change  money,
			blob varchar(max),
                        deputy varchar(50),
                        invoiceLink int,
                        checkno varchar(250) ,
                        GrandTotal money,
                        Comments varchar(250),
                        recCount int default 0,
                        perTyp varchar(1) default '',
                        reptotaldue money default 0,
                        reptotalrec money default 0,
                        ownername varchar(60),
                        remainingTaxDue money,
                        remainingFeeDue money,             
                        remainingTaxDueTot money,
                        remainingFeeDueTot money  )             

as 
begin

--TODO: set up a sub-table that handles the different kinds of fees.  Right now we're lumping all the fees (mail,lien,advertising,mowing,other) together as other.

	insert @rt (recId,invoiceId,taxRollid,parcel,item,taxyear,paidBy,TaxAmt,TaxDue,taxPaid,Penalty,mail,lien,adv,mowing,other,typ)
					select  @recId, 
					case when invoiceId>0 then invoiceId else ID end,
					max(i.TAXROLLID),
					max(i.PARCEL),
					max(i.ITEM),
					i.TAXYEAR,
					max(i.NAME),
					sum(case when i.invoiceId=0 then i.invoiceAmount else 0 end),
					sum(case when i.invoiceId=0 then i.invoiceAmount else 0 end)- dbo.taxReceiptTaxPaid(@recid,case when invoiceId>0 then invoiceId else ID end,1),
                                        0,
                                        sum(case when i.invoiceId>0 and i.TYP='P' then i.invoiceamount else 0 end),
					0,
					0,
					0,
					0,
					sum(case when i.invoiceId>0 and i.TYP<>'P' and i.typ<>'A' then i.invoiceamount else 0 end),
                                        max(case when invoiceId>0 then '' else typ end)
                                       
					
					 from dbo.receiptSLinks(@recId),invoices i where LEFT(slink,1)='t' and right(slink,LEN(slink)-1)=i.id 
					  group by case when invoiceId>0 then invoiceId else ID end,i.TAXYEAR

if isnull(@invoiceId,0) >0
begin
 delete from @rt where InvoiceId <> @InvoiceId 
end 

	
	update @rt set 
                                receiptDate = Key2,
                                paidBy = case when a1>'  0' then a1 else paidBy end,
                                deputy = a18,
                                grandTotal = cast(c9 as money),
                                comments = d1
                         from Object where ID = @recid

        update r set 
                                receiptNo = a.receiptNumber 
                         from receiptlink a,@rt r where r.invoiceId = a.invoiceId and r.recId = a.receiptId and r.recId = @recId

	update r set 
				r.schoolDistrict = dbo.taxCorrectionsSF(a.SCHOOLDISTRICTMAIN,a.id,'042'),
				r.legal = cast(dbo.taxCorrectionsSF(a.LEGALDESCRIPTION,a.id,'102') as varchar(max))+CHAR(13)+CHAR(10)+dbo.taxCorrectionsSF(a.SCHOOLDISTRICTMAIN,a.id,'042'),
				r.acres = dbo.taxCorrectionsSF(a.acres,a.id,'036'),			
				r.blk = a.TOWNSHIPBLOCK,
				r.sec = a. SECTIONNUMBER,
				r.twp = '',
				r.rng = a.RANGELOT,
                                r.pertyp=a.pertyp,
                                r.ownername=dbo.readstring('@NAME=',dbo.taxRollAddressBlob(Realtaxyear,itemnumber))
				
			from @rt r, AdTax a where r.taxRollid = a.ID and r.typ<>'S'

	update r set            r.schoolDistrict = left('ASSESSMENT For: '+o.a20,49),
				r.legal = cast(o.e1 as varchar(max)),
                                r.ownername=o.a1
				
			from @rt r, object o where r.taxRollid = o.ID and r.typ='S'
				
						

	update @rt set
			taxPaid = dbo.taxReceiptTaxPaid(recid,invoiceId,2),
                        TotPaid = dbo.taxReceiptTaxPaid(recid,invoiceId,2) + isnull(Penalty,0) + isnull(mail,0) + isnull(lien,0) + isnull(adv,0) + isnull(mowing,0) + isnull(other,0) 


declare @wt1 table(invoiceId int, due money, feedue money, process int)
declare
   @due money = 0,
   @feeDue money = 0,
   @invoiceIdToken int = 0


insert @wt1 (invoiceId, process)
  select invoiceId, 0  from @rt

while exists(select * from @wt1 where process=0)
 begin
  select top 1 @invoiceIdToken=invoiceId from @wt1 where process=0

  select 
   @due = sum(case when accountType = 'RECEIVABLE' then amount else 0 end),
   @feeDue = sum(case when accountType = 'RECEIVABLE' then feeamount else 0 end)
   from dbo.invoiceGLTotalTF(@invoiceIdToken)
   where status='Posted'

  update @rt set 
                        remainingTaxDue = @due,
                        remainingFeeDue = @feeDue
     where invoiceId = @invoiceIdToken

  update @wt1 set process=1 where invoiceId=@invoiceIdToken
 end




--TODO: checkno calculation is incorrect


--Update Paid
 

	declare @paidBlob varchar(max) 
			select @paidBlob = isnull(@paidBlob,'') 
                                           + '@'+case when paycode='Cash' then paycode else 'Check' end+'='+cast(SUM(case when checkno='Cash Returned' then 0 else amount end) as varchar)+';'
                                           + '@checkno=  '+case when count(id)>1 then cast(count(id) as varchar(10))+' Chks' else max(checkno) end+';'
                                           + '@change=  '+cast(SUM(case when checkno='CASH RETURNED' then amount else 0 end) as varchar)+';'

		                      from paid where slink = 'o'+@recid 
                                         group by case when paycode='Cash' then paycode else 'Check' end




        declare @pt table(id int identity(1,1),paycode varchar(60), amount money, checkno varchar(60), processcount int)
         insert @pt
           select case when paycode = 'Cash' then paycode else 'Check' end, amount, isnull(checkno,''),0 from paid where slink = 'o'+@recid 
                                         
        declare @checkno varchar(250),
                @idToken int
      
        while exists(select * from @pt where paycode='Check' and processcount=0)
        begin
          select top 1 @idToken = id, @checkno = left(isnull(@checkno,'')+' '+rtrim(checkno),249) from @pt where paycode='Check' and processcount=0
         
          
          update @pt set processcount=1 where id=@idToken
        end
			
	update r set
			r.ckoth = isnull((select sum(amount) from @pt where paycode='Check'),0),
			r.cash = isnull((select sum(amount) from @pt where paycode='Cash' and checkno <> 'Cash Returned'),0),
			r.checkno = isnull(@checkno,0),
                        r.grandtotal = isnull(r.TotPaid,0),
                        r.change = isnull((select sum(amount) from @pt where paycode='Cash' and checkno = 'Cash Returned'),0)*-1,
                        r.taxAmt = isnull(r.taxAmt,0) - isnull(r.taxPaid,0)
		from @rt r, paid p where 'o'+r.recId = p.slink 



--set record Count
   
   declare @recCount int,
           @repTotalDue money,
           @reptotalRec money,
           @remainTaxDueTot money,
           @remainFeeDueTot money,
           @grandTotal money
   
     select @recCount = count(recid), 
            @repTotalDue = sum(isnull(TaxDue,0)),
            @remainTaxDueTot = sum(isnull(remainingTaxDue,0)),
            @remainFeeDueTot = sum(isnull(remainingFeeDue,0)),
            @grandTotal = sum(isnull(totPaid,0))

          from @rt
      
     update @rt set recCount = @recCount,
                    repTotalDue = @repTotalDue,
                    remainingTaxDueTot = @remainTaxDueTot,
                    remainingFeeDueTot = @remainFeeDueTot,
                    reptotalRec = isnull(ckoth,0)+isnull(cash,0),
                    grandtotal = @grandTotal			

 return					
end
