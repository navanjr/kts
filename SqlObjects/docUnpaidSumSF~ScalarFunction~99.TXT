create function dbo.docUnpaidSumSF(@invoiceId int,@interestDate varchar(50)) returns varchar(max)
as
begin

declare         @taxYear varchar(4),
		@item varchar(50),
		@parcel varchar(50),
                @interestDateInt int = dbo.clariondate(@interestDate)

select	        @taxYear = taxYear, 
		@item = ITEM, 
		@parcel = PARCEL
		from invoices where ID = @invoiceID
		
		
declare @wt table(invoiceId int,
                  taxrollId int,
		  taxYear varchar(4),
		  parcel varchar(50),
		  invoiceAmt money,
		  invoiceDue money,
		  fees money,
		  penalty money,
		  interestDate varchar(50),
		  invoiceType varchar(10),
                  perTyp varchar(10))


insert into @wt
 select invoiceId,
	taxrollId,
	taxYear,
	parcel,
	taxAmt,
	taxDue,
	fees,
	penalty,
	@interestDate,
	invoiceType,
	perTyp 
	from docUnpaidTF(@invoiceid,@interestDate) where RIGHT(ord,1)='c'

declare @ret varchar(max) = ''
   
	
   select @ret = @ret 
		+ ' ' + dbo.padRight('Taxes assessed:',' ',24)
			+ dbo.padLeft(dbo.formatCurr(sum(case when taxYear = @taxYear then invoiceAmt else 0 end)),' ',14) + CHAR(13) + CHAR(10)  + CHAR(13) + CHAR(10) 
		+ ' ' + dbo.padRight('Taxes unpaid:',' ',24)
			+ dbo.padLeft(dbo.formatCurr(sum(case when taxYear = @taxYear then invoiceDue else 0 end)),' ',14) + CHAR(13) + CHAR(10) 
		+ ' ' + dbo.padRight('Int/Pen:',' ',24)
			+ dbo.padLeft(dbo.formatCurr(sum(case when taxYear = @taxYear then penalty else 0 end)),' ',14) + CHAR(13) + CHAR(10) 
		+ ' ' + dbo.padRight('Fees:',' ',24)
			+ dbo.padLeft(dbo.formatCurr(sum(case when taxYear = @taxYear then fees else 0 end)),' ',14) + CHAR(13) + CHAR(10) 
		+ ' ' + dbo.padRight('BackTaxes:',' ',24)
			+ dbo.padLeft(dbo.formatCurr(sum(case when taxYear < @taxYear then invoiceDue + fees + penalty else 0 end)),' ',14) + CHAR(13) + CHAR(10) 
		+ ' ' + dbo.padRight('TOTAL DUE:',' ',24)
			+ dbo.padLeft(dbo.formatCurr(sum(invoiceDue + fees + penalty)),' ',14) 
 
       from @wt 


			
return @ret			
--select * from @wt order by taxYear

end

				