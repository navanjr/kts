create proc dbo.createGroups(
    @defaultUsersBlob varchar(max) = null
) as
begin
 set nocount on
 exec dbo.logit @@procid, 'updating Groups...'
-- this proc is used to store the master group settings. Any changes to your group settings in KTS will be overwritten!

 declare @groups table(
  name varchar(20),
  ini varchar(5),
  fullName varchar(30),
  securityLevel int,
  security varchar(100),
  options varchar(max),
  usersId int
 )

 declare @securityString varchar(100) = 'Key',
         @stateTaxImport varchar(5)

 select @stateTaxImport = settingvalue from settings where settingname = 'site.stateTaxSystemImport'


-- define all the master settings here
 insert @groups select 'admin', 'ADM', 'Administrator', -100, @securityString,
  '@lookups;@main4530;@main4501;@taxInquiryViewCorrect=1;
   @lookup40;@lookup1515;@lookup41;',
  null

 insert @groups select 'bookkeeping', 'BKK', 'Book Keeping', -1, @securityString,
  '@lookups;@button5=Dashboard [F5],116,,press,,70,,always;@tb5=do(4502,insertSelections=);
   @button8=Book Keepers Dashboard [F8],119,,press,,110,,always;@tb8=new(4501);
   @main4501;@main4502;@main4512;@main4513;@main4522;@main4700;@main4701;@main4770;@main4771;@main4780;@main4791;@main4795;
   @main4514;
   @lookup4601;@lookup4702;@lookup4704;@lookup4503;@lookup4504;@lookup4505;@lookup4008;@lookup4009;@lookup4011;@lookup4013;@lookup4014;@lookup4022;@lookup452;@lookup4030;@lookup4022;@lookup4300;@lookup4301;@lookup1515;@lookup51;@lookup4705;@lookup43;@lookup44;@lookup4010;@lookup4035;@lookup4100;',
  null

 insert @groups select 'developer', 'DEV', 'KellPro Developer', -1, @securityString,
  '@lookups;@button9=Git [F9],120,,press,,50,,always;@tb9=new(2);
   @button10=SQL Objects [F10],121,,press,,90,,always;@tb10=browse(1,451);
   @group=bookkeeping;
   @showgl=1;
   @main3;@main4;@main4514;
   @lookup452;@lookup1515;@lookup4000;@lookup4012;@lookup4010;@lookup4011;@lookup4022;@lookup41;@lookup4030;@lookup51;@lookup42;@lookup4026;@lookup4300;@lookup4301;@lookup4705;@lookup43;@lookup44;',
   null

 insert @groups select 'officalbookkeeping', 'OBK', 'Official Book Keeping', -1, @securityString,
  '@lookups;@main4770;@main4771;
   @lookup4030;@lookup4530;@lookup4022;@lookup1515;@lookup4705;@lookup44;@main4514;',
  null

 insert @groups select 'publicuser', 'PUBL', 'Public User', -1, @securityString,
  '@main4003;',
  null

 insert @groups select 'tax', 'TAX', 'Tax', -1, @securityString,
  '@lookups;@main4003;@main4514;
   @lookup4000;@lookup4010;@lookup4011;@lookup4012;@lookup4022;@lookup4030;@lookup4300;@lookup4301;@lookup43;@lookup44;@lookup4033;@lookup4029;',
  null

-- add any users passed in via the defaultUsersBlob
 declare @defaultUsersWT splitWt
 declare @defaultUsersWT2 table(name varchar(50), initials varchar(50), fullName varchar(50))
 insert @defaultUsersWT select * from dbo.split(@defaultUsersBlob, ',')
 insert @defaultUsersWT2(fullName) select dbo.proper(data) from @defaultUsersWT where data > '  0'
 update @defaultUsersWT2 set
   name = dbo.splitF(fullName,' ',1),
   initials = dbo.getInitialsFromFullName(fullName)

 insert @groups
 select
   name,
   initials,
   fullName,
   80, 'key', '@tim;@group=admin;@group=tax;@group=officalbookkeeping;@group=bookkeeping;', null
 from @defaultUsersWT2

-- support users
 insert @groups
 select 'nate','ANA','nate anderson',100,'Key','@tim;@group=admin;@group=developer;@group=tax;',null
 union all
 select 'wade','JWS','Jeremy Shepherd',100,'Key','@tim;@group=admin;@group=developer;@group=tax;',null
 union all
 select 'matthew','MAK','Matthew Keller',100,'Key','@tim;@group=admin;@group=developer;@group=tax;',null

-- now remove any non support users that are already in users
-- this way we don't mess up any normal kts users during an import/update
 delete @groups where name in (select name from users where securityLevel between 1 and 99)

---remove @tim access for any user that's not a dev or support
 update users set options = replace(cast(options as varchar(max)),'@tim;','') from Users where CHARINDEX('@tim',Options)>0 and securitylevel<100

-- now we overwrite the real settings in the users table
 insert users (name) select name from @groups where name not in (select name from users)

 update a set
  a.ini = b.ini,
  a.fullName = b.fullName,
  a.securityLevel = b.securityLevel,
  a.security = b.security,
  a.options = b.options
 from users a, @groups b
 where a.name = b.name
  
end
