create function dbo.voucherImportBRW(
 @id int, 
 @officialBlob varchar(max) = null,
 @csvBlob varchar(max) = null
) returns @rt table(
 id int identity(1,1),
 voucherNumber varchar(50),
 voucherDate varchar(50),
 payee varchar(50),
 amount varchar(50),
 comments varchar(250),
 debitAcct varchar(50),
 creditAcct varchar(50),
 postCheck int,
 registerNumber varchar(50),
 rowtype int,
 ord varchar(50)
)
begin

 declare
  @idToken int,
  @dataToken nvarchar(max),
  @csv nvarchar(max),
  @debitAcct varchar(50),
  @creditAcct varchar(50),
  @officalLink int,
  @lastNumber int,
  @fiscalYear varchar(20)

 if isnull(@id,0) > 0
  select
   @officalLink = link2,
   @debitAcct = key2,
   @csv = cast(e1 as nvarchar(max)) + cast(e2 as nvarchar(max))
  from object where typ = 4770 and id = @id
 else
  select
   @officalLink = dbo.readString('@officialLink=',@officialBlob),
   @debitAcct = dbo.readString('@officialDepositCode=',@officialBlob),
   @csv = @csvBlob

--removed to use the payment register date instead
 --select @fiscalYear = fiscalYear from dbo.fiscalCalendar where dbo.clariondate(getdate()) between startDate and endDate

 -- TODO: until im sure this is right... im gonna get the debit account from the officals exepense field :)
 select 
  @creditAcct = a4 from object where id = @officalLink and typ = 4601

 -- take the csv data and run with it
 declare @rows table(
  id int identity(1,1),
  rowData varchar(1000)
 )

 -- TODO: this seems to work well. however we might have an issue with char(13)'s getting left in the data.
 insert @rows 
 select replace(data,'"','') from dbo.split( @csv, char(10))

 while exists(select * from @rows)
 begin
  select top 1
   @idToken = id,
   @dataToken = rowData
  from @rows order by id

  if (select data from dbo.split(@dataToken,',') where id = 4) > '  0'
   insert @rt select 
    (select data from dbo.split(@dataToken,',') where id = 1),
    (select dbo.clarionDate(data) from dbo.split(@dataToken,',') where id = 2),
    (select data from dbo.split(@dataToken,',') where id = 3),
    dbo.stripNonNumeric((select data from dbo.split(@dataToken,',') where id = 4)),
    isnull((select data from dbo.split(@dataToken,',') where id = 5),''),
    @debitAcct,
    @creditAcct,
    0,
    '*',
    0,
    'b' + (select data from dbo.split(@dataToken,',') where id = 1)

  delete @rows where id = @idToken
 end

 update @rt set voucherNumber = dbo.popro6(voucherNumber,6,0) where voucherNumber > ' 0'

 update @rt set postCheck = 1 where debitAcct not in (select accountCode from glAccounts)
 update @rt set postCheck = 1 where creditAcct not in (select accountCode from glAccounts)

 declare @registerPostDate int = (select dbo.readString('@postdate=',dbo.paymentPostDateLogic(0)))
 select @fiscalYear = fiscalYear from fpInfo(@registerPostDate)

 update a set postCheck = 2, registerNumber=b.key1
 from @rt a, object b where a.voucherNumber = b.key3 and b.typ = 4771 and a18 = 'official Voucher' and a.debitAcct = b.a4 and olink1 = @fiscalYear

 update @rt set postCheck = 3 where postCheck = 0 and (voucherNumber < '  0' or isdate(dbo.date1(voucherDate)) != 1 or payee < '  0')

-- set the potential register numbers
--  declare @newNumber varchar(50), @nextNumber varchar(50)

--  exec dbo.nextObjectAutoNumber @typ=4771, @seriesString = 'Official Voucher', @ignoreDeleted = 'FALSE', @nextNumber=@newNumber output 

--  select @lastNumber = cast(@nextNumber as int)-1

 select top 1 @lastNumber = cast(key1 as int) from object 
  where typ = 4771 
   and dbo.nextObjectAutoNumberControl(4771,a18) = dbo.nextObjectAutoNumberControl(4771,'Official Voucher') 
   and olink1 = @fiscalYear
  order by key2 desc, key1 desc
 declare @reg table(regSeed int identity(1,1), id int)
 insert @reg select id from @rt where postCheck = 0 order by voucherNumber
 update a set registerNumber = dbo.padLeft(@lastNumber + b.regSeed,'0',5) from @rt a, @reg b where a.id = b.id

-- lets add a total of amount to the top of the BRW
 insert @rt (rowType, amount, ord)
 select -1, sum(cast(amount as money)), 'a' from @rt where postCheck = 0

 return 
end