create function dbo.journalEntryBRW(
 @id int,
 @showGL int,
 @csvBlob varchar(max) = null
) returns @rt table(
 ord varchar(50),
 id int,
 accountid int,
 accountCode varchar(60),
 accountDesc varchar(50),
 amount money,
 comment varchar(100),
 importFlag int,
 rowType int,
 accountType varchar(60)
)
begin
 declare 
  @slink varchar(15) = 'o'+cast(@id as varchar),
  @importData varchar(max),
  @purpose varchar(50)

  select @purpose = left(a18,9) from object where id=@id

 if exists(select * from glDetailStage where slink in (select slink from journalSlinks(@id) where left(slink,1)<>'t'))

  insert @rt
  select
   'a_' + cast(s.id as varchar),
   s.id*-1 as id,
   s.accountId,
   s.accountCode,
   s.accountDesc,
   s.amount,
   s.comment2,
   0,
   case when s.slink <> @slink then 0 when a.accountType = 'ACCRUED RECEIVABLE' and (isnull(s.contraId,0)<1 or isnull(s.sourcecode,'')<' 0') and @purpose <> 'apportion' then 1 else 0 end,
   a.accountType 
  from glDetailStage s
  left join dbo.glaccounts a on a.accountCode = s.accountCode
  where s.slink in (select js.slink from journalSlinks(@id) js where left(js.slink,1)<>'t') 

 else

  insert @rt
  select 'a_' + cast(id as varchar), 
         id*-1 as id, 
         accountId, 
         accountCode, 
         accountDesc, 
         amount, 
         case when len(comment2) > 2 then comment2 
              when isnull(contraid,0) > 0 and len(sourcecode) > 2 
               then left(rtrim(isnull((select a.accountcode from glaccounts a where a.accountid=gldetail.contraid),''))+' / '+rtrim(sourcecode),99) 
         else comment2
          end, 
         0, 0, ''
  from glDetail where slink in (select slink from journalSlinks(@id) where left(slink,1)<>'t') 


 update r set accounttype = a.accounttype from @rt r, glaccounts a where r.accountcode=a.accountcode

-- import features
 if isnull(@csvBlob,'') > '  0'
  select @importData = @csvBlob
 else
  select @importData = e2 from object where id = @id and typ = 4512
 if (@importData > '  0')
  begin

	declare @wt table(
		id int identity(1,1),
		rowData varchar(1000),
		accountId int,
		accountCode varchar(50),
		accountDesc varchar(50),
		amount varchar(50),
		comments varchar(250),
                rowType int)
		
	insert @wt (rowData, accountDesc)
	select replace(data,'"',''), 'Unknown Account' from dbo.split( @importData, char(10)) 

	update @wt set
		accountCode = (select data from dbo.split(rowData,',') where id = 1),
		amount = (select data from dbo.split(rowData,',') where id = 2),
		comments = (select data from dbo.split(rowData,',') where id = 3)

	update a set a.accountDesc = b.accountDesc, a.accountId = b.accountId
		from @wt a, glAccounts b where a.accountCode = b.accountCode
 
	if exists(select * from @wt where isnumeric(amount) = 1 and accountDesc <> 'Unknown Account')
		begin
		   insert @rt (ord, id, accountDesc) select 'b_0', 0, '' 
		   insert @rt (ord, id, accountDesc) select 'bb_0', 0, ' These Items can be Imported... '
		   insert @rt select 'bb_' + cast(id as varchar), 0 as id, accountId, accountCode, accountDesc, amount, comments, 1, 0, '' from @wt where isnumeric(amount) = 1 and accountDesc <> 'Unknown Account'
		end
	if exists(select * from @wt where isnumeric(amount) = 1 and accountDesc = 'Unknown Account')
		begin
		   insert @rt (ord, id, accountDesc) select 'c_0', 0, '' 
		   insert @rt (ord, id, accountDesc) select 'cc_0', 0, ' These Items CAN''T be Imported... '
		   insert @rt select 'cc_' + cast(id as varchar), 0 as id, accountId, accountCode, accountDesc + ' - ' + accountCode, amount, comments, 0, 0, '' from @wt where isnumeric(amount) = 1 and accountDesc = 'Unknown Account'
		end
  end


 return
end