create function dbo.taxrollBRWAdTaxIds(
 @taxYear varchar(10),
 @searchString varchar(50),
 @AdvancedSearch varchar(1)
) returns @rt table(
 adtaxId int
)
Begin

/*
--get the tax years we will return
  declare @taxYears table(yr varchar(4))
  if lower(@taxYear) = 'all'
   insert @taxYears select cast(taxyear as varchar (4)) from invoices group by taxyear
  else
   insert @taxYears select @taxYear


 insert @rt
   select 
    id
   from dbo.adtax
   where OWNERNAME+' '+FULLPIDNUMBER+' '+cast(ITEMNUMBER as varchar) like '%'+@searchString+'%'
    and cast(REALTAXYEAR as varchar) in (select yr from @taxYears)
    and id not in (select taxrollId from invoices)

--search for taxyear&item
 insert @rt
   select 
    id
   from dbo.adtax
   where cast(REALTAXYEAR as varchar(4))+cast(ITEMNUMBER as varchar(20)) like '%'+@searchString+'%'
    and cast(REALTAXYEAR as varchar) in (select yr from @taxYears)
    and id not in (select taxrollId from invoices)
*/


if @AdvancedSearch = '1'

begin

  insert @rt 
  select a.id
  from adtax a
  where a.id not in (select taxrollId from invoices)
   and cast(REALTAXYEAR as varchar) = case when @taxyear = 'all' then cast(REALTAXYEAR as varchar) else cast(@taxyear as numeric) end 
   and OWNERNAME+' '+FULLPIDNUMBER+' '+cast(REALTAXYEAR as varchar(4))+cast(ITEMNUMBER as varchar)+a.OWNERNAME+a.BUSINESSNAME+CAST(OWNERNUMBER AS VARCHAR)+a.ADDRESS1+a.ADDRESS2+a.ADDRESS3+a.CITY+a.STATE+a.ZIP1+a.ZIP2+a.ZIP3+a.proploc+a.mort_cd+a.treamort+a.trcode+cast(a.LEGALDESCRIPTION as varchar(8000)) like '%'+@searchString+'%'

/*
  insert @rt
  select 
   a.id
  from dbo.taxRollDetail td, adtax a
  where a.id not in (select taxrollId from invoices)
   and cast(a.REALTAXYEAR as varchar) in (select yr from @taxYears)
   and a.ITEMNUMBER=td.itemNumber
   and a.REALTAXYEAR=td.taxyear
   and td.name+td.businessName+td.address1+td.address2+td.address3+td.city+td.state+td.zip1+td.zip2 like '%'+@searchString+'%'
*/

end

return
end

