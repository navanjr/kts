create function [dbo].[getTaxInvoiceBlob](@InvId int) returns varchar(max) as
begin

 declare @retval varchar(max), 
         @invoiceType varchar(1), 
         @invoiceDue money, 
         @taxrollId int,
         @queue varchar(50),
         @printOrder varchar(50),
         @addressblobtoken varchar(max),
         @revised varchar(10) = dbo.settingsf('site.printStatementRevised','FALSE')

  select
   @queue = processCode,
   @printOrder = printOrder
  from documentProcessing where invoiceId = @invId
 
  select 
  
  @retval =  '@taxrollid=' + rtrim(max(TAXROLLID)) + ';'
  + '@TYP=' + rtrim(max(case when invoiceId>0 then '' else TYP end)) + ';'
  + '@PARCEL=' + rtrim(max(PARCEL)) + ';'
  + '@ITEM=' + rtrim(max(case when invoiceId>0 then 0.0 else ITEM end)) + ';'
  + '@TAXYEAR=' + rtrim(max(TAXYEAR)) + ';'
  + '@POSTDATE=' + rtrim(max(case when invoiceId>0 then '' else POSTDATE end)) + ';'
  + '@STATUS=' + rtrim(max(case when invoiceId>0 then '' else [STATUS] end)) + ';'
  + '@INVOICEAMT=' + rtrim(sum(case when typ in ('P','F') then 0 else invoiceAmount end)) + ';'
  + '@PENALTY=' + rtrim(sum(case when typ='P' then invoiceAmount else 0 end)) + ';'
  + '@FEE=' + rtrim(sum(case when typ in ('F','A') then invoiceAmount else 0 end)) + ';'
  + '@CURRENTDUE=' + rtrim(sum(invoiceDue)) + ';'
  + '@QUEUE=' + rtrim(isnull(@queue,'')) + ';'
  + '@printOrder=' + rtrim(isnull(@printOrder,'')) + ';'
  + '@FULLTYP=' + case rtrim(max(case when invoiceId>0 then '' else TYP end)) when 'R' then '    REAL ESTATE' when 'S' then '    SPECIAL ASSESSEMENT' ELSE 'PERSONAL' END + ';',
  @invoiceType = rtrim(max(case when invoiceId>0 then '' else TYP end)) 
  from invoices with (NOLOCK) where (ID=@InvId or invoiceId=@InvId) 
  group by case when invoiceId>0 then invoiceId else ID end


 select top 1 @retval = @retval + dbo.taxRollAddressBlob(dbo.readstring('@TAXYEAR=',@retval),dbo.readstring('@Item=',@retval)),
              @taxrollId = dbo.readstring('@taxrollid=',@retval)



select @retval = @retval 
 + '@GROSSASSESSED=' + dbo.taxCorrectionsSF(GROSSASSESSED,@taxrollId,'058') + ';'
 + '@EXEMPTION3=' + dbo.taxCorrectionsSF(rtrim(EXEMPTION3),@taxrollId,'070')+  + ';'
 + '@IMPROVEDASSESSEDVALUE=' + dbo.taxCorrectionsSF(IMPROVEDASSESSED,@taxrollId,'052') + ';'
 + '@LANDASSESSEDVALUE=' + dbo.taxCorrectionsSF(LANDASSESSED,@taxrollId,'050') + ';'
 + '@NETASSESSEDVALUE=' + dbo.taxCorrectionsSF(NETASSESSEDVALUE,@taxrollId,'072') + ';'
 + '@MISCASSESSEDVALUE=' + dbo.taxCorrectionsSF(MISCASSESSED,@taxrollId,'054') + ';'
 + '@MFGHOMEASSESSED=' + dbo.taxCorrectionsSF(MFGHOMEASSESSED,@taxrollId,'056') + ';'
 + '@SCHOOLDISTRICTMAIN=' + dbo.taxCorrectionsSF(SCHOOLDISTRICTMAIN,@taxrollId,'042') + ';'
 + '@SCHOOLDISTRICTTAXRATE=' + dbo.taxCorrectionsSF(SCHOOLDISTRICTTAXRATE,@taxrollId,'046')+ ';' 
 + '@ACRES=' + dbo.taxCorrectionsSF(ACRES,@taxrollId,'036') + ';'
 + '@TWP=' + rtrim(TOWNSHIPBLOCK) + ';'
 + '@SEC=' + rtrim(SECTIONNUMBER) + ';'
 + '@RNG=' + rtrim(RANGELOT) + ';'
 + '@TOTALDUE=' + dbo.taxCorrectionsSF(TOTALDUE,@taxrollId,'078') + ';'
 + '@LEGALDESCRIPTION=' + rtrim(replace(cast(dbo.taxCorrectionsSF(LEGALDESCRIPTION,@taxrollId,'102') as varchar(4000)),'''','`')) + ';'
 + dbo.readStringSanitizer('ORGSCHOOLDISTRICTMAIN', ORGSCHOOLDISTRICTMAIN)
 + dbo.readStringSanitizer('ORGSCHOOLDISTRICTTAXRATE', ORGSCHOOLDISTRICTTAXRATE)
 + dbo.readStringSanitizer('MFGHOMEASSESSED', MFGHOMEASSESSED)+';'
 + '@MortgageCode=' + rtrim(case when cast(treamort as varchar) > '  0' then cast(treamort as varchar) else cast(mortgagecode as varchar)
 end) + ';'
 + '@OwnerNumber=' +dbo.taxCorrectionsSF(cast(OwnerNumber as varchar(50)),@taxrollId,'034')+  + ';'
 + '@propLoc= ' + case when proploc>'   0' then 'Physical Address: '+ proploc  else '' end + ';'
 from AdTax with (NOLOCK) where ID = dbo.readstring('@taxrollid=',@retval)

select @retval = @retval
 + '@HideMrtgMsg=' + c2 + ';'
 from object with (NOLOCK) where typ=4030 and key1=dbo.readstring('@MortgageCode=',@retval)

if @revised = 'TRUE'
 select @retval = @retval + '@revised=TRUE;'


 return @retval

end

--select dbo.getTaxInvoiceBlob(433)
