create procedure dbo.receiptStageGL (@receiptId int, @mode int = 0) as
begin
 
 declare @accountsWorking table(
  accountId int,
  contraId int,
  amount money
 )
 declare @accounts table(
  accountId int,
  contraId int,
  amount money
 )
 
 declare @styp char(1) = 'o'
 declare
  @slink varchar(15) = @styp + cast(@receiptId as varchar),
  @code int,
  @contraId int,
  @arAccountId int,
  @tokenId int,
  @tokenContraId int,
  @tokenAmount money
 
 select 
  @code = code,
  @contraId = contraId ,
  @arAccountId = arAccountId
 from dbo.receiptCheck(@receiptId,null)

 -- credit Source and Debit AR
 insert @accountsWorking
  select b.accountId, null, sum(a.amount)*-1 
  from receiptDetail a, dbo.glAccounts b where a.slink = @slink and a.sourceCode = b.accountCode group by b.accountId
 select @tokenAmount = abs(sum(amount)) from @accountsWorking
 insert @accountsWorking select @arAccountId, null, @tokenAmount

 if exists(select * from paid where slink = @slink)
 begin
  declare @ap table(accountId int, contraId int, amount money, prorate decimal(19,18), payAmount decimal(19,10))
  declare @paidTotal money

  -- credit AR
  select @paidTotal = sum(amount)*-1 from paid where slink = @slink
  insert @accountsWorking select @arAccountId, null, @paidTotal

  -- debit suspense accounts
  -- TODO: replace this query and use the new paycodes view instead of object
  insert @accountsWorking
  select b.link1, null, sum(a.amount)
  from paid a, object b 
  where a.paycode = b.key1 and b.typ = 4505 and a.slink = @slink group by b.link1

  -- debit tresurers receipt fund and credit fund payables
  insert @accountsWorking select @contraId, null, @paidTotal
  insert @ap
   select b.accountId, null, sum(a.amount)*-1, 0, 0
   from receiptDetail a, dbo.glAccounts b
   where a.slink = @slink and a.fundCode = b.accountCode and right(rtrim(a.fundCode),3)='_AP' group by b.accountId

  insert @ap
   select b.accountId, @contraId, sum(a.amount)*-1, 0, 0
   from receiptDetail a, dbo.glAccounts b
   where a.slink = @slink and a.fundCode = b.fundCode and right(rtrim(a.fundCode),3)<>'_AP' group by b.accountId

  update @ap set prorate = amount / cast(@tokenAmount as decimal(19,10))
  update @ap set payAmount = round(@paidTotal * prorate,2)
 end 
 
 insert @accountsWorking select accountId, contraId, payAmount from @ap

 insert @accounts select accountId, contraId, sum(isnull(amount,0)) from @accountsWorking group by accountId, contraId having sum(isnull(amount,0)) != 0

-- echo the guts of this proc and bail if you are in test mode
 if @mode = 1
 begin
  select a.*,b.accountType,b.accountDesc from @accounts a, glAccounts b where a.accountId = b.accountId order by b.accountType
  return
 end

 -- remove 
 delete glDetailStage where slink = @slink and accountId not in (select accountId from @accounts)

 -- update
 update a set a.amount = b.amount
 from glDetailStage a, @accounts b
 where a.accountId = b.accountId
  and a.slink = @slink
 
 delete @accounts where accountId in (select accountId from glDetailStage where slink = @slink)

 -- insert
 while (select count(*) from @accounts) > 0
 begin
  select top 1
   @tokenId = accountId,
   @tokenContraId = contraId,
   @tokenAmount = amount
  from @accounts
  insert gldetailstage (slink,accountId,amount,contraId) select @slink,@tokenId,@tokenAmount,@tokenContraId
  delete @accounts where accountId = @tokenId
 end
 
 update a set
  a.accountCode = b.accountCode,
  a.accountDesc = b.accountDesc
 from glDetailStage a, glAccounts b
 where a.accountId = b.accountId
  and a.slink = @slink 

end
