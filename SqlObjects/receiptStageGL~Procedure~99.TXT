create procedure dbo.receiptStageGL (@receiptId int, @mode int = 0) as
begin
 exec dbo.logit @@procid, 'Started...'
 
 declare @accountsWorking table(
  accountId int,
  contraId int,
  amount money,
  comment varchar(100)
 )
 declare @accounts table(
  accountId int,
  contraId int,
  amount money,
  comment varchar(100)
 )
 
 declare @styp char(1) = 'o'
 declare
  @slink varchar(15) = @styp + cast(@receiptId as varchar),
  @code int,
  @contraId int,
  @arAccountId int,
  @tokenId int,
  @tokenContraId int,
  @tokenAmount money,
  @receiptType varchar(50),
  @comment varchar(50),
  @logBlob varchar(max)
 
 select 
  @code = code,
  @contraId = contraId ,
  @arAccountId = arAccountId,
  @receiptType = receiptType,
  @logblob = blob
 from dbo.receiptCheck(@receiptId,null)

 exec dbo.logit @@procid, 'receiptCheck', @logblob

 -- credit Source and Debit AR
 if @receiptType<>'OFFICIAL'
 begin
  insert @accountsWorking
   select b.accountId, null, sum(a.amount)*-1,'' 
   from receiptDetail a, dbo.glAccounts b where a.slink = @slink and a.sourceCode = b.accountCode group by b.accountId
  select @tokenAmount = abs(sum(amount)) from @accountsWorking
  insert @accountsWorking select @arAccountId, null, @tokenAmount,''
 end

 if exists(select * from paid where slink = @slink)
 begin
  declare @ap table(accountId int, contraId int, amount money, prorate decimal(19,18), payAmount decimal(19,10), comment varchar(100))
  declare @paidTotal money

  -- credit AR
  select @paidTotal = sum(amount)*-1 from paid where slink = @slink
  if @receiptType<>'OFFICIAL'
  begin
   insert @accountsWorking select @arAccountId, null, @paidTotal,''
  end

  -- debit suspense accounts
  insert @accountsWorking
  select b.accountId, null, sum(a.amount),''
  from paid a, paycodes b 
  where a.paycode = b.paycode and a.slink = @slink group by b.accountId

  -- debit tresurers receipt fund and credit fund receivables
  insert @accountsWorking select @contraId, null, @paidTotal,''
  if @receiptType<>'OFFICIAL'
  begin
   insert @ap
    select b.accountId,  case when @receiptType='TRUST' then @receiptId else @contraId end, sum(a.amount)*-1, 0, 0,a.description
    from receiptDetail a, dbo.glAccounts b
    where a.slink = @slink and a.fundCode = b.accountCode and b.accountType in ('ACCRUED RECEIVABLE','PURPOSE') group by b.accountId, a.description
   insert @ap
    select b.accountId, @contraId, sum(a.amount)*-1, 0, 0,a.description
    from receiptDetail a, dbo.glAccounts b 
    where a.slink = @slink and (select dbo.readString('@accrualcode=', dbo.glAccountGetFundAccrualBlob(a.fundcode,'ACCRUED RECEIVABLE'))) = b.accountCode and b.accountcode<>a.fundcode and @receiptType<>'TRUST'
     group by b.accountId, a.description
  end 

  update @ap set prorate = amount / cast(@tokenAmount as decimal(19,10))
  update @ap set payAmount = round(@paidTotal * prorate,2)
  insert @accountsWorking select accountId, contraId, payAmount, comment from @ap
 end 
 

 insert @accounts select accountId, contraId, sum(isnull(amount,0)), comment from @accountsWorking group by accountId, contraId, comment having sum(isnull(amount,0)) != 0

-- echo the guts of this proc and bail if you are in test mode
 if @mode = 1
 begin
  select a.*,b.accountType,b.accountDesc from @accounts a, glAccounts b where a.accountId = b.accountId order by b.accountType
  return
 end

 -- remove 
 delete glDetailStage where slink = @slink 

 -- insert
 while exists(select * from @accounts)
 begin
  select top 1
   @tokenId = accountId,
   @tokenContraId = contraId,
   @tokenAmount = amount,
   @comment = left(rtrim(comment),49)
  from @accounts
  insert gldetailstage (slink,accountId,amount,contraId,comment) select @slink,@tokenId,@tokenAmount,@tokenContraId, @comment
  delete @accounts where accountId = @tokenId
 end
 
 update a set
  a.accountCode = b.accountCode,
  a.accountDesc = b.accountDesc
 from glDetailStage a, glAccounts b
 where a.accountId = b.accountId
  and a.slink = @slink 

end
