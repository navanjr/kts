create procedure dbo.glPost (
 @id int,
 @styp char(1),
 @smode int = 0,
 @updateInvoice varchar(5) = 'TRUE',
 @skipSQLTransaction varchar(5) = 'FALSE',
 @resultString varchar(100) = null output
) as 
begin
 set nocount on
 exec dbo.logit @@procid, '@id', @id, '@styp', @styp

 declare
  @slink varchar(15) = @styp + cast(@id as varchar),
  @code int,
  @message varchar(500),
  @fpId int,
  @postDate int

 -- first we look to see if this is good to post
 exec dbo.glCheck @id, @styp, @code output, @message output, @fpId output, @postDate output
 exec dbo.logit @@procid, '@code', @code, '@message', @message, '@fpid', @fpid
 if @code = 1
 begin
  select @resultString = '@code=' + cast(@code as varchar) + ';@message=' + @message + ';@fpid=' + cast(@fpId as varchar) + ';'
  return
 end

 if @code = 0
 begin

  declare 
--   @fpCode varchar(50),
--   @fpDesc varchar(50),
   @balance money,
   @rowCount int,
   @absValue money,
   @rowCount2 int,
   @absValue2 money,
   @sql varchar(500),
   @result int,
   @idToken int,
   @slinkToken varchar(15)

/*
  -- get fiscal code and description from the Fiscal Calendar
  select
   @fpCode = key1, 
   @fpDesc = key2 
  from object where typ = 4700 and id = @fpid
*/

  declare @slinks table(id int identity(1,1), slink varchar(15), processFlag int)
  insert @slinks select slink, 0 from dbo.glGetAllSlinks(@slink)

  -- get the stats to do the final compare
  -- TODO: we can bail here if we are missing anything, balance not 0, no stage detail, etc....
  select
   @balance = sum(amount),
   @rowCount = count(*),
   @absValue = sum(abs(amount)) 
  from glDetailStage 
  where slink in (select slink from @slinks)

  if @skipSQLTransaction = 'FALSE'
  begin
   exec dbo.logit @@procid, 'begin transaction - @slink', @slink, '@rowCount', @rowCount, '@absValue', @absValue
   begin transaction
  end
   
   while exists(select * from @slinks where processFlag = 0)
   begin
    select top 1 @idToken = id, @slinkToken = slink from @slinks where processFlag = 0
    exec dbo.glPostGuts @slinkToken, @updateInvoice = @updateInvoice
    update @slinks set processFlag = 1 where id = @idToken
   end

   -- if you are a receipt update the related Invoices
   if @styp = 'o' and (exists(select * from receiptLink where receiptId = @id) or exists(select * from journalLink where receiptId = @id))
   begin
    exec dbo.invoiceUpdateAll @receiptId = @id
   end

   -- check to see if the post was successful
   exec dbo.glPostCheckProc
    @slink = @slink,
    @result = @result output,
    @message = @message output  

--   select
--    @rowCount2 = count(*),
--    @absValue2 = sum(abs(amount)) 
--   from glDetail 
--   where slink in (select slink from @slinks)

--   exec dbo.logit @@procid, '@rowCount2', @rowCount2, '@absValue2', @absValue2
   
--   if @rowCount = @rowCount2 and @absValue = @absValue2 and @absValue > 0

   if @result = 0
   begin
    set @message = 'Posting complete.'
    if @skipSQLTransaction = 'FALSE'
    begin
     exec dbo.logit @@procid, 'commit transaction - @slink', @slink
     commit transaction
    end
   end
   else
   begin 
    exec dbo.logit @@procid, 'Failed glPostCheckProc @message', @message
    select
     @code = 1,
     @message = 'Posting transaction was rolled back.  oops.  please contact support.'
    if @skipSQLTransaction = 'FALSE'
    begin
     exec dbo.logit @@procid, 'rollback transaction - @slink', @slink
     rollback transaction
    end
   end

  select @resultString = '@code=' + cast(@code as varchar) + ';@message=' + @message + ';@fpid=' + cast(@fpId as varchar) + ';'
  select @resultString

  return
 end

 return
end