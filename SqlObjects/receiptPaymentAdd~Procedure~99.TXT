create procedure dbo.receiptPaymentAdd(
 @receiptId int,
 @paycode varchar(50),
 @amount money,
 @checkNumber varchar(50) = '',
 @bankId int = 0,
 @paymentId int = 0,
 @mode int = 0,
 @drawnon varchar(50) = '',
 @location varchar(50) = ''
)
as
begin

 declare @styp char(1) = 'o'

 declare
  @slink varchar(15) = @styp + cast(@receiptId as varchar),
  @code int,
  @message varchar(100),
  @receiptType varchar(50),
  @suspenseAccountId int,
  @contraId int,
  @fpId int,
  @objectTyp int,
  @balance money

 select
  @code = code,
  @message = message,
  @receiptType = receiptType,
  @suspenseAccountId = suspenseAccountId,
  @contraId =contraId,
  @fpId = fpId,
  @objectTyp = objectTyp
 from dbo.receiptCheck(@receiptId,@paycode)

 -- bail if we dont have enough data
 if @code = 1
 begin
  select '@code=1;@message=' + @message + ';'
  return
 end

 -- bail if paycode is CHECK and no check number is offered
 if @paycode = 'CHECK' and @checkNumber < '  0'
 begin
  select '@code=1;@message=Sorry, Check number is required.;'
  return
 end

 begin transaction

  -- add row to paid
  insert paid (paycode,slink,amount,checkno,bankId,drawnon,location)
   select @paycode,@slink,@amount,@checkNumber,@bankId,@drawnon,@location

  -- add to the gl stage
  if @receiptType = 'TAX'
   exec dbo.receiptTaxStageGL @receiptId, @mode
  else
   exec dbo.receiptStageGL @receiptId

  -- get the balance of the glStage to check your work

  if @receiptType = 'TAX'
   select @balance = isnull(balance,0) from dbo.glTaxSummary(@receiptId)
  else
   select @balance = balance from dbo.glSummary(@receiptId,'o')

-- TEST Mode we bail
  if @mode = 1
  begin
   rollback transaction
   return
  end

  if @balance != 0
  begin
   rollback transaction
   select '@code=1;@message=Payment transaction was rolled back. Contact Support. {' + @receiptType + ':' + cast(@balance as varchar) + '};'
   return
  end
  else
   commit transaction

 select '@code=0;@message=Payment applied OK.;'
 return

end
