create proc dbo.glUnPost(
 @id int = null,
 @styp varchar(1) = null,
 @slink varchar(15) = null,
 @verbose varchar(5) = 'TRUE',
 @code int = 0 output
) as 
begin

 if @slink is null
  set @slink = @styp + cast(@id as varchar)

 if @slink is null
  RAISERROR ('procedure was called with incompatible options',16,1)

 declare 
  @postDate int,
  @fpid int,
  @log varchar(max),
  @objTyp int,
  @message varchar(max) = '',
  @sql nvarchar(max) = '',
  @action varchar(max) = '',
  @changeid int = 0

 exec dbo.glGetPostDateFromSlink
  @slink = @slink,
  @postDate = @postDate output,
  @fpid = @fpid output

-- bail if fiscal period is closed
 if @fpid = 0
 begin
  select
   @code = 1,
   @message = 'Fiscal Period is Closed. Can not continue... Sorry.'
   GOTO bail
 end

-- currently we only allow unposting of deposits and receipts
 if dbo.slinkType(@slink) != 'o'
 begin
  select
   @code = 1,
   @message = 'Unposting can not be done on this slink... Sorry.'
   GOTO bail
 end

 select @objTyp = typ from object where id = dbo.slinkId(@slink)
 
 if isnull(@objTyp,0) not in (4513, 4522, 4502, 4512, 4771)
 begin
  select
   @code = 1,
   @message = 'Unposting can not be done on this object.typ... Sorry.  @typ:' + cast(@objTyp as varchar) + ';@fpid=' + cast(@fpid as varchar)
   GOTO bail
 end 

-- bail if we are a receipt and paid records are already linked to depost or officialDeposit
 if isnull(@objTyp,0) = 4502
 begin
  if exists (select * from paid where slink = @slink and coalesce(nullif(depositId,0),nullif(officialDepositId,0)) is not null)
  begin
   select
    @code = 1,
    @message = 'Unposting can not be done on this receipt as it is already linked to a deposit... Sorry.;',
    @changeid = isnull((select top 1 coalesce(nullif(depositId,0),nullif(officialDepositId,0)) from paid where slink = @slink),0),
    @action = 'OK|OPEN'
    GOTO bail
  end
 end

-- bail if we are a receipt and we have already been apportioned
 if isnull(@objTyp,0) = 4502
 begin
  if exists (select * from gldetail where slink = @slink and nullif(bsId,0) is not null)
  begin
   select
    @code = 1,
    @message = 'Unposting can not be done on this receipt as it has already been apportioned... Sorry.;'
    GOTO bail
  end
 end

-- bail if we are an officialDeposit and paid records are already linked to depost
 if isnull(@objTyp,0) = 4522
 begin
  if exists (select * from paid where (officialDepositId = dbo.slinkId(@slink) or slink = @slink) and isnull(depositId,0) > 0)
  begin
   select
    @code = 1,
    @message = 'Unposting can not be done on this Official Deposit as it is already linked to a Bank Deposit... Sorry.;'
    GOTO bail
  end
 end

-- bail if linked to a bankstatement
 if isnull(@objTyp,0) in (4513,4512)
 begin
  if exists (select * from gldetail where slink=@slink and isnull(bsid,0)>0)
  begin
   select
    @code = 1,
    @message = 'Unposting can not be done on this as it is already linked to a Bank Statement... Sorry.;'
    GOTO bail 
  end
  if exists (select * from gldetail where slink=@slink and isnull(dateCleared,0)>0)
  begin
   select
    @code = 1,
    @message = 'Unposting can not be done on this as it is already been cleared... Sorry.;'
    GOTO bail 
  end
 end
/*
-- bail if complex Journal entry
 if isnull(@objTyp,0) in (4512)
 begin
  if exists (select * from journallink where jeid=dbo.slinkId(@slink)
  begin
   select
    @code = 1,
    @message = 'Unposting can not be done on this JE as it has children ... Sorry.;'
    GOTO bail 
  end
 
 end
*/
 exec dbo.logit @@procId, '@slink', @slink, '@objTyp', @objTyp, '@postDate', @postDate

 declare @slinksToRemove table(slink varchar(15))
 if @objTyp in (4513,4522,4771)
  insert @slinksToRemove select @slink
 if @objTyp = 4502
  insert @slinksToRemove select slink from receiptSLinks(dbo.slinkId(@slink)) where dbo.slinkType(slink) in ('o','l')
 if @objTyp = 4512
  insert @slinksToRemove select slink from journalSlinks(dbo.slinkId(@slink)) where dbo.slinkType(slink) in ('o','j')

-- we are good so lets delete glDetail and leave it to the calling proc to re-stage
 begin transaction

 if isnull(@objTyp,0) in (4512)
 begin
  insert gldetailstage ([fpid],[fpCode],[fpDesc],[accountId],[accountCode],[accountDesc],[contraId],[date],[amount],[slink],[slink2],[comment],[comment2],[targetAccountId],[sourcecode],[creationdate],[creationtime],[apportionContraCode],[accounttype])
   SELECT d.fpid,d.fpCode,d.fpDesc,d.accountId,d.accountCode,d.accountDesc,d.contraId,d.[date],d.amount,d.slink,d.slink2,d.comment,d.comment2,d.targetAccountId,d.sourcecode,d.creationdate,d.creationtime,d.apportionContraCode,a.accounttype
    FROM gldetail d, glaccounts a
     WHERE d.accountcode=a.accountcode
     AND slink in (select slink from @slinksToRemove)

 end

 exec dbo.logit @@procId, 'begin transaction', '@slink', @slink, '@objTyp', @objTyp
 delete glDetail where slink in (select slink from @slinksToRemove)

-- flag source record as Unposted if your not a receiptlink
 if dbo.slinkType(@slink) not in ('l','j')
 begin
  select @sql = 'update ['+tableName+'] set ['+statusFieldName+'] = '''' where ['+idFieldName+'] = '+cast(dbo.slinkId(@slink) as varchar) 
  from dbo.keyExternalTableReference(dbo.slinkType(@slink))
  exec(@sql)
  exec dbo.logit @@procId,'@sql',@sql
 end

 commit transaction
 exec dbo.logit @@procId, '@slink', @slink, 'commit transaction'

 set @message = 'UnPost Complete... :), come back and see us!'
 select @log = '@code=' + cast(@code as varchar) + ';@message=' + @message + ';'
 exec dbo.logit @@procId, '@slink', @slink, @log
 if @verbose = 'TRUE' select @log
 return
  

 bail:
  select @log = '@code=' + cast(@code as varchar) + ';@message=' + @message + ';@action=' + @action + ';@changeid=' + cast(@changeid as varchar(15)) + ';'
  exec dbo.logit @@procId, '@slink', @slink, @log
  if @verbose = 'TRUE' select @log
  return

end
