create proc dbo.glCreateTables
as
begin
 set nocount on
 exec dbo.logit @@procid, 'Running...'

-- TAXROLLCORRECTIONS
 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[taxrollCorrections]') and OBJECTPROPERTY(id, N'IsTable') = 1)
  create table taxrollCorrections(
   id int identity(1,1),
   taxrollId int,
   fieldNumber int,
   fieldName varchar(50),
   fieldData varchar(max),
   invoiceId int,
   originalData varchar(max),
   correctionDate int,
   creationdate int default (left(CONVERT([real],getdate(),0),(5))+(36163)),
   creationtime int default ((substring(CONVERT([char],getdate(),(114)),(1),(2))*(360000)+substring(CONVERT([char],getdate(),(114)),(4),(2))*(6000))+substring(CONVERT([char],getdate(),(114)),(7),(2))*(100))    
  )

-- GLDETAIL
 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[gldetail]') and OBJECTPROPERTY(id, N'IsTable') = 1)
  create table gldetail(
   id int identity(1,1),
   fpid int,
   fpCode varchar(10),
   fpDesc varchar(50),
   accountId int,
   accountCode varchar(50),
   accountDesc varchar(50),
   slink varchar(15),
   date int,
   amount money,
   bsId int,
   slink2 varchar(15),
   contraId int,
   comment varchar(50),
   comment2 varchar(50),
   sourcecode varchar(60),
   targetAccountId int,
   creationdate int default (left(CONVERT([real],getdate(),0),(5))+(36163)),
   creationtime int default ((substring(CONVERT([char],getdate(),(114)),(1),(2))*(360000)+substring(CONVERT([char],getdate(),(114)),(4),(2))*(6000))+substring(CONVERT([char],getdate(),(114)),(7),(2))*(100)), 
  )

 if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'gldetail' and COLUMN_NAME = 'dateCleared')
 begin
   alter table gldetail add dateCleared varchar(50) not null default ''
 end

-- GLDETAILSTAGE
 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[gldetailStage]') and OBJECTPROPERTY(id, N'IsTable') = 1)
  create table gldetailStage(
   id int identity(1,1),
   fpid int,
   fpCode varchar(10),
   fpDesc varchar(50),
   accountId int,
   accountCode varchar(50),
   accountDesc varchar(50),
   contraId int,
   sourceId int,
   date int,
   amount money,
   slink varchar(15),
   slink2 varchar(15),
   comment varchar(50),
   comment2 varchar(50),
   targetAccountId int,
   sourcecode varchar(60),
   creationdate int default (left(CONVERT([real],getdate(),0),(5))+(36163)),
   creationtime int default ((substring(CONVERT([char],getdate(),(114)),(1),(2))*(360000)+substring(CONVERT([char],getdate(),(114)),(4),(2))*(6000))+substring(CONVERT([char],getdate(),(114)),(7),(2))*(100)), 
  )

 if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'gldetailStage' and COLUMN_NAME = 'accountType')
 begin
   alter table gldetailStage add accountType varchar(50) not null default ''
 end


-- PAID
 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[paid]') and OBJECTPROPERTY(id, N'IsTable') = 1)
  create table paid(
   id int identity(1,1),
   paycode varchar(10),
   sourceId int,
   date int,
   amount money,
   checkno varchar(50),
   payorId int,
   bankId int,
   depositId int,
   creationdate int default (left(CONVERT([real],getdate(),0),(5))+(36163)),
   creationtime int default ((substring(CONVERT([char],getdate(),(114)),(1),(2))*(360000)+substring(CONVERT([char],getdate(),(114)),(4),(2))*(6000))+substring(CONVERT([char],getdate(),(114)),(7),(2))*(100)), 
  )

 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'paid' and COLUMN_NAME = 'sourceId')
 begin
  begin transaction
   alter table paid add slink varchar(15)
   exec(N'update paid set slink = ''o''+cast(sourceId as varchar)')
   alter table paid drop column sourceId
   if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'paid' and COLUMN_NAME = 'sourceId')
    rollback transaction
   else
    commit transaction
 end
 if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'paid' and COLUMN_NAME = 'drawnon')
 begin
   alter table paid add drawnon varchar(50) not null default ''
 end

 if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'paid' and COLUMN_NAME = 'location')
 begin
   alter table paid add location varchar(50) not null default ''
 end

 if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'paid' and COLUMN_NAME = 'officialDepositId')
 begin
   alter table paid add officialDepositId int not null default 0
 end

-- AUDIT
 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[audit]') and OBJECTPROPERTY(id, N'IsTable') = 1)
  create table audit(
   id int identity(1,1),
   sourceId int,
   userString varchar(50),
   auditString varchar(100),
   creationdate int default (left(CONVERT([real],getdate(),0),(5))+(36163)),
   creationtime int default ((substring(CONVERT([char],getdate(),(114)),(1),(2))*(360000)+substring(CONVERT([char],getdate(),(114)),(4),(2))*(6000))+substring(CONVERT([char],getdate(),(114)),(7),(2))*(100)), 
  )

-- RECEIPTDETAIL
 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[receiptDetail]') and OBJECTPROPERTY(id, N'IsTable') = 1)
  create table receiptDetail(
   id int identity(1,1),
   receiptId int,
   description varchar(50),
   subDescription varchar(50),
   sourceCode varchar(50),
   fundCode varchar(50),
   amount money
  )

 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'receiptDetail' and COLUMN_NAME = 'receiptId')
 begin
  begin transaction
   alter table receiptDetail add slink varchar(15)
   exec(N'update receiptDetail set slink = ''o''+cast(receiptId as varchar)')
   alter table receiptDetail drop column receiptId
   if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'receiptDetail' and COLUMN_NAME = 'receiptId')
    rollback transaction
   else
    commit transaction
 end

 if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'receiptDetail' and COLUMN_NAME = 'altContraId')
 begin
   alter table receiptDetail add altContraId int not null default 0
 end


-- INVOICES
 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[invoices]') and OBJECTPROPERTY(id, N'IsTable') = 1)
  create table [dbo].[invoices](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[TAXROLLID] [int] NOT NULL,
	[TYP] [nvarchar](1) NOT NULL,
	[PARCEL] [nvarchar](24) NOT NULL,
	[ITEM] [numeric](7, 1) NOT NULL,
	[TAXYEAR] [numeric](5, 0) NOT NULL,
	[NAME] [nvarchar](30) NOT NULL,
	[BUSINESSNAME] [nvarchar](30) NOT NULL,
	[POSTDATE] [int] NOT NULL,
	[STATUS] [nvarchar] (10) NOT NULL,
        invoiceAmount money not null default 0,
        invoiceDue money not null default 0,
        subInvoiceDue money not null default 0,
        invoiceId int not null default 0,
        interestDate int not null default 0,
        printed varchar(50) not null default '',
        queue varchar(50) not null default '',
        printOrder varchar(50) not null default '',
        origin varchar(50) not null default '',
        originId int not null default 0,
        modified datetime not null default getDate(),
        apiUpdated datetime
   ) ON [PRIMARY]
 if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'invoices' and COLUMN_NAME = 'statementId')
  alter table invoices add statementId int not null default 0
 if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'invoices' and COLUMN_NAME = 'taxRuleDue')
  alter table invoices add taxRuleDue money not null default 0

-- RECEIPTLINK
 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[receiptlink]') and OBJECTPROPERTY(id, N'IsTable') = 1)
  create table [dbo].[receiptlink](
   id int identity(1,1),
   receiptId int,
   invoiceId int,
   methodRate money not null default 1.0,
   receiptNumber varchar(50) not null default '',
   protestAmount money not null default 0
  )        

-- ADTAX
 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[AdTax]') and OBJECTPROPERTY(id, N'IsTable') = 1)
  create table [dbo].[AdTax](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RECORDTYPE] [nvarchar](1) NOT NULL,
	[ADDITIONNUMBER] [nvarchar](4) NOT NULL,
	[TOWNSHIPBLOCK] [nvarchar](3) NOT NULL,
	[RANGELOT] [nvarchar](3) NOT NULL,
	[SECTIONNUMBER] [nvarchar](2) NOT NULL,
	[QTRSECTIONNUMBER] [nvarchar](1) NOT NULL,
	[PARCELNUMBER] [nvarchar](3) NOT NULL,
	[PROPERTYSPLIT] [nvarchar](2) NOT NULL,
	[FULLPIDNUMBER] [nvarchar](24) NOT NULL,
	[PIDSORTNUMBER] [nvarchar](18) NOT NULL,
	[ITEMNUMBER] [numeric](7, 1) NOT NULL,
	[REALTAXYEAR] [numeric](5, 0) NOT NULL,
	[OWNERNAME] [nvarchar](30) NOT NULL,
	[BUSINESSNAME] [nvarchar](30) NOT NULL,
	[ADDRESS1] [nvarchar](40) NOT NULL,
	[ADDRESS2] [nvarchar](40) NOT NULL,
	[ADDRESS3] [nvarchar](40) NOT NULL,
	[CITY] [nvarchar](30) NOT NULL,
	[STATE] [nvarchar](2) NOT NULL,
	[ZIP1] [nvarchar](5) NOT NULL,
	[ZIP2] [nvarchar](4) NOT NULL,
	[ZIP3] [nvarchar](4) NOT NULL,
	[COUNTRY] [nvarchar](30) NOT NULL,
	[ORGSCHOOLDISTRICTMAIN] [nvarchar](15) NOT NULL,
	[SCHOOLDISTRICTMAIN] [nvarchar](15) NOT NULL,
	[ORGSCHOOLDISTRICTTAXRATE] [nvarchar](15) NOT NULL,
	[SCHOOLDISTRICTTAXRATE] [nvarchar](15) NOT NULL,
	[FIREDISTRICT] [nvarchar](15) NOT NULL,
	[MORTGAGECODE] [numeric](7, 0) NOT NULL,
	[OWNERNUMBER] [numeric](9, 2) NOT NULL,
	[ACRES] [numeric](7, 2) NOT NULL,
	[LOTS] [numeric](5, 2) NOT NULL,
	[MFGHOMEASSESSED] [numeric](7, 0) NOT NULL,
	[GROSSASSESSED] [numeric](9, 0) NOT NULL,
	[FREEPORTEXEMPTION] [numeric](9, 0) NOT NULL,
	[BASEEXEMPTION] [numeric](7, 0) NOT NULL,
	[DBLEXEMPTION] [numeric](7, 0) NOT NULL,
	[EXEMPTION1] [numeric](9, 0) NOT NULL,
	[EXEMPTION2] [numeric](9, 0) NOT NULL,
	[EXEMPTION3] [numeric](9, 0) NOT NULL,
	[NETASSESSEDVALUE] [numeric](9, 0) NOT NULL,
	[TOTALTAXRATE] [numeric](9, 7) NOT NULL,
	[ORIGINALTOTALDUE] [numeric](11, 2) NOT NULL,
	[TOTALDUE] [numeric](11, 2) NOT NULL,
	[BALANCEDUE] [numeric](11, 2) NOT NULL,
	[CERTIFICATENUMBER] [nvarchar](6) NOT NULL,
	[PAIDOFFDATE] [int] NOT NULL,
	[PROPERTYLIENCODE1] [nvarchar](5) NOT NULL,
	[PROPERTYLIENAMOUNT1] [numeric](7, 2) NOT NULL,
	[PROPERTYLIENCODE2] [nvarchar](5) NOT NULL,
	[PROPERTYLIENAMOUNT2] [numeric](7, 2) NOT NULL,
	[LASTTRANDATE] [int] NOT NULL,
	[TAXCORRECTIONDATE] [int] NOT NULL,
	[TAXCORRECTIONINITIALS] [nvarchar](3) NOT NULL,
	[FLAG1] [nvarchar](1) NOT NULL,
	[FLAG2] [nvarchar](1) NOT NULL,
	[FLAG3] [nvarchar](1) NOT NULL,
	[LEGALDESCRIPTION] [ntext] NOT NULL,
    pertyp varchar(1) not null default '',
    proploc varchar(51) not null default '',
    mort_cd varchar(5) not null default '',
    morleg varchar(1) not null default '',
    bankrupt varchar(1) not null default '',
    treamort varchar(5) not null default ''
   ) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
 
  if not exists(SELECT * FROM sys.indexes WHERE name='id' AND object_id = OBJECT_ID('AdTax'))
  begin
   CREATE NONCLUSTERED INDEX [id] ON [dbo].[AdTax] 
     ([ID] ASC)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF,
      DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON,        ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
  end

  if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AdTax' and COLUMN_NAME = 'chg_asmt')
   alter table AdTax add chg_asmt varchar(1) not null default ''
  if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AdTax' and COLUMN_NAME = 'cur_adr')
   alter table AdTax add cur_adr varchar(8) not null default ''
  if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AdTax' and COLUMN_NAME = 'trcode')
   alter table AdTax add trcode varchar(51) not null default ''
  if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AdTax' and COLUMN_NAME = 'kpsc_schn')
   alter table AdTax add kpsc_schn varchar(5) not null default ''
  if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AdTax' and COLUMN_NAME = 'origin')
   alter table AdTax add origin varchar(50) not null default ''
  if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AdTax' and COLUMN_NAME = 'LandAssessed')
   alter table AdTax add LandAssessed [numeric](9, 0) not null default 0
  if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AdTax' and COLUMN_NAME = 'ImprovedAssessed')
   alter table AdTax add ImprovedAssessed [numeric](9, 0) not null default 0
  if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AdTax' and COLUMN_NAME = 'MiscAssessed')
   alter table AdTax add MiscAssessed [numeric](9, 0) not null default 0
  if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AdTax' and COLUMN_NAME = 'modified')
   alter table AdTax add modified datetime not null default getDate()
  if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AdTax' and COLUMN_NAME = 'apiUpdated')
   alter table AdTax add apiUpdated datetime
  if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AdTax' and COLUMN_NAME = 'apiUpdatedLegal')
   alter table AdTax add apiUpdatedLegal datetime
  if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AdTax' and COLUMN_NAME = 'CERTIFICATENUMBER' and character_maximum_length=6)
   alter table adtax alter column CERTIFICATENUMBER varchar(15)
  if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AdTax' and COLUMN_NAME = 'OWNERNUMBER' and NUMERIC_PRECISION=9)
   alter table adtax alter column OWNERNUMBER numeric(14,2)

-- TAXROLLInvoiceBatch
 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[taxRollInvoiceProcessing]') and OBJECTPROPERTY(id, N'IsTable') = 1)
  CREATE TABLE [dbo].[taxRollInvoiceProcessing](
	[id] [int] NOT NULL,
        [taxyear] varchar(4) not null,
        [processCode] [varchar](50) not null
  )


-- TAXROLLDETAIL
 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[taxRollDetail]') and OBJECTPROPERTY(id, N'IsTable') = 1)
  CREATE TABLE [dbo].[taxRollDetail](
	[id] [int] IDENTITY(1,1) NOT NULL,
	[adTaxId] [int] NOT NULL,
	[parcelNumber] [nvarchar](24) NOT NULL,
	[name] [nvarchar](30) NOT NULL,
	[itemNumber] [numeric](7, 1) NOT NULL,
	[taxYear] [numeric](5, 0) NOT NULL,
	[Stamp] [varchar](50) NOT NULL,
	[businessName] [nvarchar](30) NOT NULL,
	[address1] [nvarchar](40) NOT NULL,
	[address2] [nvarchar](40) NOT NULL,
	[address3] [nvarchar](40) NOT NULL,
	[city] [nvarchar](30) NOT NULL,
	[state] [nvarchar](2) NOT NULL,
	[zip1] [nvarchar](5) NOT NULL,
	[zip2] [nvarchar](4) NOT NULL,
	[zip3] [nvarchar](4) NOT NULL,
	[comments] [text] NOT NULL
   ) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

 if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'taxRollDetail' and COLUMN_NAME = 'dtype')
   alter table taxRollDetail add dtype varchar(10) not null default ''
 if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'taxRollDetail' and COLUMN_NAME = 'documentName')
   alter table taxRollDetail add documentName varchar(50) not null default ''
 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'taxRollDetail' and COLUMN_NAME = 'documentDate')
   alter table taxRollDetail drop column documentDate
 if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'taxRollDetail' and COLUMN_NAME = 'documentDateTime')
   alter table taxRollDetail add documentDateTime datetime not null default getdate()
 if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'taxRollDetail' and COLUMN_NAME = 'creationDateTime')
   alter table taxRollDetail add creationDateTime datetime not null default getdate()
 if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'taxRollDetail' and COLUMN_NAME = 'invoiceLinkId')
   alter table taxRollDetail add invoiceLinkId int not null default 0
 if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'taxRollDetail' and COLUMN_NAME = 'printOrder')
   alter table taxRollDetail add printOrder varchar(50) not null default ''
 if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'taxRollDetail' and COLUMN_NAME = 'enabled')
   alter table taxRollDetail add enabled int not null default 0
 if exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'taxrollDetail' and COLUMN_NAME = 'adtaxid' and COLUMN_DEFAULT is null)
 begin
  alter table taxrollDetail add constraint default_adtaxId DEFAULT 0 for adtaxId
  alter table taxrollDetail add constraint default_parcelNumber DEFAULT '' for parcelNumber
  alter table taxrollDetail add constraint default_name DEFAULT '' for name
  alter table taxrollDetail add constraint default_itemNumber DEFAULT 0 for itemNumber
  alter table taxrollDetail add constraint default_taxYear DEFAULT 0 for taxYear
  alter table taxrollDetail add constraint default_stamp DEFAULT '' for stamp
  alter table taxrollDetail add constraint default_businessName DEFAULT '' for businessName
  alter table taxrollDetail add constraint default_address1 DEFAULT '' for address1
  alter table taxrollDetail add constraint default_address2 DEFAULT '' for address2
  alter table taxrollDetail add constraint default_address3 DEFAULT '' for address3
  alter table taxrollDetail add constraint default_city DEFAULT '' for city
  alter table taxrollDetail add constraint default_state DEFAULT '' for state
  alter table taxrollDetail add constraint default_zip1 DEFAULT '' for zip1
  alter table taxrollDetail add constraint default_zip2 DEFAULT '' for zip2
  alter table taxrollDetail add constraint default_zip3 DEFAULT '' for zip3
  alter table taxrollDetail add constraint default_comments DEFAULT '' for comments
 end

-- JOURNALLINK
 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[journalLink]') and OBJECTPROPERTY(id, N'IsTable') = 1)
  create table dbo.journalLink (
	[id] [int] IDENTITY(1,1) NOT NULL,
	[jeId] [int] NULL,
	[invoiceId] [int] NULL,
	[methodRate] [money] NOT NULL default ((1.0))
  ) ON [PRIMARY]
 if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'journalLink' and COLUMN_NAME = 'receiptId')
   alter table journalLink add receiptId int null

-- KEYLOG
 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[keyLog]') and OBJECTPROPERTY(id, N'IsTable') = 1)
  CREATE TABLE [dbo].[keyLog](
   id int IDENTITY(1,1) NOT NULL,
   time datetime default getdate(),
   procName varchar(50),
   message varchar(max)
  )
 if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'keyLog' and COLUMN_NAME = 'level')
 begin
   alter table keyLog add level int
 end

-- JSON Stuff
 IF not EXISTS (SELECT * FROM sys.types WHERE name LIKE 'JSONHierarchy')
  CREATE TYPE dbo.JSONHierarchy AS TABLE
  (
   element_id INT NOT NULL, 
   parent_ID INT,
   Object_ID INT,
   NAME NVARCHAR(2000),
   StringValue NVARCHAR(MAX) NOT NULL,
   ValueType VARCHAR(10) NOT null 
    PRIMARY KEY (element_id)
  )

-- split table
 IF not EXISTS (SELECT * FROM sys.types WHERE name LIKE 'splitWt')
  CREATE TYPE dbo.splitWt AS TABLE
  (
   id INT NOT NULL, 
   data VARCHAR(max),
   PRIMARY KEY (id)
  )
 IF not EXISTS (SELECT * FROM sys.types WHERE name LIKE 'pivotObjectWt')
  CREATE TYPE dbo.pivotObjectWt AS TABLE
  (
   field VARCHAR(50),
   value varchar(50),
   primary key (field)
  )


 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[AAMASTER]') and OBJECTPROPERTY(id, N'IsTable') = 1)
  CREATE TABLE [dbo].[AAMASTER](
	[AUTONUMBER] [int] NULL,
	[RECORDTYPE] [nvarchar](1) NULL,
	[ADDITIONNUMBER] [nvarchar](4) NULL,
	[RECORDTYPEOWNERNAMECLIP] [nvarchar](40) NULL,
	[TOWNSHIPBLOCK] [nvarchar](3) NULL,
	[RANGELOT] [nvarchar](3) NULL,
	[SECTIONNUMBER] [nvarchar](2) NULL,
	[QTRSECTIONNUMBER] [nvarchar](1) NULL,
	[PARCELNUMBER] [nvarchar](3) NULL,
	[PROPERTYSPLIT] [nvarchar](2) NULL,
	[FULLPIDNUMBER] [nvarchar](24) NULL,
	[PIDSORTNUMBER] [nvarchar](18) NULL,
	[PHYSICALSTREETNUMBERSUB] [nvarchar](5) NULL,
	[PHYSICALSTREETNUMBER] [int] NULL,
	[PHYSICALSTREETDIRECTION] [nvarchar](10) NULL,
	[PHYSICALSTREETSUFFIX] [nvarchar](30) NULL,
	[PHYSICALSTREET] [nvarchar](30) NULL,
	[PHYSICALTOWN] [nvarchar](30) NULL,
	[PHYSICALADDRESSCLIP] [nvarchar](115) NULL,
	[PHYSICALTOWNSTREETNUMBERDIRECTION] [nvarchar](115) NULL,
	[PHYSICALSTREETNUMBERSUFFIXDIRECTIONTOWN] [nvarchar](115) NULL,
	[MAILADDRESSCLIP] [nvarchar](150) NULL,
	[OWNERNAME] [nvarchar](30) NULL,
	[BUSINESSNAME] [nvarchar](30) NULL,
	[ADDRESS1] [nvarchar](40) NULL,
	[ADDRESS2] [nvarchar](40) NULL,
	[ADDRESS3] [nvarchar](40) NULL,
	[CITY] [nvarchar](30) NULL,
	[STATE] [nvarchar](2) NULL,
	[ZIP1] [nvarchar](5) NULL,
	[ZIP2] [nvarchar](4) NULL,
	[ZIP3] [nvarchar](4) NULL,
	[COUNTRY] [nvarchar](30) NULL,
	[SCHOOLDISTRICT] [nvarchar](15) NULL,
	[SCHOOLDISTRICTMAIN] [nvarchar](15) NULL,
	[VOTECHDISTRICT] [nvarchar](15) NULL,
	[FIREDISTRICT] [nvarchar](15) NULL,
	[MORTGAGECODE] [decimal](7, 0) NULL,
	[OWNERIDNUMBER] [decimal](9, 2) NULL,
	[OWNERNUMBERINTONLY] [int] NULL,
	[ACRES] [decimal](9, 3) NULL,
	[AGLANDACRES] [decimal](9, 3) NULL,
	[LOTS] [decimal](5, 3) NULL,
	[DEEDBOOK] [nvarchar](6) NULL,
	[DEEDPAGE] [nvarchar](6) NULL,
	[DOCSTAMPS] [decimal](11, 2) NULL,
	[SALEPRICE] [decimal](11, 2) NULL,
	[DEEDSIGNEDDATE] [int] NULL,
	[DEEDMULTIPLEPARCELS] [tinyint] NULL,
	[REALVALUECHANGEDATE] [int] NULL,
	[REALVALUECHANGEINITIALS] [nvarchar](3) NULL,
	[REALNAMECHANGEDATE] [int] NULL,
	[REALNAMECHANGEINITIALS] [nvarchar](3) NULL,
	[REALEXEMPTIONCHANGEDATE] [int] NULL,
	[REALEXEMPTIONCHANGEINITIALS] [nvarchar](3) NULL,
	[SECONDARYPARCELCODE] [nvarchar](1) NULL,
	[REALPROPERTYLANDUSE] [nvarchar](10) NULL,
	[PERCENTOFOWNERSHIP] [decimal](7, 6) NULL,
	[FREEZESTATUS] [nvarchar](1) NULL,
	[FREEZECODE] [nvarchar](2) NULL,
	[FREEZECHANGEINITIALS] [nvarchar](3) NULL,
	[FREEZESTATUSDATE] [int] NULL,
	[CAPSTATUS] [nvarchar](1) NULL,
	[CAPCODE] [nvarchar](2) NULL,
	[CAPCHANGEINITIALS] [nvarchar](3) NULL,
	[CAPSTATUSDATE] [int] NULL,
	[LANDMARKETVALUE] [decimal](11, 0) NULL,
	[LANDASSESSEDVALUE] [decimal](11, 0) NULL,
	[IMPROVEDMARKETVALUE] [decimal](11, 0) NULL,
	[IMPROVEDASSESSEDVALUE] [decimal](9, 0) NULL,
	[MISCELLANEOUSMARKET] [decimal](9, 0) NULL,
	[MISCELLANEOUSASSESSED] [decimal](9, 0) NULL,
	[MFGHOMEMARKETVALUE] [decimal](9, 0) NULL,
	[MFGHOMEASSESSEDVALUE] [decimal](9, 0) NULL,
	[MFGVINNUMBER] [nvarchar](24) NULL,
	[BASEHOMESTEAD] [decimal](9, 0) NULL,
	[BASEHOMESTEADLOCKBYTE] [tinyint] NULL,
	[DOUBLEHOMESTEAD] [decimal](9, 0) NULL,
	[DOUBLEHOMESTEADLOCKBYTE] [tinyint] NULL,
	[DOUBLEHOMESTEADSTATUS] [nvarchar](1) NULL,
	[SAFEROOMEXEMPTION] [decimal](9, 0) NULL,
	[EXEMPTION1] [decimal](9, 0) NULL,
	[DISABLEDVETERANEXEMPTION] [tinyint] NULL,
	[PERCENTOFDISABLEDVETEXEMPTION] [decimal](7, 4) NULL,
	[EXEMPTION2] [decimal](9, 0) NULL,
	[EXEMPTION2LOCKBYTE] [tinyint] NULL,
	[EXEMPTION3] [decimal](9, 0) NULL,
	[TOTALMARKET] [decimal](11, 0) NULL,
	[OLDREALTOTALMARKET] [decimal](11, 0) NULL,
	[TOTALASSESSED] [decimal](11, 0) NULL,
	[OLDREALTOTALASSESSED] [decimal](11, 0) NULL,
	[TOTALEXEMPTION] [decimal](11, 0) NULL,
	[OLDREALTOTALEXEMPTION] [decimal](11, 0) NULL,
	[NETASSESSED] [decimal](11, 0) NULL,
	[OLDREALNETASSESSED] [decimal](11, 0) NULL,
	[CAMANEIGHBORHOODCODE] [decimal](9, 3) NULL,
	[CAMALANDVALUE] [decimal](9, 0) NULL,
	[CAMAIMPROVEMENTS] [decimal](9, 0) NULL,
	[CAMAMISCELLANEOUSVALUE] [decimal](9, 0) NULL,
	[CAMAMFGHOME] [decimal](9, 0) NULL,
	[CAMAOTHER1] [decimal](9, 0) NULL,
	[CAMAOTHER2] [decimal](9, 0) NULL,
	[CAMAVALUEUPDATEDATE] [int] NULL,
	[PERPIDSORTNUMBER] [nvarchar](18) NULL,
	[PERFULLPIDNUMBER] [nvarchar](24) NULL,
	[PERCOMMENTSLINE1] [nvarchar](25) NULL,
	[PERCOMMENTSLINE2] [nvarchar](25) NULL,
	[PERCOMMENTSLINE3] [nvarchar](25) NULL,
	[PERCOMMENTSLINE4] [nvarchar](25) NULL,
	[PERDOINGBUSINESSAS] [nvarchar](40) NULL,
	[PERINDIVIDUALRATIO] [decimal](7, 6) NULL,
	[PERBUSINESSRATIO] [decimal](7, 6) NULL,
	[PERCHANGEDATE] [int] NULL,
	[PERCHANGEINITIALS] [nvarchar](3) NULL,
	[PERMANUFACPROCESSINGPLANTSMARKET] [decimal](11, 0) NULL,
	[PERMANUFACPROCESSINGPLANTSASSESSED] [decimal](11, 0) NULL,
	[PERREFINERIESGASOLINEPLANTSMARKET] [decimal](11, 0) NULL,
	[PERREFINERIESGASOLINEPLANTSASSESSED] [decimal](11, 0) NULL,
	[PEROTHEROILGASMININGMARKET] [decimal](11, 0) NULL,
	[PEROTHEROILGASMININGASSESSED] [decimal](11, 0) NULL,
	[PERPIPELINESMARKET] [decimal](11, 0) NULL,
	[PERPIPELINESASSESSED] [decimal](11, 0) NULL,
	[PERBUSINESSINVENTORYGROSSMARKET] [decimal](11, 0) NULL,
	[PERBUSINESSINVENTORYGROSSASSESSED] [decimal](11, 0) NULL,
	[PERBUSINESSFURNFIXTEQUIPMENTMARKET] [decimal](11, 0) NULL,
	[PERBUSINESSFURNFIXTEQUIPMENTASSESSED] [decimal](11, 0) NULL,
	[PERMANUFACTUREDHOMESLEASEDLANDMARKET] [decimal](11, 0) NULL,
	[PERMANUFACTUREDHOMESLEASEDLANDASSESSED] [decimal](11, 0) NULL,
	[PERMANUFACTUREDHOMESLEASEDLANDQUANTITY] [decimal](7, 0) NULL,
	[PERIMPROVEMENTSONLEASEDLANDMARKET] [decimal](11, 0) NULL,
	[PERIMPROVEMENTSONLEASEDLANDASSESSED] [decimal](11, 0) NULL,
	[PERIMPROVEMENTSONLEASEDLANDQUANTITY] [decimal](7, 0) NULL,
	[PERCATTLEMARKET] [decimal](11, 0) NULL,
	[PERCATTLEASSESSED] [decimal](11, 0) NULL,
	[PERCATTLEQUANTITY] [int] NULL,
	[PEROTHERLIVESTOCKANIMALSMARKET] [decimal](11, 0) NULL,
	[PEROTHERLIVESTOCKANIMALSASSESSED] [decimal](11, 0) NULL,
	[PEROTHERLIVESTOCKQUANTITY] [int] NULL,
	[PERFARMTRACTORSMARKET] [decimal](11, 0) NULL,
	[PERFARMTRACTORSASSESSED] [decimal](11, 0) NULL,
	[PERFARMTRACTORSQUANTITY] [decimal](7, 0) NULL,
	[PERFARMEQUIPMENTMARKET] [decimal](11, 0) NULL,
	[PERFARMEQUIPMENTASSESSED] [decimal](11, 0) NULL,
	[PERHOUSEHOLDEQUIPMENTMARKET] [decimal](11, 0) NULL,
	[PERHOUSEHOLDEQUIPMENTASSESSED] [decimal](11, 0) NULL,
	[PERVALUEMARKET14] [decimal](11, 0) NULL,
	[PERVALUEASSESSED14] [decimal](11, 0) NULL,
	[PERVALUEMARKET15] [decimal](11, 0) NULL,
	[PERVALUEASSESSED15] [decimal](11, 0) NULL,
	[PERPENALTYMARKET1] [decimal](11, 0) NULL,
	[PERPENALTYASSESSED1] [decimal](11, 0) NULL,
	[PERPENALTYMARKET2] [decimal](11, 0) NULL,
	[PERPENALTYASSESSED2] [decimal](11, 0) NULL,
	[PERPENALTYMARKET3] [decimal](11, 0) NULL,
	[PERPENALTYASSESSED3] [decimal](11, 0) NULL,
	[PERPENALTYMARKET4] [decimal](11, 0) NULL,
	[PERPENALTYASSESSED4] [decimal](11, 0) NULL,
	[PERHEADOFHOUSEHOLDMARKETEXEMPTION] [decimal](11, 0) NULL,
	[PERHEADOFHOUSEHOLDASSESSEDEXEMPTION] [decimal](11, 0) NULL,
	[PERVETERANSMARKETEXEMPTION] [decimal](11, 0) NULL,
	[PERVETERANSASSESSEDEXEMPTION] [decimal](11, 0) NULL,
	[PERMFGHOMEMARKETEXEMPTION] [decimal](11, 0) NULL,
	[PERMFGHOMEASSESSEDEXEMPTION] [decimal](11, 0) NULL,
	[PERMARKETEXEMPTION4] [decimal](11, 0) NULL,
	[PERASSESSEDEXEMPTION4] [decimal](11, 0) NULL,
	[PERMARKETEXEMPTION5] [decimal](11, 0) NULL,
	[PERASSESSEDEXEMPTION5] [decimal](11, 0) NULL,
	[PERMARKETEXEMPTION6] [decimal](11, 0) NULL,
	[PERASSESSEDEXEMPTION6] [decimal](11, 0) NULL,
	[PERMARKETEXEMPTION7] [decimal](11, 0) NULL,
	[PERASSESSEDEXEMPTION7] [decimal](11, 0) NULL,
	[PERMARKETEXEMPTION8] [decimal](11, 0) NULL,
	[PERASSESSEDEXEMPTION8] [decimal](11, 0) NULL,
	[PERFREEPORTMARKETEXEMPTION] [decimal](11, 0) NULL,
	[PERFREEPORTASSESSEDEXEMPTION] [decimal](11, 0) NULL,
	[PERBUSINESSMARKETEXEMPTION1] [decimal](11, 0) NULL,
	[PERBUSINESSASSESSEDEXEMPTION1] [decimal](11, 0) NULL,
	[PUBSTATEASSESSEDMARKET] [decimal](13, 0) NULL,
	[PUBSTATEASSESSEDASSESSED] [decimal](13, 0) NULL,
	[PUBSTATEASSESSEDRATIO] [decimal](9, 6) NULL,
	[PEREXTRA1] [decimal](11, 0) NULL,
	[PEREXTRA2] [decimal](11, 0) NULL,
	[PEREXTRA3] [decimal](11, 0) NULL,
	[PEREXTRA4] [decimal](11, 0) NULL,
	[REALRXCODE] [nvarchar](10) NULL,
	[REALRXCODE2] [nvarchar](10) NULL,
	[CHANGENOTICECOMMENT] [nvarchar](250) NULL,
	[LEGALDESCRIPTION] [ntext] NULL
  ) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[stationPaycodes]') and OBJECTPROPERTY(id, N'IsTable') = 1)
  CREATE TABLE dbo.stationPaycodes(
   id int identity(1,1),
   station varchar(50) not null,
   paycode varchar(50),
   receiptType varchar(50),
   accountCode varchar(50) not null,
   primary key (id)
  )

 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[mike_taxroll]') and OBJECTPROPERTY(id, N'IsTable') = 1)
   CREATE TABLE [dbo].[mike_taxroll](
	[RECORDTYPE] [nvarchar](1) NULL,
	[ADDITIONNUMBER] [nvarchar](4) NULL,
	[TOWNSHIPBLOCK] [nvarchar](3) NULL,
	[RANGELOT] [nvarchar](3) NULL,
	[SECTIONNUMBER] [nvarchar](2) NULL,
	[QTRSECTIONNUMBER] [nvarchar](1) NULL,
	[PARCELNUMBER] [nvarchar](3) NULL,
	[PROPERTYSPLIT] [nvarchar](2) NULL,
	[FULLPIDNUMBER] [nvarchar](24) NULL,
	[PIDSORTNUMBER] [nvarchar](18) NULL,
	[ITEMNUMBER] [decimal](7, 1) NULL,
	[REALTAXYEAR] [decimal](5, 0) NULL,
	[OWNERNAME] [nvarchar](30) NULL,
	[BUSINESSNAME] [nvarchar](30) NULL,
	[ADDRESS1] [nvarchar](40) NULL,
	[ADDRESS2] [nvarchar](40) NULL,
	[ADDRESS3] [nvarchar](40) NULL,
	[CITY] [nvarchar](30) NULL,
	[STATE] [nvarchar](2) NULL,
	[ZIP1] [nvarchar](5) NULL,
	[ZIP2] [nvarchar](4) NULL,
	[ZIP3] [nvarchar](4) NULL,
	[COUNTRY] [nvarchar](30) NULL,
	[ORGSCHOOLDISTRICTMAIN] [nvarchar](15) NULL,
	[SCHOOLDISTRICTMAIN] [nvarchar](15) NULL,
	[ORGSCHOOLDISTRICTTAXRATE] [nvarchar](15) NULL,
	[SCHOOLDISTRICTTAXRATE] [nvarchar](15) NULL,
	[FIREDISTRICT] [nvarchar](15) NULL,
	[MORTGAGECODE] [decimal](7, 0) NULL,
	[OWNERNUMBER] [decimal](9, 2) NULL,
	[ACRES] [decimal](7, 2) NULL,
	[LOTS] [decimal](5, 2) NULL,
	[MFGHOMEASSESSED] [decimal](7, 0) NULL,
	[GROSSASSESSED] [decimal](9, 0) NULL,
	[FREEPORTEXEMPTION] [decimal](9, 0) NULL,
	[BASEEXEMPTION] [decimal](7, 0) NULL,
	[DBLEXEMPTION] [decimal](7, 0) NULL,
	[EXEMPTION1] [decimal](9, 0) NULL,
	[EXEMPTION2] [decimal](9, 0) NULL,
	[EXEMPTION3] [decimal](9, 0) NULL,
	[NETASSESSEDVALUE] [decimal](9, 0) NULL,
	[TOTALTAXRATE] [decimal](9, 7) NULL,
	[ORIGINALTOTALDUE] [decimal](11, 2) NULL,
	[TOTALDUE] [decimal](11, 2) NULL,
	[BALANCEDUE] [decimal](11, 2) NULL,
	[CERTIFICATENUMBER] [nvarchar](6) NULL,
	[PAIDOFFDATE] [int] NULL,
	[PROPERTYLIENCODE1] [nvarchar](5) NULL,
	[PROPERTYLIENAMOUNT1] [decimal](7, 2) NULL,
	[PROPERTYLIENCODE2] [nvarchar](5) NULL,
	[PROPERTYLIENAMOUNT2] [decimal](7, 2) NULL,
	[LASTTRANDATE] [int] NULL,
	[TAXCORRECTIONDATE] [int] NULL,
	[TAXCORRECTIONINITIALS] [nvarchar](3) NULL,
	[FLAG1] [nvarchar](1) NULL,
	[FLAG2] [nvarchar](1) NULL,
	[FLAG3] [nvarchar](1) NULL,
	[LEGALDESCRIPTION] [nvarchar](max) NULL,
        [pertyp] [char](1) NULL,
	[proploc] [char](51) NULL,
	[mort_cd] [char](5) NULL,
	[morleg] [char](1) NULL,
	[bankrupt] [char](1) NULL,
	[treamort] [char](5) NULL,
	[chg_asmt] [char](1) NULL,
	[cur_adr] [char](8) NULL,
	[trcode] [numeric](8, 0) NULL,
	[kpsc_schn] [char](3) NULL
   ) ON [PRIMARY]


 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[mike_fee]') and OBJECTPROPERTY(id, N'IsTable') = 1)
   CREATE TABLE [dbo].[mike_fee](
        id int identity(1,1),
	[taxyear] [char](4) NULL,
	[itm_nbr] [decimal](9,1) NULL,
	[key_suf] [char](2) NULL,
	[type] [char](1) NULL,
	[amount] [numeric](8, 2) NULL,
	[amt2] [numeric](6, 2) NULL,
	[date] [char](8) NULL,
	[desc] [char](30) NULL
   ) ON [PRIMARY]

 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[temp_mortgageLink]') and OBJECTPROPERTY(id, N'IsTable') = 1)
   CREATE TABLE [dbo].[temp_mortgageLink](
	[id] [int] IDENTITY(1,1) NOT NULL,
	[company] [varchar](100) NULL,
	[details] [varchar](max) NULL,
	[parcel] [varchar](100) NULL,
	[record_id] [int] NULL,
	[year] [varchar](50) NULL,
	[site_id] [int] NULL,
	[createDate] [varchar](50) NULL,
        [customerNumber] [varchar](50) NULL,
	[taxrollId] [int] NULL,
	[companyId] [varchar](50) NULL,
   ) ON [PRIMARY]
 if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'temp_mortgageLink' and COLUMN_NAME = 'processFlag')
   alter table temp_mortgageLink add processFlag int not null default 0

 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[login]') and OBJECTPROPERTY(id, N'IsTable') = 1)
   create table dbo.login(
    id int identity(1,1),
    ini varchar(5) not null,
    hostName varchar(50) default host_name(),
    hostId int not null default host_id(),
    creationDateTime datetime not null default getDate()    
   )
 if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'login' and COLUMN_NAME = 'station')
   alter table login add station varchar(50) not null default 'unknown'

-- Populate the Payment Types Table
   insert object (typ,key1,key2,key3)
   select 1515,* from dbo.paymentTypes() where paymentType not in (select key1 from object where typ=1515)

-- Populate the Journal Types Table
   insert object (typ,key1,key2,key3)
   select 1516,* from dbo.journalTypes() where journalType not in (select key1 from object where typ=1516)

--apideleted
 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[apiDeleted]') and OBJECTPROPERTY(id, N'IsTable') = 1)
  create table dbo.apiDeleted (
	id int identity(1,1),
	link varchar(50),
	apiResource varchar(50),
	modified datetime not null default getDate(),
	apiUpdated datetime 
  )

-- documentProcessing
 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[documentProcessing]') and OBJECTPROPERTY(id, N'IsTable') = 1)
  create table dbo.documentProcessing (
   id int identity(1,1),
   invoiceId int,
   documentName varchar(50),
   documentDate int,
   processCode varchar(50)
  ) 
 if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'documentProcessing' and COLUMN_NAME = 'printOrder')
   alter table documentProcessing add printOrder varchar(50) not null default ''

-- settings
 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[settings]') and OBJECTPROPERTY(id, N'IsTable') = 1)
  create table dbo.settings (
   id int identity(1,1),
   settingName varchar(50),
   settingValue varchar(150),
   modifiedDateTime datetime default getdate(),
   modifiedBy varchar(150) default dbo.whoami()
  ) 

 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[diagnosticResults]') and OBJECTPROPERTY(id, N'IsTable') = 1)
  create table dbo.diagnosticResults(
   id int identity(1,1),
   trialId int,
   testId int,  
   method varchar(max),
   code int,
   message varchar(max),
   tally int,
   fixProc varchar(max),
   timeStamp datetime
  )

end