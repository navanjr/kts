CREATE procedure [dbo].[taxrollInvoiceBatch](
 @taxYear varchar(4),
 @processCount int
)
as

begin
 exec dbo.logit @@procid, @taxYear, @processCount

 declare 
  @sql varchar(500),
  @idToken int,
  @slink varchar(15),
  @resultTally int
 
 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'temp_taxrollInvoice')
 begin
  drop table temp_taxrollInvoice
 end


 set @sql = 'select top ' + cast(@processCount as varchar) + ' id into temp_taxrollInvoice from adtax where [RealTaxYear] = ''' + @taxYear + '''
  and [BALANCEDUE] > 0 and id not in (select taxrollId from invoices where taxyear = '+@taxYear+')'

 exec( @sql )

 exec dbo.createAdtaxMillageSources
 exec dbo.createAdtaxMillageReceivables
 exec dbo.createAdtaxCollectionReceivables

 declare @rt table(id int, resultInt int) 

 while exists(select * from temp_taxrollInvoice)
 begin
  select top 1 @idToken = id from temp_taxrollInvoice
  begin transaction
   exec dbo.taxReferenceCRUD @idToken
   exec dbo.taxrollInvoiceCRUD @idToken, 1, 'B'
   exec dbo.taxRollAddressInsert @idToken, ''
  
   select @slink = slink from dbo.taxrollCheck(@idToken,'',null)
   if dbo.glPostCheck(@slink) = 0
   begin
    insert @rt select @idToken, 0
    commit transaction
   end
   else
   begin 
    insert @rt select @idToken, 1
    rollback transaction
   end

   delete temp_taxrollInvoice where id = @idToken

 end

 drop table temp_taxrollInvoice

 select @resultTally = count(*) from @rt where resultInt = 0

 if isnull(@resultTally,0) = @processCount
  select '@code=0;@message=OK;'
 else
  select '@code=1;@message='+cast(@processCount - isnull(@resultTally,0) as varchar)+' records failed to process correctly, Contact Support. (tx.inv.Batch);'

end
