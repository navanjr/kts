create procedure dbo.glAccountVerification (
-- this routine should be the only place we insert accural glaccounts 
-- so we expect an accural accountCode (with the _XX) and accountType and if its not found we create it
 @accountCode varchar(50),
 @accountType varchar(50),
 @mode varchar(50),
 @tableType varchar(50) = '',
 @pilotTable varchar(50) = '',
 @year varchar(50) = '',
 @district varchar(50) = '',
 @rate varchar(50) = '',
 @populationType varchar(50) = '',
 @targetAccountCode varchar(50) = '',
 @collectionDesc varchar(50) = '',
 @debugMode varchar(5) = 'FALSE',
 @accountId int = null OUTPUT,
 @accountDesc varchar(50) = null OUTPUT,
 @monthEndColumn varchar(50) = '',
 @forceAccountDesc varchar(50) = ''
) as
begin
 set nocount on
 exec dbo.logit @@procid, '@accountCode', @accountCode, '@accountType', @accountType, '@mode', @mode
 
-- check for this account if we have it we get the id and bail
 if exists(select * from glAccounts where accountCode = upper(@accountCode))
 begin
-- TODO: Level9 if we were given a target code letst update this account if its blank
  select
   @accountId = accountId,
   @accountDesc = accountDesc
  from glAccounts where accountCode = upper(@accountCode)
  return
 end

 declare
  @typeDesc varchar(50),
  @reportCode varchar(50)

-- Check to make sure we have the necessary glAccountTYpe in object typ 4702. if not logit level 3.
 if not exists(select * from object where typ = 4702 and key1 = upper(@accountType))
  exec dbo.logit @@procid, 'missing accountType', @accountType, @level = 3 
 
  select 
   @typeDesc = key2,
   @reportCode = key3
  from object where typ = 4702 and key1 = upper(@accountType)

  declare @collectionDescription varchar(60) = ''

  if len(@collectionDesc)>0
   begin
    select top 1
     @collectionDescription = key1
    from object where typ = 4703 and upper(left(key1,len(@collectionDesc))) = upper(@collectionDesc)
   end

  declare @accountTypes table(
   accountType varchar(50),
   accountCodeSuffix varchar(10),
   accountDescSuffix varchar(50),
   accountDesc varchar(80) default ''
  )
  insert @accountTypes select 'SOURCE', '', '', ''
  insert @accountTypes select 'SUSPENSE', '', '', ''
  insert @accountTypes select 'FUND', '', '', ''
  insert @accountTypes select 'PAYABLE', '_AP',' Payable', ''
  insert @accountTypes select 'RECEIVABLE', '_AR',' Receivable', ''
  insert @accountTypes select 'ACCRUED RECEIVABLE', '_ACR',' Accrued Receivable', ''
  insert @accountTypes select 'ACCRUED PAYABLE', '_ACP',' Accrued Payable', ''
  insert @accountTypes select 'EXPENSE', '_EXP',' Expense', ''
  insert @accountTypes select 'SCHOOL', '', '', ''
  insert @accountTypes select 'CITY', '', '', ''
  insert @accountTypes select 'WARRANT', '_WR',' Warrants Registered', ''
  insert @accountTypes select 'BUDGET', '_B',' Fiscal Year Budget', ''

-- does the offered accountCode have the proper account suffix if not add it.
  declare @theRightSuffix varchar(10) 
  select @theRightSuffix = accountCodeSuffix from @accountTypes where accountType = @accountType
  if not right(@accountCode,len(@theRightSuffix)) = @theRightSuffix
   set @accountCode = @accountCode + @theRightSuffix

  update @accountTypes set accountDesc = replace(replace(@accountCode,accountCodeSuffix,accountDescSuffix),'_',' ')

--TODO: we are thinking we might have to trap for accountCodes longer than 50 char

  if upper(@mode) = 'CREATE' and upper(@accountType) in (select accountType from @accountTypes)
  begin

   select @accountDesc = accountDesc from @accountTypes where accountType = @accountType

   if @forceAccountDesc > '0'
    set @accountdesc=@forceAccountDesc

   insert object (typ,key1,key2,a1,a2,a3,a4,a8,a9,a10,a11,a12,a13,a14,a16,b2,k2,k3) 
    select 
     4701,
     upper(@accountCode),
     left(@accountDesc,49),
     upper(@accountType),
     left(@typeDesc,49),
     @reportCode,
     @collectionDescription,
     upper(@targetAccountCode),
     @tableType,
     @pilotTable,
     @year,
     @district,
     @rate,
     @populationType,
     'KTS',
     @monthEndColumn,
     left(@accountDesc,30),
     left(@tableType,30)

   select
    @accountId = @@identity,
    @accountDesc = @accountDesc

  end

  return

end
