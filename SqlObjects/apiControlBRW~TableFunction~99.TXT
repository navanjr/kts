create function dbo.apiControlBRW() returns @rt table(
 id int identity(-1,-1),
 resource varchar(50),
 total int,
 stale int,
 rate money,
 blob varchar(1000),
 jobEnabled int,
 batchSize int,
 ord varchar(50),
 loopProcSpid int,
 lastTime datetime,
 lastLog varchar(max),
 ageMinutes int
) as
begin
 
 declare @receipts table(total int, stale int)
 declare @tokenResource varchar(50),
         @taxyear int,
         @dmzTime int,
         @ini varchar(10)         
 
 select @dmzTime = dbo.settingsF('site.apiDMZTime', 0)

--taxrolls
 set @tokenResource = 'taxroll'
 insert @rt
 select @tokenResource,
  count(*),
  sum(case when t.modified > isnull(t.apiUpdated,0) and DATEDIFF(mi, isnull(t.apiupdated, 0), t.modified) > @dmzTime then 1 else 0 end),
  null,
  '@resource=' + @tokenResource + ';',
  null,
  dbo.settingsF('api.' + @tokenResource + '.batchSize', '50'),
  'a', null, null, null, null
 FROM adtax t JOIN invoices i ON i.taxrollid = t.id 

--legal
 declare @taxcorrections table(id int, taxrollid int)
 
 insert @taxcorrections 
  select max(id), taxrollid from taxrollCorrections where fieldNumber='102' group by taxrollid
  
  
 declare @tempadtax table(id int, modified datetime, apiUpdatedLegal datetime, complegal varchar(max),stale int)
 insert @tempadtax
 select id,modified, isnull(apiUpdatedLegal,0),/*ltrim(cast(dbo.taxCorrectionsSF(LEGALDESCRIPTION,id,'102') as varchar(max)))*/legaldescription as complegal,
  case when modified > isnull(apiUpdatedLegal,0) and DATEDIFF(mi, isnull(apiupdatedLegal, 0), modified) > @dmzTime then 1 else 0 end as stale 
  from adtax 
  where OWNERNAME>'  0' and id > 0 

 update t set complegal = tc.fielddata from @tempadtax t, @taxcorrections c, taxrollcorrections tc where t.id = c.taxrollid and c.id = tc.id 

 set @tokenResource = 'Legal'
 insert @rt
 select @tokenResource,
  count(*),
  sum(stale),
  null,
  '@resource=' + @tokenResource + ';',
  null,
  dbo.settingsF('api.' + @tokenResource + '.batchSize', '50'),
  'b', null, null, null, null
 from @tempadtax
 where complegal > '  0'

--invoices
 set @tokenResource = 'Invoices'
 insert @rt
 select @tokenResource,
  (select count(*) from invoices)
  + (select count(distinct slink) from apiDeleted where apiResource = 'invoices'),
  count(*),
  null,
  '@resource=' + @tokenResource + ';',
  null,
  dbo.settingsF('api.' + @tokenResource + '.batchSize', '50'),
  'c', null, null, null, null
 from dbo.apiInvoiceIds()

--receipts
 set @tokenResource = 'Receipts'
 insert @receipts
  select 
   (select COUNT(*) from object where typ=4502 and key3='TAX' and a17 = 'posted')
   + (select COUNT(distinct slink) from dbo.apiDeleted where apiResource = 'receipts'),
   count(distinct slink)
  from dbo.apiReceiptIds()

 insert @rt
 select @tokenResource,
  sum(total),
  sum(stale),
  null,
  '@resource=' + @tokenResource + ';',
  null,
  dbo.settingsF('api.' + @tokenResource + '.batchSize', '50'),
  'd', null, null, null, null 
 from @receipts

--mortgageCodes
 set @tokenResource = 'MortgageCodes'
 insert @rt
 select @tokenResource,
  count(id),
  sum(case when dbo.date112(lasteditDate) > isnull(k7,0) and DATEDIFF(mi, isnull(k7,0), dbo.date112(lasteditDate)) > @dmzTime then 1 else 0 end),
  null,
  '@resource=' + @tokenResource + ';',
  null,
  dbo.settingsF('api.' + @tokenResource + '.batchSize', '50'),
  'e', null, null, null, null 
 from object where typ = 4030

--mortgageLink
 set @tokenResource = 'MortgageLinks'
 insert @rt
 select @tokenResource,
   count(id),
   sum(case when modified>isnull(apiUpdated,0) and DATEDIFF(mi, isnull(apiUpdated,0), modified) > @dmzTime then 1 else 0 end),
   null,
  '@resource=' + @tokenResource + ';',
   null,
   dbo.settingsF('api.' + @tokenResource + '.batchSize', '50'),
   'f', null, null, null, null 
   from mortgageLinksImported 

--TaxRollInvoicing
 set @tokenResource = 'taxrollinvoicing'
 select @taxyear = max(realtaxyear) from adtax
 select @ini = dbo.readstring('@ini=',dbo.whoAmI())

 insert @rt
 select @tokenResource,
  count(*),
  count(*),
  null,
  '@resource=' + @tokenResource + ';',
  null,
  dbo.settingsF('api.' + @tokenResource + '.batchSize', '50'),
  'a', null, null, null, null
from adtax where [RealTaxYear] = @taxYear
 and [BALANCEDUE] > 0
 and id not in (select taxrollId from invoices where taxyear = @taxYear and typ<>'s')
 and id not in (select id from taxrollInvoiceProcessing where taxyear = @taxYear)


 update @rt set rate = ( (total - cast(stale as money))  / total ) * 100.0 where isnull(total, 0) != 0
 update @rt set blob = blob + '@batchSize=' + cast(batchSize as varchar) + ';'
-- update @rt set jobEnabled = 1 where 'kp.' + db_name() + '.api' + resource in (select name from scheduledTasks where status in ('ready','running'))
 update @rt set jobEnabled = case when dbo.settingsF('api.' + resource + '.enabled','TRUE') = 'TRUE' then 1 else null end
 update a set
  a.lastLog = (select top 1 b.message from keyLog b where b.procName = 'api' + a.resource order by b.id desc),
  a.lastTime = (select top 1 b.time from keyLog b where b.procName = 'api' + a.resource order by b.id desc)
 from @rt a

 update @rt set ageMinutes = datediff(minute,lastTime,getdate())

 update a set loopProcSpid = b.spid
 from @rt a
 join master.dbo.sysprocesses b on b.program_name = 'kts.bat.api.' + a.resource 
  and b.spid > 50
  and b.status not in ('background', 'sleeping')
  and b.cmd not in ('AWAITING COMMAND','MIRROR HANDLER','LAZY WRITER','CHECKPOINT SLEEP','RA MANAGER')

 return
end