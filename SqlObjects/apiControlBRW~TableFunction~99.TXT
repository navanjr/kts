create function dbo.apiControlBRW() returns @rt table(
 id int identity(-1,-1),
 resource varchar(50),
 total int,
 stale int,
 rate money,
 blob varchar(1000),
 jobEnabled int,
 batchSize int,
 ord varchar(50),
 loopProcSpid int
) as
begin
 
 declare @receipts table(total int, stale int)
 declare @tokenResource varchar(50)

--taxrolls
 set @tokenResource = 'taxroll'
 insert @rt
 select @tokenResource,
  count(*),
  sum(case when modified > isnull(apiUpdated,0) then 1 else 0 end),
  null,
  '@resource=' + @tokenResource + ';',
  null,
  dbo.settingsF('api.' + @tokenResource + '.batchSize', '50'),
  'a', null 
 from adtax

--legal
 set @tokenResource = 'Legal'
 insert @rt
 select @tokenResource,
  count(*),
  sum(case when modified > isnull(apiUpdatedLegal,0) then 1 else 0 end),
  null,
  '@resource=' + @tokenResource + ';',
  null,
  dbo.settingsF('api.' + @tokenResource + '.batchSize', '50'),
  'b', null  
 from adtax
 where ltrim(cast(legalDescription as varchar(max))) > '  0'

--invoices
 set @tokenResource = 'Invoices'
 insert @rt
 select @tokenResource,
  (select count(*) from invoices)
  + (select count(distinct slink) from apiDeleted where apiResource = 'invoices'),
  count(*),
  null,
  '@resource=' + @tokenResource + ';',
  null,
  dbo.settingsF('api.' + @tokenResource + '.batchSize', '50'),
  'c', null 
 from dbo.apiInvoiceIds()

--receipts
 set @tokenResource = 'Receipts'
 insert @receipts
  select 
   (select COUNT(*) from object where typ=4502 and key3='TAX' and a17 = 'posted')
   + (select COUNT(distinct slink) from dbo.apiDeleted where apiResource = 'receipts'),
   count(distinct slink)
  from dbo.apiReceiptIds()

 insert @rt
 select @tokenResource,
  sum(total),
  sum(stale),
  null,
  '@resource=' + @tokenResource + ';',
  null,
  dbo.settingsF('api.' + @tokenResource + '.batchSize', '50'),
  'd', null 
 from @receipts

--mortgageCodes
 set @tokenResource = 'MortgageCodes'
 insert @rt
 select @tokenResource,
  count(id),
  sum(case when dbo.date112(lasteditDate) > isnull(k7,0) then 1 else 0 end),
  null,
  '@resource=' + @tokenResource + ';',
  null,
  dbo.settingsF('api.' + @tokenResource + '.batchSize', '50'),
  'e', null 
 from object where typ=4030


--mortgageLink
 set @tokenResource = 'MortgageLinks'
 insert @rt
 select @tokenResource,
   count(id),
   sum(case when modified>isnull(apiUpdated,0) then 1 else 0 end),
   null,
  '@resource=' + @tokenResource + ';',
   null,
   dbo.settingsF('api.' + @tokenResource + '.batchSize', '50'),
   'f', null 
   from mortgageLinksImported 

 update @rt set rate = ( (total - cast(stale as money))  / total ) * 100.0
 update @rt set blob = blob + '@batchSize=' + cast(batchSize as varchar) + ';'
 update @rt set jobEnabled = 1 where 'kp.' + db_name() + '.api' + resource in (select name from scheduledTasks where status in ('ready','running'))

 update a set loopProcSpid = b.spid
 from @rt a
 join master.dbo.sysprocesses b on b.program_name = 'kts.bat.api.' + a.resource 
  and b.spid > 50
  and b.status not in ('background', 'sleeping')
  and b.cmd not in ('AWAITING COMMAND','MIRROR HANDLER','LAZY WRITER','CHECKPOINT SLEEP','RA MANAGER')

 return
end