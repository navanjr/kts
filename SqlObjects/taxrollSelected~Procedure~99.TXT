create procedure dbo.taxrollSelected(
 @receiptId int,
 @InvoiceId int,
 @part varchar(10) = '',
 @method varchar(10)
) as 
begin

set nocount on
 
 declare @unPaidSelected varchar(50),
         @parcel varchar(60),
         @item varchar(60),
         @name varchar(60),
         @taxYear varchar(60),
         @unPaidCnt int = 0
   

       select top 1 @unPaidSelected = a15 from object where typ=40 

 declare @rd table(receiptId int, invoiceId int, methodRate money)

 exec dbo.logit @@procid, '@receiptId', @receiptId, '@invoiceId', @invoiceId, '@part', @part, '@method', @method

 if @method = 'taxCheck' and not exists(select * from receiptlink where receiptId = @receiptId and invoiceId = @invoiceId)
  begin
 declare @m varchar(max)= '',
         @cblob varchar(max) = ''
   select @cblob = case when rtrim(a.treamort) > '0'  then 'MORTGAGECODE|' else '' end  from adtax a,invoices i where a.id=i.taxrollId and i.id=@InvoiceId
   select @cblob = @cblob  + stuff((select '|' + ltrim(commentType) from taxrollSearchCommentBRW(@InvoiceId) where (ltrim(commentType) in ('Exempt','Bankrupt') and isnull(actionDate,0)=0 or ltrim(commentType) = 'Correction' and noteDate>dbo.clarionToday()-30) for xml path('')),1,1,'') 
   
   if charindex('mortgagecode',@cblob)>0
     select @m = ' - A Mortgage code on it.||'  
   if charindex('correction',@cblob)>0
     select @m = @m + ' - A correction has been made within the last 30 days.||'     
   if charindex('Exempt',@cblob)>0
     select @m = @m + ' - Flagged as Exempt.||'
   if charindex('Bankrupt',@cblob)>0
     select @m  = @m +' - Flagged as Bankrupt.||'
   if @m>'  0'
     select '@code=1;@message=' + @m + ';'
   return
  end



 if lower(@part) = 'full' and lower(@method) = 'reset'
 begin
  delete receiptlink where receiptId = @receiptId
  return
 end

 -- bail if the id is not an invoice
 if not exists(select * from invoices where id = @invoiceId)
  return

 -- bail if the invoiceDue is zero
 if dbo.invoiceTotalAR(@invoiceId) = 0
  return

 declare @methodRate money
 if lower(@part) = 'half'
  select @methodRate = .5
 else
  select @methodRate = 1

 if lower(@method) = 'tax' and @unPaidSelected != 1 or lower(@method) = 'mtg'
 begin
  if exists(select * from receiptlink where receiptId = @receiptId and invoiceId = @invoiceId)
   delete receiptlink where receiptId = @receiptId and invoiceId = @invoiceId
  else
  begin
   insert @rd (receiptId, invoiceId, methodRate) select @receiptId, @invoiceId, @methodRate
   select @parcel = parcel,@item = item,@name = name,@taxYear = taxyear from dbo.invoices where id = @invoiceId
   select @unPaidCnt = count(id) from invoices where 
          invoiceDue>0 and taxyear < @taxYear and
          (@parcel > '  0' and parcel = @parcel or name = @name)
          and id not in (select invoiceId from receiptlink where receiptId = @receiptId union select invoiceId from @rd where receiptId = @receiptId)
   if @unPaidCnt>0
     select '@code=3;@message=There are unpaid back taxes!;'
  end   
 end 

--UnPaidSelect by Parcel and Item and name
if @unPaidSelected = 1 and lower(@method) = 'tax'
 begin
  if exists(select * from receiptlink where receiptId = @receiptId and invoiceId = @invoiceId)
     begin
       delete receiptlink where receiptId = @receiptId and invoiceId = @invoiceId
     end
     else
     begin
       select @parcel = parcel,@item = item,@name = name,@taxYear = taxyear from dbo.invoices where id = @invoiceId
     end

  exec dbo.logit @@procid, '@parcel = ', @parcel, @level = 2   

 if @Item > '  0'
  begin
   insert @rd (receiptId, invoiceId, methodRate) 
   select @receiptId, id, @methodRate from invoices 
   where item = @Item and name = @name
    and id not in (select invoiceId from receiptlink where receiptId = @receiptId union select invoiceId from @rd where receiptId = @receiptId)
  end

  if @parcel > '  0'
  begin
   insert @rd (receiptId, invoiceId, methodRate) 
   select @receiptId, id, @methodRate from invoices 
   where parcel = @parcel
    and id not in (select invoiceId from receiptlink where receiptId = @receiptId union select invoiceId from @rd where receiptId = @receiptId)
  end

  if @name > '  0'
   begin
    insert @rd (receiptId, invoiceId, methodRate) 
   select @receiptId, id, @methodRate from invoices 
    where name = @name and taxyear < @taxYear
    and id not in (select invoiceId from receiptlink where receiptId = @receiptId union select invoiceId from @rd where receiptId = @receiptId)
   end

 end
 
 if lower(@method) = 'name'
 begin
  insert @rd (receiptId, invoiceId, methodRate) 
  select @receiptId, id, @methodRate from invoices 
  where name = (select name from dbo.invoices where id = @invoiceId)
   and id not in (select invoiceId from receiptlink where receiptId = @receiptId union select invoiceId from @rd where receiptId = @receiptId)
 end

 if lower(@method) = 'parcel'
 begin

  select @parcel=parcel from dbo.invoices where id = @invoiceId

  exec dbo.logit @@procid, '@parcel = ', @parcel, @level = 2   

  if @parcel > ' 0'
  begin
   insert @rd (receiptId, invoiceId, methodRate) 
   select @receiptId, id, @methodRate from invoices 
   where parcel = @parcel
    and id not in (select invoiceId from receiptlink where receiptId = @receiptId union select invoiceId from @rd where receiptId = @receiptId)
  end
 end


 if lower(@method) = 'mortcode'
 begin
  declare @mortcode varchar(60)
  select @mortcode=a.treamort from invoices i, adtax a where i.id = @invoiceId and a.id=i.taxrollId

  exec dbo.logit @@procid, '@mortcode = ', @mortcode, @level = 2   

  if @mortcode > ' 0'
  begin
   insert @rd (receiptId, invoiceId, methodRate) 
   select @receiptId, i.id, @methodRate from invoices i, adtax a
   where a.treamort = @mortcode
    and a.id = i.taxrollId
    and i.id not in (select invoiceId from receiptlink where receiptId = @receiptId union select invoiceId from @rd where receiptId = @receiptId)
  end
 end


--Mortgage Code All

 if lower(@method) = 'mtgcodeall'
 begin
  declare 
    @mtgcode varchar(60),
    @searchString varchar(250),
    @orderString varchar(50)

  select 
   @mtgcode = key1,
   @taxYear = a10,
   @searchString = b9,
   @orderString = cast(b13+0 as varchar)+cast(b14+0 as varchar)+'0000'  
  from object where id = @receiptId and typ = 4030


  exec dbo.logit @@procid, '@mtgcode = ', @mtgcode,'@taxYear = ',@taxYear, @level = 2 
 
 if @mtgcode > ' 0'
  begin
   insert @rd (receiptId, invoiceId, methodRate) 
    select @receiptId, abs(invoiceId), @methodRate from dbo.mortgageCodeBRW(@receiptId,@taxYear,@searchString,@orderString)
       where abs(invoiceId) not in (select invoiceId from receiptlink where receiptId = @receiptId union select invoiceId from @rd where receiptId = @receiptId)
  end
 end


 if lower(@method) = 'toggle'
 begin
  if exists(select * from receiptlink where receiptId = @receiptId and invoiceId = @invoiceId)
  begin
   update receiptLink set methodRate = case when methodRate = 1 then .5 else 1 end
   where receiptId = @receiptId and invoiceId = @invoiceId   
  end
 end

 update r set methodRate = 1 from @rd r, invoices i where r.invoiceId=i.id and i.invoiceAmount < 25.01 and i.typ<>'O' and i.typ <>'S'
 update r set methodRate = 1 from @rd r, invoices i where r.invoiceId=i.id and i.invoiceDue < i.invoiceAmount 

 
 delete from @rd where receiptId = @receiptId 
   and invoiceId in (select invoiceId from receiptLink where receiptId in (select id from object where typ=4502 and a17<>'Posted' and a17<>'VOID'))
 
 delete from @rd where receiptId = @receiptId 
   and dbo.invoiceTotalAR(invoiceId)=0

 insert receiptLink (receiptId, invoiceId, methodRate) 
   select * from @rd

end