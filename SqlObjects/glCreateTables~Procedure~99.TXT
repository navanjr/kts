create proc dbo.glCreateTables
as
begin
 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[gldetail]') and OBJECTPROPERTY(id, N'IsTable') = 1)
  create table gldetail(
   id int identity(1,1),
   fpid int,
   fpCode varchar(10),
   fpDesc varchar(50),
   accountId int,
   accountCode varchar(50),
   accountDesc varchar(50),
   sourceId int,
   date int,
   amount money,
   creationdate int default (left(CONVERT([real],getdate(),0),(5))+(36163)),
   creationtime int default ((substring(CONVERT([char],getdate(),(114)),(1),(2))*(360000)+substring(CONVERT([char],getdate(),(114)),(4),(2))*(6000))+substring(CONVERT([char],getdate(),(114)),(7),(2))*(100)), 
  )

 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'glDetail' and COLUMN_NAME = 'sourceId')
 begin
  begin transaction
   alter table glDetail add slink varchar(15)
   exec(N'update glDetail set slink = ''o''+cast(sourceId as varchar)')
   alter table glDetail drop column sourceId
   if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'glDetail' and COLUMN_NAME = 'sourceId')
    rollback transaction
   else
    commit transaction
 end

 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[gldetailStage]') and OBJECTPROPERTY(id, N'IsTable') = 1)
  create table gldetailStage(
   id int identity(1,1),
   fpid int,
   fpCode varchar(10),
   fpDesc varchar(50),
   accountId int,
   accountCode varchar(50),
   accountDesc varchar(50),
   contraId int,
   sourceId int,
   date int,
   amount money,
   creationdate int default (left(CONVERT([real],getdate(),0),(5))+(36163)),
   creationtime int default ((substring(CONVERT([char],getdate(),(114)),(1),(2))*(360000)+substring(CONVERT([char],getdate(),(114)),(4),(2))*(6000))+substring(CONVERT([char],getdate(),(114)),(7),(2))*(100)), 
  )

 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'glDetailStage' and COLUMN_NAME = 'sourceId')
 begin
  begin transaction
   alter table glDetailStage add slink varchar(15)
   exec(N'update glDetailStage set slink = ''o''+cast(sourceId as varchar)')
   alter table glDetailStage drop column sourceId
   if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'glDetail' and COLUMN_NAME = 'sourceId')
    rollback transaction
   else
    commit transaction
 end

 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[paid]') and OBJECTPROPERTY(id, N'IsTable') = 1)
  create table paid(
   id int identity(1,1),
   paycode varchar(10),
   sourceId int,
   date int,
   amount money,
   checkno varchar(50),
   payorId int,
   bankId int,
   depositId int,
   creationdate int default (left(CONVERT([real],getdate(),0),(5))+(36163)),
   creationtime int default ((substring(CONVERT([char],getdate(),(114)),(1),(2))*(360000)+substring(CONVERT([char],getdate(),(114)),(4),(2))*(6000))+substring(CONVERT([char],getdate(),(114)),(7),(2))*(100)), 
  )

 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'paid' and COLUMN_NAME = 'sourceId')
 begin
  begin transaction
   alter table paid add slink varchar(15)
   exec(N'update paid set slink = ''o''+cast(sourceId as varchar)')
   alter table paid drop column sourceId
   if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'paid' and COLUMN_NAME = 'sourceId')
    rollback transaction
   else
    commit transaction
 end

 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[audit]') and OBJECTPROPERTY(id, N'IsTable') = 1)
  create table audit(
   id int identity(1,1),
   sourceId int,
   userString varchar(50),
   auditString varchar(100),
   creationdate int default (left(CONVERT([real],getdate(),0),(5))+(36163)),
   creationtime int default ((substring(CONVERT([char],getdate(),(114)),(1),(2))*(360000)+substring(CONVERT([char],getdate(),(114)),(4),(2))*(6000))+substring(CONVERT([char],getdate(),(114)),(7),(2))*(100)), 
  )

 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[receiptDetail]') and OBJECTPROPERTY(id, N'IsTable') = 1)
  create table receiptDetail(
   id int identity(1,1),
   receiptId int,
   description varchar(50),
   subDescription varchar(50),
   sourceCode varchar(50),
   fundCode varchar(50),
   amount money
  )

 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'receiptDetail' and COLUMN_NAME = 'receiptId')
 begin
  begin transaction
   alter table receiptDetail add slink varchar(15)
   exec(N'update receiptDetail set slink = ''o''+cast(receiptId as varchar)')
   alter table receiptDetail drop column receiptId
   if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'receiptDetail' and COLUMN_NAME = 'receiptId')
    rollback transaction
   else
    commit transaction
 end


 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[invoices]') and OBJECTPROPERTY(id, N'IsTable') = 1)
  create table [dbo].[invoices](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[TAXROLLID] [int] NOT NULL,
	[TYP] [nvarchar](1) NOT NULL,
	[PARCEL] [nvarchar](24) NOT NULL,
	[ITEM] [numeric](7, 1) NOT NULL,
	[TAXYEAR] [numeric](5, 0) NOT NULL,
	[NAME] [nvarchar](30) NOT NULL,
	[BUSINESSNAME] [nvarchar](30) NOT NULL,
	[POSTDATE] [int] NOT NULL,
	[STATUS] [nvarchar] (10) NOT NULL
   ) ON [PRIMARY]

 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'invoices' and not COLUMN_NAME = 'receiptId')
 begin
   alter table invoices add receiptId int
 end
 

 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[taxReceiptDetail]') and OBJECTPROPERTY(id, N'IsTable') = 1)
  create table [dbo].[taxReceiptDetail](
   id int identity(1,1),
   receiptId int,
   invoiceId int
  )        

 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[AdTax]') and OBJECTPROPERTY(id, N'IsTable') = 1)
  create table [dbo].[AdTax](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RECORDTYPE] [nvarchar](1) NOT NULL,
	[ADDITIONNUMBER] [nvarchar](4) NOT NULL,
	[TOWNSHIPBLOCK] [nvarchar](3) NOT NULL,
	[RANGELOT] [nvarchar](3) NOT NULL,
	[SECTIONNUMBER] [nvarchar](2) NOT NULL,
	[QTRSECTIONNUMBER] [nvarchar](1) NOT NULL,
	[PARCELNUMBER] [nvarchar](3) NOT NULL,
	[PROPERTYSPLIT] [nvarchar](2) NOT NULL,
	[FULLPIDNUMBER] [nvarchar](24) NOT NULL,
	[PIDSORTNUMBER] [nvarchar](18) NOT NULL,
	[ITEMNUMBER] [numeric](7, 1) NOT NULL,
	[REALTAXYEAR] [numeric](5, 0) NOT NULL,
	[OWNERNAME] [nvarchar](30) NOT NULL,
	[BUSINESSNAME] [nvarchar](30) NOT NULL,
	[ADDRESS1] [nvarchar](40) NOT NULL,
	[ADDRESS2] [nvarchar](40) NOT NULL,
	[ADDRESS3] [nvarchar](40) NOT NULL,
	[CITY] [nvarchar](30) NOT NULL,
	[STATE] [nvarchar](2) NOT NULL,
	[ZIP1] [nvarchar](5) NOT NULL,
	[ZIP2] [nvarchar](4) NOT NULL,
	[ZIP3] [nvarchar](4) NOT NULL,
	[COUNTRY] [nvarchar](30) NOT NULL,
	[ORGSCHOOLDISTRICTMAIN] [nvarchar](15) NOT NULL,
	[SCHOOLDISTRICTMAIN] [nvarchar](15) NOT NULL,
	[ORGSCHOOLDISTRICTTAXRATE] [nvarchar](15) NOT NULL,
	[SCHOOLDISTRICTTAXRATE] [nvarchar](15) NOT NULL,
	[FIREDISTRICT] [nvarchar](15) NOT NULL,
	[MORTGAGECODE] [numeric](7, 0) NOT NULL,
	[OWNERNUMBER] [numeric](9, 2) NOT NULL,
	[ACRES] [numeric](7, 2) NOT NULL,
	[LOTS] [numeric](5, 2) NOT NULL,
	[MFGHOMEASSESSED] [numeric](7, 0) NOT NULL,
	[GROSSASSESSED] [numeric](9, 0) NOT NULL,
	[FREEPORTEXEMPTION] [numeric](9, 0) NOT NULL,
	[BASEEXEMPTION] [numeric](7, 0) NOT NULL,
	[DBLEXEMPTION] [numeric](7, 0) NOT NULL,
	[EXEMPTION1] [numeric](9, 0) NOT NULL,
	[EXEMPTION2] [numeric](9, 0) NOT NULL,
	[EXEMPTION3] [numeric](9, 0) NOT NULL,
	[NETASSESSEDVALUE] [numeric](9, 0) NOT NULL,
	[TOTALTAXRATE] [numeric](9, 7) NOT NULL,
	[ORIGINALTOTALDUE] [numeric](11, 2) NOT NULL,
	[TOTALDUE] [numeric](11, 2) NOT NULL,
	[BALANCEDUE] [numeric](11, 2) NOT NULL,
	[CERTIFICATENUMBER] [nvarchar](6) NOT NULL,
	[PAIDOFFDATE] [int] NOT NULL,
	[PROPERTYLIENCODE1] [nvarchar](5) NOT NULL,
	[PROPERTYLIENAMOUNT1] [numeric](7, 2) NOT NULL,
	[PROPERTYLIENCODE2] [nvarchar](5) NOT NULL,
	[PROPERTYLIENAMOUNT2] [numeric](7, 2) NOT NULL,
	[LASTTRANDATE] [int] NOT NULL,
	[TAXCORRECTIONDATE] [int] NOT NULL,
	[TAXCORRECTIONINITIALS] [nvarchar](3) NOT NULL,
	[FLAG1] [nvarchar](1) NOT NULL,
	[FLAG2] [nvarchar](1) NOT NULL,
	[FLAG3] [nvarchar](1) NOT NULL,
	[LEGALDESCRIPTION] [ntext] NOT NULL
   ) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]



end







