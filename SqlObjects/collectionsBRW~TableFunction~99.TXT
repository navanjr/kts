create function dbo.collectionsBRW(
 @dtype varchar(50),
 @documentId int,
 @date int,
 @days int,
 @taxrollDetailId int
) returns @rt table(
 id int,
 invoiceIdMain int,
 AddFeeToinvoiceId int,
 taxrollDetailId int,
 display varchar(250),
 keyCode varchar(50),
 parcel varchar(50),
 item numeric(7,1),
 taxYearMax varchar(5),
 taxYearMin varchar(5),
 invoiceCount int,
 totalDue money,
 invoiceDue money,
 subInvoiceDue money,
 taxRuleDue money,
 invoiceBlob varchar(max),
 rowType int,
 ord varchar(250),
 ordB varchar(250),
 documentStatus varchar(50)
) as
begin

declare @AddFeeNewest varchar(50) = dbo.settingsF('site.collectionsAttachFeesNewest','FALSE')

 declare @printed table(keyCode varchar(50))
 insert @printed select keyCode from dbo.collectionsPrintedTF(@dtype,@documentId,@date, @days)

 declare @fees table(keyCode varchar(50))
 insert @fees select keyCode from dbo.collectionsAddFeesTF(@dtype,@documentId,@date, @days)

 insert @rt( id, taxrollDetailId, keyCode, parcel, item, taxYearMax, taxYearMin, invoiceCount, invoiceDue, subInvoiceDue, taxRuleDue, invoiceBlob, rowType, documentStatus )
 select
  a.id,
  a.taxrollDetailId,
  a.keyCode,
  a.parcel,
  a.item,
  a.taxYearMax,
  a.taxYearMin,
  a.invoiceCount,
  a.invoiceDue,
  a.subInvoiceDue,
  a.taxRuleDue,
  a.invoiceBlob,
  a.rowType,
  case when c.keyCode is null then '' else 'Fees Added' end + case when b.keyCode is null then '' else case when c.keyCode is null then '' else ',' end + 'Printed' end 
 from dbo.collectionsDtypeToggleTF(@dtype,@taxrollDetailId) a
 left outer join @printed b on a.keyCode = b.keyCode
 left outer join @fees c on a.keyCode = c.keyCode

 update @rt set
  invoiceIdMain = left(invoiceBlob,9),
  AddFeeToinvoiceId = (select top 1 left(data,9) from  dbo.split(invoiceBlob,'|') order by case when @AddFeeNewest = 'FALSE' then id  else 10000-id end desc),
  display = replace(dbo.splitF(invoiceBlob,':',3),'&amp;','&'),
  ord = replace(dbo.splitF(invoiceBlob,':',3),'&amp;','&') + keyCode,
  ordB = keyCode + replace(dbo.splitF(invoiceBlob,':',3),'&amp;','&'),
  totalDue = invoiceDue + subInvoiceDue + taxRuleDue,
  item = dbo.splitF(invoiceBlob,':',2)

 --insert @rt (display, ord)
 -- select '   -', display + 'b' from @rt 
if @taxrollDetailId = 0
 insert @rt (keyCode, totalDue, ord, rowType)
 select cast(count(*) as varchar) + ' - ' + case when @dtype = 'RESALE' then 'Parcels' else 'Items' end, sum(totalDue), ' ', 2  from @rt where rowType = 0

 return
end