create procedure dbo.diagnostics(
 @method varchar(50) = 'all',
 @mode varchar(50) = 'heavy',
 @verbose varchar(10) = 'TRUE',
 @storeResults varchar(5) = 'FALSE'
) as 
begin

 declare @results table(
  id int identity(1,1),
  method varchar(50),
  code int,
  message varchar(max),
  tally int,
  fixProc varchar(100),
  timeStamp datetime
 ) 

 declare 
  @methodUnit varchar(50),
  @code int = 0,
  @message varchar(max) = '',
  @tally int = 0,
  @fixProc varchar(max) = ''

 if @method = 'light'
  select @method = 'all', @mode = 'light'

 if @method != 'all'
  declare routines cursor for select name from dbo.sysobjects where name like 'diagFix%' and name like '%' + @method
 else
  declare routines cursor for select name from dbo.sysobjects where name like 'diagFix%'

 open routines
 fetch next from routines into @methodUnit
 while @@FETCH_STATUS = 0
 begin

  if @method in ('all', @methodUnit)
  begin

   exec @methodUnit
    @mode = @mode,
    @code = @code output,
    @tally = @tally output,
    @message = @message output,
    @fixProc = @fixProc output

   insert @results
    select @methodUnit, @code, @message, @tally, 'none', getDate()  

   exec dbo.logit @@procId, '@method', @methodUnit, '@code', @code, '@message', @message, '@tally', @tally   

  end

  fetch next from routines into @methodUnit
 end

 close routines
 deallocate routines

 if @verbose = 'TRUE'
 begin
  select * from @results where code = 1 order by id
  return
 end

 if @storeResults = 'TRUE'
 begin
  declare @trialId int
  select @trialId = isnull(max(trialId),0) + 1 from dbo.diagnosticResults
  insert dbo.diagnosticResults 
  select @trialId, * from @results order by id
  return
 end

end