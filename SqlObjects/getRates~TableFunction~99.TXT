create function dbo.getRates(
 @mode varchar(50),
 @accountId int = null,
 @taxAmount decimal(19,2) = null,
 @taxrollId int = null,
 @invoiceType varchar(1) = ''
)
returns @rt table(
 id int identity(1,1),
 description varchar(500),
 subDescription varchar(500),
 sourceCode varchar(50),
 sourceId int,
 fundCode varchar(50),
 fundId int,
 mill decimal(19,10),
 amount decimal(19,2),
 taxName varchar(50),
 taxYear varchar(50),
 apportionCode varchar(50),
 apTableType varchar(50),
 millId int,
 millRatio numeric(19,10)
)
as

begin
 set @invoiceType = isnull(@invoiceType,'')

 declare 
  @taxYear varchar(4),
  @district varchar(50),
  @rateName varchar(50),
  @totalMills decimal(19,10),
  @totalFigured decimal(19,2),
  @fundcode varchar(50),
  @fundid int,
  @sourcecode varchar(50),
  @sourceid int,
  @newAccountId int,
  @priorPayments money

 if @mode = 'taxinvoice' 
 begin
  if isnull(@taxrollId,0) = 0
   return
 
  select
   @taxYear = taxYear,
   @district = district,
   @rateName = rateName,
   @taxAmount = amount
  from dbo.taxrollCheck(@taxrollId,@invoiceType,null)
 end

 if @mode = 'correctioninvoice'
 begin
  if isnull(@taxrollId,0) = 0
   return
  select @priorPayments = @taxAmount
  select
   @taxYear = taxYear,
   @district = district,
   @rateName = rateName,
   @taxAmount = totalDue-@priorPayments
  from dbo.taxrollCheck(@taxrollId,@invoiceType,null)
 end

 if @mode = 'apportionment' 
 begin
  if isnull(@accountId,0) = 0 or isnull(@taxAmount,0) = 0
   return
 
  select
   @taxYear = apyear,
   @district = apdistrict,
   @rateName = aprate
  from dbo.glAccounts where accountId = @accountId
 end


 declare @millages table(taxName varchar(50), mill decimal(19,10), millId int)
 insert @millages 
  select a1, cast(a2 as decimal(19,10)), id
  from object with (NOLOCK) where typ = 4012 and key1 = @district and key2 = @rateName and key3 = @taxYear and case when isnumeric(a2)=1 then cast(a2 as money) else 0.00 end <> 0.00

 select @totalMills = sum(mill) from @millages

 if @invoiceType='S'
  begin
   set @sourcecode = @district
   select @fundcode = accountcode, @fundid = accountid from glaccounts where accountCode = @rateName

   select @sourceid=isnull(accountid,0) from glaccounts where accountType = 'SOURCE' and accountCode = @sourcecode

   insert @rt
   select
    isnull((select accountdesc from glaccounts where accountid=@sourceid),'Assessment'),
    '',
    @sourceCode,
    @sourceid,
    @fundcode,
    @fundid,
    0.0000000000,
    b1,
    null,
    @taxYear,
    null,
    null,
    0,
    0
   from object with (NOLOCK) where id=@taxrollId
  end
 else
  begin
   select
    @fundcode = accountcode,
    @fundid = accountid
   from glaccounts
   where aptabletype = 'M'
    and apyear = @taxyear
    and apdistrict = @district
    and aprate = @rateName
    and accountType='ACCRUED RECEIVABLE'

   insert @rt
   select
    @district + ' ' + taxName,
    cast(mill as varchar),
    @district + '_' + @rateName + '_' + @taxyear,
    isnull((select accountid from glaccounts where accountType='SOURCE' and accountCode=@district + '_' + @rateName + '_' + @taxyear),0),
    @fundcode,
    @fundid,
    mill,
    round(@taxAmount * (mill / @totalMills),2),
    taxName,
    @taxYear,
    null,
    null,
    millId,
    case when @totalMills <> 0 then mill / @totalMills else 0 end
   from @millages
  end

 -- check the total and add or remove from the biggon
 if @invoiceType!='S'
  begin
   select @totalFigured = sum(amount) from @rt
   if @totalFigured != @taxAmount
   begin

    declare
     @fudgeAmount money,
     @fudgeToken int

    select top 1 
     @fudgeAmount = @totalFigured - @taxAmount,
     @fudgeToken = id
    from @rt order by description, subDescription desc

    update @rt set amount = amount - @fudgeAmount where id = @fudgeToken
   end
  end
 
 if @mode = 'apportionment' 
 begin
  update a set
   apportionCode = case when b.key2 > ' 0' then upper(b.key2) else '@objectid='+cast(b.id as varchar)+';' end,
   apTableType = b.a9
  from @rt a, object b
  where a.taxName = b.key1 and b.typ = 4008 and b.key2>'0'

-- Determine if School Sub Funds are needed
  if dbo.settingsF('site.schoolDistrictTreasurer','FALSE') = 'TRUE'
   begin
    update a set
     apportionCode = 
      case when d.key2 > ' 0' then upper(rtrim(d.key2))+
       case when b.b10='1' and d.b10='1' then '_GENERAL' 
            when b.b11='1' and d.b10='1' then '_BUILDING'
            when b.b12='1' and d.b10='1' then '_SINKING'
            when b.b13='1' and d.b10='1' then '_4MILL'
       else '' end
      else '@objectid='+cast(d.id as varchar)+';' end
    from @rt a, object b, glAccounts c, object d
    where a.taxName = b.key1 and b.typ = 4008 and d.typ=4010 and c.accountId=a.fundid and d.key1=c.apdistrict and b.a3='1'
   end
  else
   begin
    update a set
     apportionCode = case when d.key2 > ' 0' then upper(d.key2) else '@objectid='+cast(d.id as varchar)+';' end
    from @rt a, object b, glAccounts c, object d
    where a.taxName = b.key1 and b.typ = 4008 and d.typ=4010 and c.accountId=a.fundid and d.key1=c.apdistrict and b.a3='1'
   end

  update a set
   apportionCode = case when d.key2 > ' 0' then upper(d.key2) else '@objectid='+cast(d.id as varchar)+';' end
  from @rt a, object b, glAccounts c, object d
  where a.taxName = b.key1 and b.typ = 4008 and d.typ=4011 and c.accountId=a.fundid and d.key1=c.aprate and b.a4='1'
  update a set
   apportionCode = case when d.key3 > ' 0' then upper(d.key3) else '@objectid='+cast(d.id as varchar)+';' end
  from @rt a, object b, glAccounts c, object d
  where a.taxName = b.key1 and b.typ = 4008 and d.typ=4011 and c.accountId=a.fundid and d.key1=c.aprate and b.a5='1'
  update a set
   apportionCode = case when b.a5 > ' 0' then upper(b.a5) else '@objectid='+cast(b.id as varchar)+';' end
  from @rt a, object b
  where a.millId = b.id and b.typ = 4012 and b.a5>' 0'

  update a set
   taxname = upper(b.a13)
  from @rt a, object b
  where a.taxName = b.key1 and b.typ = 4008 and b.a13 > ' 0'

 end

 return
end