create procedure dbo.depositLinkPayment(
 @depositId int, 
 @paymentId int, 
 @supressOutput int = 0,
 @skipSQLTransaction varchar(5) = 'FALSE',
 @debugMode varchar(5) = 'FALSE'
) as
begin

 declare
  @styp char(1) = 'o',
  @balance money
 declare 
  @slink varchar(15) = @styp + cast(@depositId as varchar),
  @code int,
  @message varchar(500),
  @logBlob varchar(max) =
   '@depositId=' + cast(@depositId as varchar)
   + ';@paymentId=' + cast(@paymentId as varchar)
   + ';@supressOutput=' + cast(@supressOutput as varchar)

 exec dbo.logit @@procid, @logblob

 select
  @code = code,
  @message = message,
  @logBlob = '@code=' + cast(code as varchar) + ';@message=' + message + ';'
 from dbo.depositLinkCheck(@depositId, @paymentId)


 -- first we run the link check
 if @code = 1
 begin
  if @supressOutput = 0
   select '@code=' + cast(@code as varchar) + ';@message=' + @message + ';'
  exec dbo.logit @@procid, @logblob
  return
 end

 if @skipSQLTransaction != 'TRUE'
 begin
  begin transaction
  exec dbo.logit @@procId, 'Begin Transaction...'
 end

  if exists(select * from paid where id = @paymentId and depositId = @depositId)
   update paid set depositId = 0 where id = @paymentId 
  else
   update paid set depositId = @depositId where id = @paymentId

  exec dbo.depositStagePayments @depositId

  select @balance = balance from dbo.glSummary(@depositId,'o')
  if @debugMode = 'TRUE'
   select * from glDetailStage where slink = 'o' + cast(@depositId as varchar)

  if 1=2 -- TODO: we removed this cause we dont need the check  -- @balance <> 0
  begin
   rollback transaction
   exec dbo.logit @@procId, 'Rolling Back Transaction...', '@balance', @balance
  end
  else
  begin
   if @skipSQLTransaction != 'TRUE'
   begin
    commit transaction
    exec dbo.logit @@procId, 'Commiting Transaction...'
   end
   if @supressOutput = 0
    select '@code=0;@message=link was sucessful;'
  end

 return
 
end
