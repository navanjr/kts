create function dbo.paymentReports(
 @accountType varchar(50),
 @asofDate int,
 @includeAsOfBalanceZeros varchar(5) = null
) returns @rt table(
 slink varchar(15),
 contraSlink varchar(15),
 accountCode varchar(50),
 naturalAmount money,
 contraAmount money,
 balance money,
 balanceAsOf money,
 dateMin int,
 dateMax int,
 rowCnt int,
 paymentType varchar(50),
 controlNumber varchar(50),
 postDate int,
 payee varchar(50),
 foreignNumber varchar(50),
 foreignDate int,
 fundAccount varchar(60),
 contraPaymentType varchar(50),
 contraControlNumber varchar(50),
 contraPostDate int,
 contraForeignNumber varchar(50),
 contraForeignDate int,
 ord varchar(100),
 bsId int,
 dateCleared varchar(50)
) as
begin

 set @includeAsOfBalanceZeros = coalesce(@includeAsOfBalanceZeros,'FALSE')

 declare @accounts table(accountCode varchar(50), targetAccountCode varchar(50), targetAccountDesc varchar(50))
 insert @accounts 
 select a.accountCode, a.targetAccountCode, case when isnull(b.accountDesc,'')>' 0' then b.accountDesc else a.accountDesc end
 from dbo.glAccounts a
 left join dbo.glAccounts b on a.targetAccountCode = b.accountCode
 where a.accountType = @accountType

 insert @rt
 select
  slink = coalesce(g.slink2,g.slink),
  contraSlink = max(case when g.slink2 > '  0' then g.slink else '' end),
  g.accountCode,
  natural = SUM(case when slink2 IS null then amount else 0 end), 
  contra = SUM(case when slink2 IS not null then amount else 0 end), 
  balance = sum(amount),
  SUM(case when g.date < = @asOfDate then amount else 0 end),
  dateMin = min(g.date),
  dateMax = max(g.date),
  COUNT(g.id),
  null,null,null,null,
  null,null,null,null,null,null,null,null,
  rtrim(a.targetAccountCode) + ' - ' + a.targetAccountDesc,
  max(g.bsId),
  max(case when @accountType='Bank' then dateCleared else @asofDate end)
 from glDetail g
 join @accounts a on a.accountCode =g.accountCode 
  where @includeAsOfBalanceZeros = 'TRUE' or (case when @accountType='Bank' then dateCleared else 99999 end > @asofDate 
     or isnull(dateCleared,0)=0)
 group by
  coalesce(g.slink2,g.slink),
  g.accountCode,
  a.targetAccountCode, 
  a.targetAccountDesc 
 having
  @includeAsOfBalanceZeros = 'TRUE' or (
  SUM(case when g.date < = @asOfDate then amount else 0 end) != 0 
  and min(g.date) < = @asOfDate) -- i dont think i need this as the balanceAsOf != 0 would catch them
 order by
  coalesce(g.slink2,g.slink)

 update a set
  a.paymentType = b.a18,
  a.controlNumber = b.key1,
  a.postDate = b.key2,
  a.payee = b.a2,
  a.foreignNumber = b.key3,
  a.foreignDate = b.a1,
  a.fundAccount = case when b.a18 like '%Voucher%' then b.b3 else '' end
 from @rt a
 join object b on dbo.slinkId(a.slink) = b.id
 where b.typ=4771

 update a set
  a.contraPaymentType = b.a18,
  a.contraControlNumber = b.key1,
  a.contraPostDate = b.key2,
  a.contraForeignNumber = b.key3,
  a.contraForeignDate = b.a1
 from @rt a
 join object b on dbo.slinkId(a.contraSlink) = b.id
 where b.typ=4771

 if @accountType='Bank'
 begin
  update a set
   a.contraPaymentType = 'Cleared Bank',
   a.contraControlNumber = b.key1,
   a.contraPostDate = a.dateCleared,
   a.contraForeignNumber = '',
   a.contraForeignDate = ''
  from @rt a
  join object b on a.bsId = b.id
 end 


 return
end
