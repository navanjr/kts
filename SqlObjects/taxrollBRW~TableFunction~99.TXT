create function dbo.taxrollBRW(
 @receiptId int,
 @taxYear varchar(10),
 @searchString varchar(50),
 @orderString varchar(50)
) returns @rt table(
 invoiceId int,
 name nvarchar(60),
 parcel nvarchar(34),
 taxYear numeric(5,0),
 item numeric(22,1),
 taxType nvarchar(1),
 amount money,
 due money,
 slink varchar(15),
 selectedFlag char(4),
 methodRate money,
 ord varchar(80),
 fees money,
 penalty money,
 toPay money
)
Begin

--get the tax years we will return
  declare @taxYears table(yr varchar(4))
  if lower(@taxYear) = 'all'
   insert @taxYears select cast(taxyear as varchar (4)) from invoices group by taxyear
  else
   insert @taxYears select @taxYear

  declare @showPaidFlag char(1) = substring(@orderString,3,1)
  declare @protest varchar(10) = ''

  if substring(@orderString,4,1) = '1' 
  begin
    set @protest='PROTEST'
--    set @showPaidFlag='1'
  end


-- get the first 1000 rows that match the search string. IF we have a search string ordered by name

  if left(@orderString,2) = '10'
  begin
  if @searchString > '  0'
   insert @rt
   select top 1000 
    id*-1,name,parcel,taxYear,item,typ,invoiceAmount,invoiceDue,'t'+cast(id as varchar),'',0,'b_',case when invoiceDue != 0 then subInvoiceDue else 0.00 end,0,0 
   from dbo.invoices
   where name+' '+parcel like '%'+@searchString+'%'
    and cast(taxYear as varchar) in (select yr from @taxYears)
    and invoiceId = 0
    and 0 = case when invoiceDue != 0 then 0 else case when @showPaidFlag = '1' then 0 else 1 end end
    and 0 = case when @protest<>'PROTEST' then 0 else case when dbo.invoiceProtestBalance('t'+cast(id as varchar(15)),null)>0 then 0 else 1 end end
    and id not in (select invoiceId from receiptLink where receiptId = @receiptId)
   order by name
-- get the first 1000 rows with out using a search string.  ordered by name  why would you ever do this?
  else
   insert @rt
   select top 1000 
    id*-1,name,parcel,taxYear,item,typ,invoiceAmount,invoiceDue,'t'+cast(id as varchar),'',0,'b_',case when invoiceDue != 0 then subInvoiceDue else 0.00 end,0,0 
   from dbo.invoices
   where
    cast(taxYear as varchar) in (select yr from @taxYears)
    and invoiceId = 0
    and 0 = case when invoiceDue != 0 then 0 else case when @showPaidFlag = '1' then 0 else 1 end end
    and 0 = case when @protest<>'PROTEST' then 0 else case when dbo.invoiceProtestBalance('t'+cast(id as varchar(15)),null)>0 then 0 else 1 end end
    and id not in (select invoiceId from receiptLink where receiptId = @receiptId)
   order by name
  end
  else
  begin
-- get the first 1000 rows that match the search string. IF we have a search string ordered by parcel
  if @searchString > '  0'
   insert @rt
   select top 1000 
    id*-1,name,parcel,taxYear,item,typ,invoiceAmount,invoiceDue,'t'+cast(id as varchar),'',0,'b_',case when invoiceDue != 0 then subInvoiceDue else 0.00 end,0,0 
   from dbo.invoices
   where name+' '+parcel like '%'+@searchString+'%'
    and cast(taxYear as varchar) in (select yr from @taxYears)
    and invoiceId = 0
    and 0 = case when invoiceDue != 0 then 0 else case when @showPaidFlag = '1' then 0 else 1 end end
    and 0 = case when @protest<>'PROTEST' then 0 else case when dbo.invoiceProtestBalance('t'+cast(id as varchar(15)),null)>0 then 0 else 1 end end
    and id not in (select invoiceId from receiptLink where receiptId = @receiptId)
   order by parcel
-- get the first 1000 rows with out using a search string.  ordered by parcel  why would you ever do this?
  else
   insert @rt
   select top 1000 
    id*-1,name,parcel,taxYear,item,typ,invoiceAmount,invoiceDue,'t'+cast(id as varchar),'',0,'b_',case when invoiceDue != 0 then subInvoiceDue else 0.00 end,0,0 
   from dbo.invoices
   where
    cast(taxYear as varchar) in (select yr from @taxYears)
    and invoiceId = 0
    and 0 = case when invoiceDue != 0 then 0 else case when @showPaidFlag = '1' then 0 else 1 end end
    and 0 = case when @protest<>'PROTEST' then 0 else case when dbo.invoiceProtestBalance('t'+cast(id as varchar(15)),null)>0 then 0 else 1 end end
    and id not in (select invoiceId from receiptLink where receiptId = @receiptId)
   order by parcel
  end
-- get the already selected items
  insert @rt
  select 
   a.id*-1,a.name,a.parcel,a.taxYear,a.item,a.typ,invoiceAmount,invoiceDue,
   't'+cast(a.id as varchar), case when b.methodRate = .5 then char(189) else 'x' end,b.methodRate,'a_',case when invoiceDue != 0 then subInvoiceDue else 0.00 end,0,0
  from dbo.invoices a, receiptLink b 
  where a.id = b.invoiceId and b.receiptId = @receiptId

-- order the result set by name or by parcel
  if left(@orderString,2) = '10'
   update @rt set ord = isnull(ord,'')+name
  else
   update @rt set ord = isnull(ord,'')+parcel

  if @protest='PROTEST'
  begin
   update a set amount=p.amount from @rt a, dbo.protestDetail p where a.invoiceId=p.invoiceId*-1
  end


  if exists(select * from receiptLink where receiptId = @receiptId)
  begin
   update a set 
    fees = isnull((select sum(feeamount) from dbo.invoiceGLTotalTF(invoiceId*-1) where accountType='RECEIVABLE'),0.00),
    penalty = (due*dbo.penaltyPercent(invoiceId*-1,dbo.date1(dbo.clariondate(getdate())))/100),
    toPay = due * methodRate
   from @rt a where selectedFlag in (char(189),'x')
     
   insert @rt (invoiceId,name,ord,amount,due,fees,penalty,parcel) 
   select 0,'--Selected--',' _',sum(amount),sum(due),sum(fees),sum(penalty),'--Grand Total: '+cast(sum((topay+fees+penalty)) as varchar)
   from @rt where selectedFlag > '  0'

   insert @rt (invoiceId,name,ord) select 0,'','a_zzzzzzz'
  end

 return

end