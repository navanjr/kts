create function dbo.taxrollBRW(
 @receiptId int,
 @taxYear varchar(10),
 @searchString varchar(50),
 @orderString varchar(50)
) returns @rt table(
 invoiceId int,
 name nvarchar(60),
 parcel nvarchar(34),
 taxYear numeric(5,0),
 item numeric(22,1),
 taxType nvarchar(1),
 amount money,
 due money,
 slink varchar(15),
 selectedFlag char(4),
 methodRate money,
 ord varchar(80),
 fees money,
 penalty money,
 toPay money,
 treamort varchar(5),
 taxrollId int
)
Begin
  
set @searchString=replace(@searchstring,'~{','''')

  declare @sSLen int
   select @sSLen = LEN(@searchString)

--get the tax years we will return
/*  declare @taxYears table(yr varchar(4))
    if lower(@taxYear) = 'all'
      insert @taxYears select cast(taxyear as varchar (4)) from invoices group by taxyear
    else
      insert @taxYears select @taxYear
*/

  declare @showPaidFlag char(1) = substring(@orderString,3,1),
          @protest varchar(10) = '',
          @AdvSrch varchar(1) = substring(@orderString,5,1)


/*
  if substring(@orderString,4,1) = '1' 
  begin
    set @protest='PROTEST'
    set @showPaidFlag='1'
  end
*/

-- get the first 1000 rows that match the search string. IF we have a search string ordered by name or parcel
   if @searchString > '  0'
    begin
---Advanced Search 
     if @AdvSrch = 1
      insert @rt
       select top 1000 
        id*-1,name,parcel,taxYear,item,typ,invoiceAmount,invoiceDue,'t'+cast(id as varchar),'',0,'b_'+case when left(@searchString,@sSLen)=left(name,@sSLen) then '' else 'zzzz' end+case when left(@orderString,2) = '10' then name else parcel end,case when invoiceDue != 0 then subInvoiceDue else 0.00 end,0,0,'',taxrollId 
       from dbo.invoices
       where id in (select invoiceId from dbo.taxrollBRWIds(@taxYear,@searchString,@AdvSrch))
        and 0 = case when invoiceDue != 0 then 0 else case when @showPaidFlag = '1' then 0 else 1 end end
        and status<>'Firstnum'
        and 0 = case when @protest<>'PROTEST' then 0 else case when dbo.invoiceProtestBalance('t'+cast(id as varchar(15)),null)>0 then 0 else 1 end end
        and id not in (select invoiceId from receiptLink where receiptId = @receiptId)
     else
---Regular Search 
      insert @rt
       select top 1000 
        id*-1,name,parcel,taxYear,item,typ,invoiceAmount,invoiceDue,'t'+cast(id as varchar),'',0,'b_'+case when left(@searchString,@sSLen)=left(name,@sSLen) then '' else 'zzzz' end+case when left(@orderString,2) = '10' then name else parcel end,case when invoiceDue != 0 then subInvoiceDue else 0.00 end,0,0,'',taxrollId 
       from dbo.invoices
       where 
        name+' '+parcel+' '+cast(taxyear as varchar(4))+cast(item as varchar) like '%'+@searchString+'%'
        and 0 = case when invoiceDue != 0 then 0 else case when @showPaidFlag = '1' then 0 else 1 end end
        and status<>'Firstnum'
        and 0 = case when @protest<>'PROTEST' then 0 else case when dbo.invoiceProtestBalance('t'+cast(id as varchar(15)),null)>0 then 0 else 1 end end
        and taxyear = case when @taxyear = 'all' then taxyear else cast(@taxyear as numeric) end
        and id not in (select invoiceId from receiptLink where receiptId = @receiptId)   
    end
-- get the first 1000 rows with out using a search string.  ordered by name  why would you ever do this?
   else
     insert @rt
     select top 1000 
      id*-1,name,parcel,taxYear,item,typ,invoiceAmount,invoiceDue,'t'+cast(id as varchar),'',0,'b_'+case when left(@orderString,2) = '10' then name else parcel end,case when invoiceDue != 0 then subInvoiceDue else 0.00 end,0,0,'',taxrollId 
     from dbo.invoices
     where
      taxyear = case when @taxyear = 'all' then taxyear else cast(@taxyear as numeric) end
      and invoiceId = 0
      and status<>'Firstnum'
      and 0 = case when invoiceDue != 0 then 0 else case when @showPaidFlag = '1' then 0 else 1 end end
      and 0 = case when @protest<>'PROTEST' then 0 else case when dbo.invoiceProtestBalance('t'+cast(id as varchar(15)),null)>0 then 0 else 1 end end
      and id not in (select invoiceId from receiptLink where receiptId = @receiptId)


-- get the already selected items
  insert @rt
    select 
     a.id*-1,a.name,a.parcel,a.taxYear,a.item,a.typ,invoiceAmount,invoiceDue,
   't'+cast(a.id as varchar), case when b.methodRate = .5 then char(189) else 'x' end,b.methodRate,'a_',case when invoiceDue != 0 then subInvoiceDue else 0.00 end,0,0,'',a.taxrollId
    from dbo.invoices a, receiptLink b 
    where a.id = b.invoiceId and b.receiptId = @receiptId


--Adtax 0 due records

  if @showPaidFlag = '1' and @searchString > '  0'
   begin
---Advanced Search 
     if @AdvSrch = 1  
       insert @rt
         select top 1000 
          (id+9000000)*-1,OWNERNAME,FULLPIDNUMBER,REALTAXYEAR,ITEMNUMBER,RECORDTYPE,0,0,'a'+cast(id as varchar),'',0,'b_'+case when left(@searchString,@sSLen)=left(OWNERNAME,@sSLen) then '' else 'zzzz' end+case when left(@orderString,2) = '10' then OWNERNAME else FULLPIDNUMBER end,0.00 ,0,0,'',id 
         from dbo.adtax
          where 
              id in (select adtaxId from dbo.taxrollBRWAdTaxIds(@taxYear,@searchString,@AdvSrch))
              and id not in (select taxrollId from invoices)
       else
---Regular Search 
       insert @rt
         select top 1000 
          (id+9000000)*-1,OWNERNAME,FULLPIDNUMBER,REALTAXYEAR,ITEMNUMBER,RECORDTYPE,0,0,'a'+cast(id as varchar),'',0,'b_'+case when left(@searchString,@sSLen)=left(OWNERNAME,@sSLen) then '' else 'zzzz' end+case when left(@orderString,2) = '10' then OWNERNAME else FULLPIDNUMBER end,0.00 ,0,0,'',id 
         from dbo.adtax
          where 
              OWNERNAME+' '+FULLPIDNUMBER+' '+cast(REALTAXYEAR as varchar(4))+cast(ITEMNUMBER as varchar) like '%'+@searchString+'%'
              and cast(REALTAXYEAR as varchar) = case when @taxyear = 'all' then cast(REALTAXYEAR as varchar) else cast(@taxyear as numeric) end 
              and id not in (select taxrollId from invoices)

   end


  if @protest='PROTEST'
    begin
      update a set amount=p.amount from @rt a, dbo.protestDetail p where a.invoiceId=p.invoiceId*-1
    end

-- Set Mortgage Codes
   update @rt set
    treamort = 
     case when a.treamort>'  0' then cast(a.treamort as varchar(5)) else 
     case when mortgagecode=0 then '' else cast(mortgagecode as varchar(50)) end end 
   from adtax a where taxrollid=a.id and taxType not in ('A','S')

  declare @interestToDate int

  if left(@searchString,12)='Interest To:'
   begin
    select @interestToDate = dbo.clariondate(substring(@searchString,14,10))
   end
  else
   begin
    select @interestToDate = dbo.clariondate(getdate())
   end


  if exists(select * from receiptLink where receiptId = @receiptId)
  begin
   update a set 
    fees = isnull((select sum(feeamount) from dbo.invoiceGLTotalTF(invoiceId*-1) where accountType='RECEIVABLE'),0.00),
    penalty = round((due*dbo.penaltyPercent(invoiceId*-1,dbo.date1(@interestToDate))/100),2),
    toPay = due * methodRate
   from @rt a where selectedFlag in (char(189),'x')
     
   insert @rt (invoiceId,name,ord,amount,due,fees,penalty,parcel) 
   select 0,'--Selected--',' _',sum(amount),sum(due),sum(fees),sum(penalty),'--Grand Total: '+cast(sum((topay+fees+penalty)) as varchar)
   from @rt where selectedFlag > '  0'

   insert @rt (invoiceId,name,ord) select 0,'','a_zzzzzzz'
  end

 return

end