create procedure dbo.receiptDetailCRUD(
 @receiptId int,
 @receiptTyp int,
 @receiptDetailId int = 0,
 @description varchar(50) = '',
 @sourceCode varchar(50) = '',
 @fundCode varchar(50) = '',
 @amount money = 0.00
) as
begin

-- added some logging. cant test it yet TODO: test this logging 
 declare @log varchar(max) = 
  '@receiptId=' + isnull(cast(@receiptId as varchar),'null') + ';'
  + '@receiptTyp=' + isnull(cast(@receiptTyp as varchar),'null') + ';'
  + '@receiptDetailId=' + isnull(cast(@receiptDetailId as varchar),'null') + ';'
  + '@description=' + isnull(@description,'null') + ';'
  + '@sourceCode=' + isnull(@sourceCode,'null') + ';'
  + '@fundCode=' + isnull(@fundCode,'null') + ';'
  + '@amount=' + isnull(cast(@amount as varchar),'null') + ';'
 exec dbo.logit @@procid, @log

 declare @styp char(1) = 'o'
 declare 
  @slink varchar(15) = @styp + cast(@receiptId as varchar),
  @code int,
  @message varchar(500),
  @targetcode varchar(50) = '',
  @accrualcode varchar(50) = '',
  @accountBlob varchar(1000),
  @receiptType varchar(50)

 select @code = code, @message = message, @receiptType = receiptType from dbo.receiptCheck(@receiptId,null)
 if @code = 1
 begin
  set @log = '@code=1;@message=' + @message + ';'
  exec dbo.logit @@procid, @log, @level = 2
  select @log
  return
 end

 -- retrieve the specifics from the receipt in object
 if len(@description)<2 or len(@sourceCode)<2 or len(@fundCode)<2 
 begin 
  select
   @receiptDetailId = link5,
   @description = a3,
   @sourceCode = a4,
   @fundCode = a5,
   @amount = case when isnumeric(a6) = 1 then cast(a6 as money) else 0 end
  from object where typ = @receiptTyp and id = @receiptId
 end

 if right(rtrim(@fundcode),3)='_ACR'
 begin
  set @fundcode=isnull((select accountCode from glaccounts where accountId=dbo.latestReceivableAccount(@fundcode)),@fundcode)
 end

 begin transaction

  --run fund accrued receivable account verification to see if we have all the glAccounts we will need
  if @receiptType = 'TRUST' 
   begin
    select @accountBlob = dbo.glAccountGetFundAccrualBlob(@fundcode, 'SOURCE')
    select 
     @sourceCode = dbo.readString('@accrualcode=', @accountBlob),
     @targetcode = dbo.readString('@fundcode=', @accountBlob)

    exec dbo.glAccountVerification @sourceCode, 'SOURCE', 'CREATE', @targetAccountCode=@targetcode
   end
  else
   begin
    select @accountBlob = dbo.glAccountGetFundAccrualBlob(@fundcode, 'ACCRUED RECEIVABLE')
    select 
     @accrualcode = dbo.readString('@accrualcode=', @accountBlob),
     @targetcode = dbo.readString('@fundcode=', @accountBlob)

    exec dbo.glAccountVerification @accrualcode, 'ACCRUED RECEIVABLE', 'CREATE', @targetAccountCode=@targetcode
   end
  if isnull(@receiptDetailId,0) = 0
   insert receiptDetail (slink,description,subDescription,sourceCode,fundCode,amount) 
    select
     @slink,
     @description,
     rtrim(@sourceCode) + '/' + rtrim(@fundCode),
     @sourceCode,
     @fundCode,
     cast(@amount as varchar(50))
  else 
   update receiptDetail set 
    description = @description,
    subDescription = rtrim(@sourceCode) + '/' + rtrim(@fundCode),
    sourceCode = @sourceCode,
    fundCode = @fundCode,
    amount = @amount
   where id = @receiptDetailId

  -- add to the gl stage
  exec dbo.receiptStageGL @receiptId

 if (select balance from dbo.glSummary(@receiptId,'o')) <> 0
  rollback transaction
 else
  commit transaction

end