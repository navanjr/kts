create procedure dbo.receiptDetailCRUD(
 @receiptId int,
 @receiptTyp int,
 @receiptDetailId int = 0,
 @description varchar(50) = '',
 @sourceCode varchar(50) = '',
 @fundCode varchar(50) = '',
 @amount money = 0.00,
 @altContraId int = 0,
 @method varchar(50) = null
) as
begin

-- added some logging. cant test it yet TODO: test this logging 
 declare @log varchar(max) = 
  '@receiptId=' + isnull(cast(@receiptId as varchar),'null') + ';'
  + '@receiptTyp=' + isnull(cast(@receiptTyp as varchar),'null') + ';'
  + '@receiptDetailId=' + isnull(cast(@receiptDetailId as varchar),'null') + ';'
  + '@description=' + isnull(@description,'null') + ';'
  + '@sourceCode=' + isnull(@sourceCode,'null') + ';'
  + '@fundCode=' + isnull(@fundCode,'null') + ';'
  + '@amount=' + isnull(cast(@amount as varchar),'null') + ';'
  + '@method=' + isnull(@method,'null') + ';'
 exec dbo.logit @@procid, @log

 if @method = 'fixFund' and @receiptDetailId > 0 and @fundCode > '  0'
 begin
  update receiptDetail set fundCode = @fundCode where id = @receiptDetailId
  return
 end

 declare @styp char(1) = 'o'
 declare 
  @slink varchar(15) = @styp + cast(@receiptId as varchar),
  @code int,
  @message varchar(500),
  @targetcode varchar(50) = '',
  @accrualcode varchar(50) = '',
  @accountBlob varchar(1000),
  @receiptType varchar(50)

 select @code = code, @message = message, @receiptType = receiptType from dbo.receiptCheck(@receiptId,null)
 if @code = 1
 begin
  set @log = '@code=1;@message=' + @message + ';'
  exec dbo.logit @@procid, @log, @level = 2
  select @log
  return
 end

 -- retrieve the specifics from the receipt in object
 if len(@description)<2 or len(@sourceCode)<2 or len(@fundCode)<2 
 begin 
  select
   @receiptDetailId = link5,
   @description = a3,
   @sourceCode = a4,
   @fundCode = a5,
   @amount = case when isnumeric(a6) = 1 then cast(a6 as money) else 0 end
  from object with (NOLOCK) where typ = @receiptTyp and id = @receiptId
 end


 if right(rtrim(@fundcode),3)='_ACR'
 begin
  set @fundcode=isnull((select accountCode from glaccounts where accountId=dbo.latestReceivableAccount(@fundcode)),@fundcode)
 end

 begin transaction

  --run fund accrued receivable account verification to see if we have all the glAccounts we will need
  if @receiptType = 'TRUST' 
   begin
    select @accountBlob = dbo.glAccountGetFundAccrualBlob(@fundcode, 'SOURCE')
    select 
     @sourceCode = dbo.readString('@accrualcode=', @accountBlob),
     @targetcode = dbo.readString('@fundcode=', @accountBlob)

    exec dbo.glAccountVerification @sourceCode, 'SOURCE', 'CREATE', @targetAccountCode=@targetcode
   end
  else
   begin
    select @accountBlob = dbo.glAccountGetFundAccrualBlob(@fundcode, 'ACCRUED RECEIVABLE')
    select 
     @accrualcode = dbo.readString('@accrualcode=', @accountBlob),
     @targetcode = dbo.readString('@fundcode=', @accountBlob)

    exec dbo.glAccountVerification @accrualcode, 'ACCRUED RECEIVABLE', 'CREATE', @targetAccountCode=@targetcode
   end

  if @receiptType = 'TRUST' 
   select @altContraId = t.accountid from glaccounts a, glaccounts t where a.accountcode=@fundCode and a.targetaccountcode=t.accountcode and a.targetaccountcode>' 0'


  declare @altcontracode varchar(50)


  if @receiptType = 'SUMMARY' and isnumeric(left(@description,4)) = 1
  begin
   select @altcontracode = left(@description,4)+'_ADVALOREM'

   exec glaccountverification @altcontracode, 'FUND', 'CREATE', @collectionDesc = 'Ad Valorem Tax'

   select @altcontraId = isnull(f.accountid,0) from glaccounts f where @altcontracode = f.accountcode
  end

  if @receiptType = 'SUMMARY' and isnull(@altcontraId,0)=0
  begin
   select top 1 @altcontracode = left(year,4)+'_ADVALOREM'
    from dbo.taxYears(dbo.clariondate(getdate()))
    where left(yearcode,3) = case when left(@description,3) in ('bac','pri') then left(@description,3) else 'cur' end
    order by year desc
      
   exec glaccountverification @altcontracode, 'FUND', 'CREATE', @collectionDesc = 'Ad Valorem Tax'

   select @altcontraId = isnull(f.accountid,0) from glaccounts f with (NOLOCK) where @altcontracode = f.accountcode
  end

  if isnull(@receiptDetailId,0) = 0
   insert receiptDetail (slink,description,subDescription,sourceCode,fundCode,amount,altContraId) 
    select
     @slink,
     left(@description,49),
     left(rtrim(@sourceCode) + '/' + rtrim(@fundCode),49),
     @sourceCode,
     @fundCode,
     cast(@amount as varchar(50)),
     @altContraId
  else 
   update receiptDetail set 
    description = left(@description,49),
    subDescription = left(rtrim(@sourceCode) + '/' + rtrim(@fundCode),49),
    sourceCode = @sourceCode,
    fundCode = @fundCode,
    amount = @amount,
    altContraId = @altContraId
   where id = @receiptDetailId

  -- add to the gl stage
  exec dbo.receiptStageGL @receiptId


 if (select balance from dbo.glSummary(@receiptId,'o')) <> 0
  rollback transaction
 else
  commit transaction

end