create procedure dbo.bankStatementItemSelected(
 @id int,
 @bsId int,
 @idsBlob varchar(max) = null,
 @clearedDate int = null,
 @verbose varchar(5) = 'TRUE'
) as
begin

 declare
  @accountId int,
  @tokenId int,
  @bsDate1 int,
  @bsDate2 int,
  @amiLinked varchar(5) = 'FALSE'

 select
  @accountId = link1,
  @bsDate1 = a1,
  @bsDate2 = a2
 from object
 where id = @bsId


 if exists (select * from dbo.glDetail with (NOLOCK) where id = @id and isnull(bsId,0) > 0)
  set @amiLinked = 'TRUE'
 
 set @clearedDate = coalesce(@clearedDate, dbo.clariondate(getdate()))

 exec dbo.logit @@procid, '@id', @id, '@bsid', @bsid, '@clearedDate', @clearedDate, '@amiLinked', @amiLinked
 exec dbo.logit @@procid, '@accountId', @accountId, '@bsDate1', @bsDate1, '@bsDate2', @bsDate2

 if @amiLinked = 'FALSE'
 begin
-- ok lets check to see what bank statements need to get this link
  if not @clearedDate between @bsDate1 and @bsDate2
  begin
   exec dbo.logit @@procid, 'we will have to attach this to another bank statement. this one wont do.'
   set @bsId = null
   select @bsId = id from object with (NOLOCK) where typ = 4780 and link1 = @accountId and @clearedDate between a1 and a2
   if not isnull(@bsId,0) > 0
   begin
    exec dbo.logit @@procid, 'Failed to locate a bank statement, I will have to create a new one...'
    exec dbo.bankStatementCRUD @clearedDate, @accountId, @newBSId = @bsId output
    if @verbose = 'TRUE'
     select '@code=1;@message=This item was cleared to a new bank statement;'
   end
   else 
   begin
    exec dbo.logit @@procid, 'ok we found one... @bsid', @bsid
    if @verbose = 'TRUE'
     select '@code=1;@message=This item was cleared to another bank statement;'
   end
  end
 end

 if @id is null
  declare ids cursor for select data from dbo.split(@idsBlob,'|')
 else
  declare ids cursor for select @id

 open ids
 fetch next from ids into @tokenId
 while @@FETCH_STATUS = 0
 begin

  declare @overrideKey1 varchar(5),
          @objectA18 varchar(50),
          @warrantFundCode varchar(100),
          @slink varchar(20),
          @newnumber varchar(50),
          @fiscalYear varchar(50)

  select @slink=slink from gldetail with (NOLOCK) where id=@tokenId and left(slink,1)='o'
  select @objectA18=isnull((select a18 from object with (NOLOCK) where id = dbo.slinkId(@slink)),'')
  select @fiscalYear = fiscalYear from dbo.fpinfo(dbo.clariondate(getdate())) 
  select top 1 @warrantFundCode = ' a4 = '''+a.accountcode+''' and olink2='''+rtrim(@fiscalYear)+''' ' from gldetail g with (NOLOCK), glaccounts a where g.accountcode=a.accountcode and g.slink = @slink and a.accounttype in (select accounttype from dbo.glbankfundtypes('FUND'))

  if @objectA18 like '%Warrant%'  
  begin
   select @overrideKey1 = settingvalue from settings with (NOLOCK) where settingname = 'site.warrantsHitLedgerWhenRegistered'  

  end
  else
  begin
   select @overrideKey1 = 'FALSE'
  end

-- if the item is already linked to THIS bank statement then unlink it
  if exists(select * from dbo.glDetail with (NOLOCK) where id = @tokenId and accountId = @accountId and bsId = @bsId)
  begin
   update dbo.glDetail set bsId = Null, dateCleared = '' where id = @tokenId and accountId = @accountId and bsId = @bsId
   if @overrideKey1 = 'TRUE'
     update object set key1 = '00000', olink2='' where id = dbo.slinkId(@slink) 
  end
  else
  begin
-- link the item to the BankStatement only if it is not linked already
   if exists(select * from dbo.glDetail with (NOLOCK) where id = @tokenId and accountId = @accountId and isnull(bsId,0) = 0)
    update dbo.glDetail set bsId = @bsId, dateCleared = @clearedDate where accountId = @accountId and id = @tokenId
   if @overrideKey1 = 'TRUE'
   begin
    exec dbo.nextObjectAutoNumber 4771,@objectA18,@warrantFundCode,@newNumber = @newnumber output 
    update object set key1=@newnumber,olink2=@fiscalYear where id = dbo.slinkId(@slink)
   end

  end

  fetch next from ids into @tokenId
 end
 close ids
 deallocate ids

 return
end