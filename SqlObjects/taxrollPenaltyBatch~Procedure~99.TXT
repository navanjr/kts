CREATE procedure [dbo].[taxrollPenaltyBatch](@receiptId int, @forceInvoiceId int = null, @forceAmount money = null)
as
begin
 declare 
  @idToken int,
  @fundCodeToken varchar(50),
  @invoiceDate varchar(10),
  @description varchar(50),
  @sourceCode varchar(50),
  @fundCode varchar(50), 
  @amount money,
  @existingpenaltyId int,
  @parentType int,
  @penaltyDate int,
  @log varchar(max)

 select @parentType=typ from object where id = @receiptId

 exec dbo.logit @@procid, '@receiptId', @receiptId 

 if @parentType = 4003
  begin
   select @penaltyDate = a16 from object where id = @receiptId
  end
 else
  begin
   select @penaltyDate = dbo.clariondate(getdate())
  end

 select top 1 @invoiceDate = dbo.clariondate(getdate()),
  @description = key1,
  @sourceCode = key2,
  @fundCode = key3
 from object where typ=4504 and a1='PENALTY' and a3<' 0' and a4<' 0'
 order by id desc

 exec dbo.logit @@procid, '@description', @description, '@sourceCode', @sourceCode, '@fundCode', @fundCode

 declare @pt table(invoiceId int, amount money,description varchar(50),sourceCode varchar(50),fundCode varchar(50))

 if isnull(@forceInvoiceId,0)<1 or isnull(@forceAmount,0)<.005
 begin
  declare @pttemp table(invoiceId int, amount money, dueDate varchar(50))
  insert @pttemp
   select a.invoiceId,
          0,
          case when i.interestdate > 0 then cast(i.interestdate as varchar(50)) else dbo.clariondate('12/31/' + cast(i.taxyear as varchar)) end as dueDate
    from receiptLink a, invoices i
    where a.invoiceId=i.id and a.receiptId=@receiptId and a.invoiceId not in (select id from invoices where typ='A')

  delete from @pttemp where dueDate > @penaltyDate

  insert @pt
   select a.invoiceId,
          dbo.invoiceTotalAR(a.invoiceId) * dbo.penaltyPercent(a.invoiceId,dbo.date1(@penaltyDate))/100,
          '',
          '',
          ''
    from @pttemp a
 end
 else
 begin
  insert @pt
   select @forceInvoiceId,
          @forceAmount,
          '',
          '',
          ''
 end
-- Set penalty description source and fund for records having an override for the fund that matches invoice typ and pertyp 
 if exists(select * from invoices i, object td, adtax a, @pt p where p.invoiceId=i.id and i.taxrollId=a.id and i.typ <> 'S' and td.typ=4504 and td.a1='PENALTY'
  and i.typ=td.a3 and a.pertyp=td.a4 and p.description < ' 0' and p.sourceCode < ' 0')
 begin 
  update p 
   set description = td.key1,
    sourceCode = td.key2,
    fundCode = td.key3
   from @pt p, invoices i, object td, adtax a 
   where p.invoiceId=i.id and
    i.taxrollId=a.id and
    i.typ <> 'S' and
    td.typ=4504 and
    p.description < ' 0' and
    p.sourceCode < ' 0' and 
    td.a1='PENALTY' and
    i.typ=td.a3 and
    a.pertyp=td.a4
 end

-- Set penalty description source and fund for records having an override for the fund that matches invoice typ
 if exists(select * from invoices i, object td, @pt p where p.invoiceId=i.id and td.typ=4504 and td.a1='PENALTY'
  and i.typ=td.a3 and p.description < ' 0' and p.sourceCode < ' 0')
 begin 
  update p 
   set description = td.key1,
    sourceCode = td.key2,
    fundCode = td.key3
   from @pt p, invoices i, object td
   where p.invoiceId=i.id and
    td.typ=4504 and
    p.description < ' 0' and
    p.sourceCode < ' 0' and 
    td.a1='PENALTY' and
    i.typ=td.a3
 end

 update @pt
   set description = @description,
    sourceCode = @sourceCode,
    fundCode = @fundCode
 where 
    description < ' 0' and
    sourceCode < ' 0'


 --Set penalty fundCode for records not specifying a fundCode
 while exists(select * from @pt where fundCode < ' 0')
 begin
  select top 1 
   @idToken = invoiceId
   from @pt where fundCode<' 0'
  
  select top 1 @fundCodeToken=accountCode from dbo.targetFundInvoice(@idToken)
  if exists(select * from glaccounts where accountCode=@fundCodeToken and accountType in (select accountType from glbankFundTypes('FUND')))
   begin
    update @pt set fundCode=@fundCodeToken where invoiceId=@idToken
   end
  else
   begin
    update @pt set fundCode=@fundCode where invoiceId=@idToken
   end
 end




 while exists(select * from @pt)
 begin
  select top 1 
   @idToken = invoiceId, 
   @amount = amount, 
   @description = description,
   @sourceCode = sourceCode,
   @fundCode = fundCode
   from @pt
  exec dbo.logit @@procid,  '@idToken', @idToken, '@amount', @amount
  
  -- Issue penalty invoice for this tax item or update an existing one
  set @existingpenaltyId = isnull((select top 1 id from invoices where typ='P' and invoiceId=@idToken and id not in (select invoiceid from receiptlink where receiptId <> @receiptId)),0)
  if @existingpenaltyId=0
   begin
    exec dbo.subInvoiceCRUD  @idToken, @invoiceDate, @description, @sourceCode, @fundCode, 'P', @amount
    select @log = '@invoiceDate=' + @invoiceDate + ';@description=' + @description + ';@sourceCode=' + @sourceCode + ';@fundCode=' + @fundCode + ';@typ=' + 'P' + ';@amount=' + cast(@amount as varchar) + ';'
    exec dbo.logit @@procid, @log
   end
  else
   begin
    exec subInvoiceAdjust @existingpenaltyId, @amount,0
    exec dbo.logit @@procid,  '@existingpenaltyId', @existingpenaltyId, '@amount', @amount
   end
  delete @pt where invoiceId = @idToken
 end

 if isnull(@forceInvoiceId,0)>1 and isnull(@forceAmount,0)>.005
 begin
  insert receiptLink (receiptId,invoiceId,methodRate)
   select @receiptId, id, 1.00 from invoices 
    where invoiceId in (select invoiceId from receiptLink where receiptId=@receiptId)
     and id not in (select invoiceid from receiptLink where receiptId=@receiptId)
 end
end

-- select @typ = [typ], @interestDate = interestDate from invoices where id=@invoiceId
-- select @begindate = '12/31/' + cast(taxyear as varchar) from invoices where id = @invoiceId
