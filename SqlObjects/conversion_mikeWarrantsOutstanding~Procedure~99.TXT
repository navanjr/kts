create proc dbo.conversion_mikeWarrantsOutstanding(
 @mode varchar(50) = 'conversion',
 @method varchar(5) = 'GET',
 @class varchar(50) = null output,
 @code int = 0 output,
 @message varchar(100) = null output,
 @tally int = 0 output,
 @fixProc varchar(100) = null output,
 @guide varchar(100) = null output
) as 
begin
 set nocount on

 if @mode != 'conversion'
  return



 declare @st table(
  wfy varchar(2),
  fundid varchar(8),
  altfund varchar(8),
  altbank varchar(8),
  cityacct varchar(8),
  f4 int,
  f5 char(1),
  warno varchar(5),
  dteissue varchar(8),
  dteregis varchar(8),
  paywhom varchar(30),
  amnt numeric(11,2),
  intpaid numeric(11,2),
  payable char(1),
  dtepaid varchar(8),
  paymtno varchar(5),
  trchkno  varchar(20),
  bank varchar(30),
  f6 char(1),
  dtecancl varchar(8),
  pfy varchar(2),
  f8 char(1),
  csv varchar(max)
 )

 declare
  @mikeTableName varchar(50) = 'warrant',
  @mikePath varchar(max),
  @sql nvarchar(max),
  @conversionDate varchar(50) = dbo.settingsF('conversion.conversionDate','')

 if @conversionDate > '  0'
 begin
  select
   @mikePath = dbo.settingsF('conversion.mikepath','') + '\' + @mikeTableName + '.dbf',
   @sql = 'select *,null from openrowset(''VFPOLEDB'',''' + @mikePath + ''';'''';'''',''SELECT * FROM ' + @mikeTableName + ' where amnt != 0.00 and !deleted() and (dtePaid = "" or dtePaid > "'+@conversionDate+'")'')'

-- removed to get all warrants entered, even the ones entered after @conversionDate
-- and dteRegis <= "'+@conversionDate+'"

  insert @st exec(@sql)

  update @st set csv = wfy + ',' + ltrim(rtrim(fundId)) + ',' + warno + ',' + dteIssue + ',,' + cast(amnt as varchar) + ',' + ltrim(rtrim(paywhom))

 end

 if @method = 'GET' 
 begin  
  if @conversionDate > '  0'
   select 
    @class = 'conversion',
    @guide = 'GET|SHOW|FIX',
    @code = case when count(*) > 0 then 1 else 0 end,
    @tally = COUNT(*),  
    @message = 'Outstanding Warrants not found in KTS'
   from @st
  else
   select 
    @class = 'conversion',
    @guide = 'GET|SHOW|FIX',
    @code = 1,
    @tally = 1,  
    @message = 'missing converionDate variable'
 end

 if @method = 'SHOW'
 begin  

  select * 
  from @st
  order by fundId, Warno

 end

 if @method = 'cache'
 begin  

  if exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[mikeWarrantsOutstanding]') and OBJECTPROPERTY(id, N'IsTable') = 1)
   drop table mikeWarrantsOutstanding

  select *
  into mikeWarrantsOutstanding 
  from @st
  order by fundId, Warno

 end

 if @method = 'FIX'
 begin
  declare
   @importId int,
   @initials varchar(50) = dbo.settingsF('conversion.initials',''),
   @csv varchar(max) = '',
   @csvLength int

  select top 1 @importId = id from object where typ=4770 and lasteditini = @initials
  select @csv = @csv + csv + char(13) + char(10) from @st order by fundId, Warno
  set @csvLength = len(@csv)

  if isnull(@initials,'') < '  0' or isnull(@importId,0) < 1
  begin
   exec dbo.logit @@procid, 'Missing Conversion Initials or import Record not found... @initials', @initials, '@importId', @importId, '@csvLength', @csvLength
   return
  end

  update object set e1 = @csv where id = @importId
  exec dbo.logit @@procid, 'just inserted clerks funds into object typ 4704 @csvLength', @csvLength, '@initials', @initials, '@importId', @importId


/*
declare
 @idToken int,
 @conversionDate int = dbo.clarionDate('06/30/2013')
declare @war ids
insert @war
SELECT
 id
FROM payments where paymentType = 'Warrant'
and clerksDate != dateRegistered

while exists(select * from @war)
begin
 select @idToken = MIN(id) from @war
 
 update object
  set Key2 = case when A1 > @conversionDate then A1 else @conversionDate end
 where typ = 4771 and ID = @idToken
 
 delete @war where id = @idToken
end
*/
  
  return

 end

end