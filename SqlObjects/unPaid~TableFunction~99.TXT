create function dbo.unpaid(@invoiceId int) returns @rt table(id int,Year varchar(4),UnPaidDue Money)
as
begin
	declare @parcel varchar(50),
			@year varchar(4),
			@typ varchar,
			@name varchar(50),
                        @asOf varchar(10)

select @asOf = convert(char, GETDATE(),101)
                 --cast(dateadd(m,1,GETDATE()) as varchar)+'/15/'+cast(datepart(year,GETDATE()) as varchar)
               

	
	select	@parcel=parcel,
			@name = name, 
			@year=taxyear,
			@typ=TYP 
		from invoices where ID=@invoiceId

 if @typ  in ('R','i')
	begin
		insert into @rt
			select  
				i.ID,
				i.taxyear,  
				(i.invoiceDue*((dbo.penaltyPercent(i.ID,@asOf)/100)+1))+
					isnull((select sum(invoicedue) from invoices where invoiceId=i.ID and TYP='f'),0)
   		 	from invoices i where (i.parcel>'  0' and i.PARCEL = @parcel or name = @name) 
                                               and i.TYP in ('R','I') and i.TAXYEAR<@year 
   	end
 if @typ = 'P'
	begin
		insert into @rt
			select  
				ID,
				TAXYEAR,  
				(i.invoiceDue*((dbo.penaltyPercent(i.ID,@asOf)/100)+1))+
					isnull((select sum(invoicedue) from invoices where invoiceId=i.ID and TYP='f'),0) 
   				from invoices i where i.name = @name and i.TYP<>'R' and i.TAXYEAR<@year 
   	end
   	
   		insert into @rt
			select  
				0,
				0,  
				sum(unPaidDue)
   				from @rt where YEAR<=@year-4

   				
   		delete from @rt where (YEAR<=@year-4 and YEAR<>0 or isnull(UnPaidDue,0)=0)
   		
   		update @rt set Year='PREV' where YEAR=0
   	

   	
return
end
