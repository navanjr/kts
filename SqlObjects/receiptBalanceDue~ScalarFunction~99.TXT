CREATE function dbo.receiptBalanceDue(@receiptId int) returns money
as 
begin
 declare @totalDue money,
         @receiptType varchar(50)
 
 
 declare @wt table(
  linkid int,
  invoiceId int,
  due money default 0,
  methodRate money,
  mainInvoiceid int,
  invoiceType varchar(1)
 )

 declare
  @glAmt money,
  @glAmtStage money,
  @amount money,
  @credit money,
  @due money

select @receiptType = key3 from object where id = @receiptId

if @receiptType = 'TAX'
 begin
-- get the invoices linked to this receipt
 insert @wt (linkId, invoiceId, methodRate,mainInvoiceId,invoiceType)
  select a.id, a.invoiceId, a.methodRate,b.invoiceId,b.typ
  from receiptLink a, invoices b 
  where a.invoiceId = b.id and a.receiptId = @receiptId

-- calculate the balance due
 update @wt set due = dbo.invoiceTotalAR(invoiceId) * methodrate where mainInvoiceId = 0 
 update @wt set due = dbo.invoiceTotalAR(invoiceId) where mainInvoiceId > 0 
 update @wt set due = 0 where invoiceType = 'A'

 set @totalDue = (select sum(due) from @wt)

 select @glAmtStage = sum(a.amount) 
 from glDetailStage a, glAccounts b 
  where a.accountId = b.accountId and 
  b.accountType = 'RECEIVABLE' and 
  slink in (select slink from dbo.receiptSLinks(@receiptId))

 select @due = isnull(@totalDue,0) + isnull(@glAmtStage,0)
 return @due

 end

 select @glAmt = sum(a.amount) 
 from glDetail a, glAccounts b 
  where a.accountId = b.accountId and 
  b.accountType = 'RECEIVABLE' and 
  slink in (select slink from dbo.receiptSLinks(@receiptId))

 select @glAmtStage = sum(a.amount) 
 from glDetailStage a, glAccounts b 
  where a.accountId = b.accountId and 
  b.accountType = 'RECEIVABLE' and 
  slink in (select slink from dbo.receiptSLinks(@receiptId))


 set @totalDue = isnull(@glAmt,0) + isnull(@glAmtStage,0)

 return @totalDue
end