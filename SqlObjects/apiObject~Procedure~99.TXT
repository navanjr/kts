create procedure dbo.apiObject(
 @objectId int = null,
 @controlId int = null,
 @method varchar(10) = 'GET',
 @insertIntoObject varchar(10) = 'false'
) as
begin
 set nocount on

 exec dbo.logit @@procid, '@objectId', @objectId, '@method', @method, '@insertIntoObject', @insertIntoObject
 
 declare 
  @typ int = 4,
  @apiwt JSONHierarchy,
  @filter varchar(500),
  @apiHost varchar(50),
  @apiKey varchar(50),
  @apiResource varchar(50),
  @apiFields varchar(max),
  @dump varchar(max),
  @log varchar(max)
 
 declare @wt table(
  objField varchar(50),
  apiField varchar(50),
  value varchar(500)
 )

 if isnull(@objectId,0) > 0
  select @typ = typ, @controlId = key1 from object where id = @objectId 

 select @apiHost = dbo.readKeyCode(@typ,'@apiHost=')
 select @apiKey = dbo.readKeyCode(@typ,'@apiKey=')
 select @apiResource = dbo.readKeyCode(@typ,'@apiResource=')
 select @apiFields = dbo.readKeyCode(@typ,'@apiFields=')
 
 exec dbo.logit @@procid, '@apiHost', @apiHost, '@apiKey', @apiKey, '@apiResource', @apiResource
 exec dbo.logit @@procid, '@apifields', @apiFields

 insert into @wt (objField) select data from dbo.split(@apiFields,',')
 update @wt set apiField = (select data from dbo.split(objField,':') where id = 2)
 update @wt set objField = (select data from dbo.split(objField,':') where id = 1)

 if @controlId = 0
  set @filter = ''
 else
  set @filter = 'id=' + cast(@controlId as varchar)

 exec dbo.logit @@procid, '@method', @method, '@filter', @filter

 if @method in ('POST','SHOW')
 begin
 
  update @wt set value = isnull((select key1 from object where id = @objectId),'') where objField = 'key1'
  update @wt set value = isnull((select key2 from object where id = @objectId),'') where objField = 'key2'
  update @wt set value = isnull((select key3 from object where id = @objectId),'') where objField = 'key3'
  update @wt set value = isnull((select a1 from object where id = @objectId),'') where objField = 'a1'
  update @wt set value = isnull((select a17 from object where id = @objectId),'') where objField = 'a17'
  update @wt set value = isnull((select a18 from object where id = @objectId),'') where objField = 'a18'
  update @wt set value = isnull((select e1 from object where id = @objectId),'') where objField = 'e1'
  update @wt set value = isnull((select e2 from object where id = @objectId),'') where objField = 'e2'

 end

 if @method = 'SHOW'
 begin
  select * from @wt
  return
 end







 if @method = 'POST'
 begin
 
  set @dump = '"'

  if @controlId = 0
   select @dump = @dump + apiField + '=' + replace(dbo.stripChars(value,'39,34,13'),char(10),'|') + '&' from @wt where objField != 'key1'
  else
   select @dump = @dump + apiField + '=' + replace(dbo.stripChars(value,'39,34,13'),char(10),'|') + '&' from @wt 

  set @dump = @dump + '"'
  exec dbo.logit @@procId, '@dump=', @dump

  exec dbo.api
   @apiKey = @apiKey,
   @apiHost = @apiHost,
   @method = @method,
   @resource = @apiResource,
   @filter = @dump,
   @dump = @dump output

-- if the controlId was zero we need to write the control number to key1
  if @controlId = 0
  begin
   declare @newControlNumber varchar(50)
   select @newControlNumber = stringValue from dbo.parseJSON(@dump) where name = 'id'
   if isnumeric(@newControlNumber) = 1
   begin
    update object set key1 = @newControlNumber where id = @objectId
    exec dbo.logit @@procid, 'update @objectId', @objectId, '@newContolNumber', @newControlNumber
   end
  end

  return
 end








 if @method = 'GETINDEX'
 begin

  set @filter = ''

  exec dbo.api
   @apiKey = @apiKey,
   @apiHost = @apiHost,
   @method = 'GET',
   @resource = @apiResource,
   @filter = @filter,
   @dump = @dump output

  if len(@dump) > 0
  begin
   insert into @apiwt
   select * from dbo.parseJSON(@dump) where name is not null and parent_id is not null

   declare @token int, @tally int

   declare @theList table(
    controlId varchar(50),
    title varchar(50),
    dateentered varchar(50),
    category varchar(50),
    priority varchar(50),
    datecompleted varchar(50),
    description varchar(max),
    history varchar(max)
   )
   while exists(select * from @apiwt)
   begin
    select @token = min(parent_id) from @apiwt
    insert @theList select 
     (select stringValue from @apiwt where parent_id = @token and name = 'id'),
     isnull((select stringValue from @apiwt where parent_id = @token and name = 'title'),''),
     isnull((select stringValue from @apiwt where parent_id = @token and name = 'dateentered'),''),
     isnull((select stringValue from @apiwt where parent_id = @token and name = 'category'),''),
     isnull((select stringValue from @apiwt where parent_id = @token and name = 'priority'),''),
     isnull((select stringValue from @apiwt where parent_id = @token and name = 'datecompleted'),''),
     isnull((select stringValue from @apiwt where parent_id = @token and name = 'description'),''),
     isnull((select stringValue from @apiwt where parent_id = @token and name = 'history'),'')
    delete @apiwt where parent_id = @token
   end

   select @tally = count(*) from @thelist
   exec dbo.logit @@procid, 'total rows received from the API', @tally   

-- update rows
   update a set
    a.key2 = b.dateentered,
    a.key3 = b.category,
    a.a1 = b.title,
    a.a17 = b.priority,
    a.a18 = b.datecompleted,
    a.e1 = b.description,
    a.e2 = b.history
   from object a, @theList b
   where a.key1 = b.controlId
    and a.typ = 4

   select @tally = count(*) from @thelist where controlId in (select key1 from object where typ = 4)
   exec dbo.logit @@procid, '@theList updated', @tally   

-- insert rows
   insert object (typ,key1,key2,key3,a1,a17,a18,e1,e2)
   select 4, controlId, dateentered, category,title,priority,datecompleted,description,history
   from @theList where controlId not in (select key1 from object where typ = 4)

   select @tally = count(*) from @thelist where controlId not in (select key1 from object where typ = 4)
   exec dbo.logit @@procid, '@theList inserted', @tally   


/*
   declare
    @elementId int,
    @indexToken int

   while exists(select stringValue as id from @apiwt where name = 'id')
   begin
    select top 1 
     @elementId = element_id,
     @indexToken = cast(stringValue as int)
    from @apiwt where name = 'id' order by cast(stringValue as int) desc

    exec dbo.apiObject @controlId = @indexToken, @method = 'GET'

    delete @apiwt where element_id = @elementId
   end
*/

  end

  return
 end














 if @method = 'GET'
 begin

  if @controlId = 0 and @insertIntoObject = 'false'
   return

  exec dbo.api
   @apiKey = @apiKey,
   @apiHost = @apiHost,
   @method = @method,
   @resource = @apiResource,
   @filter = @filter,
   @dump = @dump output
 
  if len(@dump) > 10
  begin

   begin try
    insert into @apiwt
    select * from dbo.parseJSON(@dump) where name is not null
   end try
   begin catch
    set @log = error_message()
    exec dbo.logit @@procid, @log
    update object set a19 = 'Warning, API Unreachable' 
    where typ = @typ and id = @objectId
    return
   end catch
   
   update a set a.value = case when b.stringValue = 'null' then '' else b.stringValue end
   from @wt a, @apiwt b
   where a.apiField = b.name

   declare @apiControlId varchar(50)
    set @apiControlId = isnull((select value from @wt where objField = 'key1'),'')

   if @apiControlId < '  0'
    return

   if not exists(select * from object where typ = 4 and key1 = @apiControlId)
    insert object (typ,key1) select @typ, @apiControlId

   update object set 
    key2 = isnull((select value from @wt where objField = 'key2'),''),
    key3 = isnull((select value from @wt where objField = 'key3'),''),
    a1 = isnull((select value from @wt where objField = 'a1'),''),
    a17 = isnull((select value from @wt where objField = 'a17'),''),
    a18 = isnull((select value from @wt where objField = 'a18'),''),
    e1 = isnull((select replace(value,'|',char(13)+char(10)) from @wt where objField = 'e1'),''),
    e2 = isnull((select replace(value,'|',char(13)+char(10)) from @wt where objField = 'e2'),'')
   where typ = @typ and key1 = @apiControlId

  end
  else
  begin

   select @dump

  end

  return
 end




end