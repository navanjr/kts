create procedure dbo.apiObject(
 @typ int,
 @id int,
 @method varchar(10)
) as
begin

 exec dbo.logit @@procid, '@id', @id, '@typ', @typ
 
 declare 
  @objectId int,
  @apiwt JSONHierarchy,
  @filter varchar(500),
  @apiHost varchar(50),
  @apiKey varchar(50),
  @apiResource varchar(50),
  @apiFields varchar(max),
  @dump varchar(max)
 
 declare @wt table(
  objField varchar(50),
  apiField varchar(50),
  value varchar(500)
 )

 select @objectId = id from object where typ = @typ and cast(key1 as int) = @id
 select @apiHost = dbo.readKeyCode(@typ,'@apiHost=')
 select @apiKey = dbo.readKeyCode(@typ,'@apiKey=')
 select @apiResource = dbo.readKeyCode(@typ,'@apiResource=')
 select @apiFields = dbo.readKeyCode(@typ,'@apiFields=')
 
 exec dbo.logit @@procid, '@apiHost', @apiHost, '@apiKey', @apiKey, '@apiResource', @apiResource
 exec dbo.logit @@procid, '@apifields', @apiFields

 insert into @wt (objField) select data from dbo.split(@apiFields,',')
 update @wt set apiField = (select data from dbo.split(objField,':') where id = 2)
 update @wt set objField = (select data from dbo.split(objField,':') where id = 1)

 set @filter = 'id=' + cast(@id as varchar)

 exec dbo.logit @@procid, '@method', @method, '@filter', @filter

 if @method = 'POST'
 begin
 
  update @wt set value = (select key1 from object where id = @objectId) where objField = 'key1'
  update @wt set value = (select key2 from object where id = @objectId) where objField = 'key2'
  update @wt set value = (select a1 from object where id = @objectId) where objField = 'a1'
  update @wt set value = (select a17 from object where id = @objectId) where objField = 'a17'
  update @wt set value = (select a18 from object where id = @objectId) where objField = 'a18'
  update @wt set value = (select e1 from object where id = @objectId) where objField = 'e1'
  update @wt set value = (select e2 from object where id = @objectId) where objField = 'e2'

  set @dump = '"'
  
  select 
   @dump = @dump + apiField + '=' + replace(dbo.stripChars(value,'39,34,13'),char(10),'|') + '&'
   from @wt 

  set @dump = @dump + '"'

  exec dbo.api
   @apiKey = @apiKey,
   @apiHost = @apiHost,
   @method = @method,
   @resource = @apiResource,
   @filter = @dump,
   @dump = @dump output

 end


 if @method = 'GETINDEX'
 begin

  set @filter = '"' + @filter + '&index=true' + '"'

  exec dbo.api
   @apiKey = @apiKey,
   @apiHost = @apiHost,
   @method = 'GET',
   @resource = @apiResource,
   @filter = @filter,
   @dump = @dump output

  if len(@dump) > 0
  begin
   insert into @apiwt
   select * from dbo.parseJSON(@dump) where name is not null

   declare
    @elementId int,
    @indexToken int

   while exists(select stringValue as id from @apiwt where name = 'id')
   begin
    select top 1 
     @elementId = element_id,
     @indexToken = cast(stringValue as int) from @apiwt where name = 'id'
    exec dbo.apiObject @typ, @indexToken, 'GET'
    delete @apiwt where element_id = @elementId
   end

  end

  return
 end


 if @method = 'GET'
 begin

  exec dbo.api
   @apiKey = @apiKey,
   @apiHost = @apiHost,
   @method = @method,
   @resource = @apiResource,
   @filter = @filter,
   @dump = @dump output
 
  if len(@dump) > 10
  begin


   insert into @apiwt
   select * from dbo.parseJSON(@dump) where name is not null
   
   update a set a.value = case when b.stringValue = 'null' then '' else b.stringValue end
   from @wt a, @apiwt b
   where a.apiField = b.name

   if isnull(@objectId,0) = 0
    insert object (typ,key1) select @typ, @id

   update object set 
    key1 = (select value from @wt where objField = 'key1'),
    key2 = (select value from @wt where objField = 'key2'),
    a1 = (select value from @wt where objField = 'a1'),
    a17 = (select value from @wt where objField = 'a17'),
    a18 = (select value from @wt where objField = 'a18'),
    e1 = (select replace(value,'|',char(13)+char(10)) from @wt where objField = 'e1'),
    e2 = (select replace(value,'|',char(13)+char(10)) from @wt where objField = 'e2')
   where typ = @typ and key1 = cast(@id as varchar)

  end
  else
  begin

   select @dump

  end

 end

end