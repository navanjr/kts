create proc dbo.conversion_mikeOfficialBalances(
 @mode varchar(50) = 'conversion',
 @method varchar(5) = 'GET',
 @class varchar(50) = null output,
 @code int = 0 output,
 @message varchar(100) = null output,
 @tally int = 0 output,
 @fixProc varchar(100) = null output,
 @guide varchar(100) = null output
) as 
begin
 set nocount on

 if @mode != 'conversion'
  return

 declare
  @officialbankcode varchar(50) = dbo.settingsF('conversion.officialbankcode',''),
  @fy varchar(50),
  @mikeTableName varchar(50) = 'balance',
  @mikePath varchar(max),
  @sql nvarchar(max)
 
 declare @st table(
  dptno varchar(50),
  bbal money,
  csv varchar(max)
 )
 
 select @fy = RIGHT(fiscalYear,2) from dbo.fpInfo(dbo.clarionToday())

 select
  @mikePath = dbo.settingsF('conversion.mikepath','') + '\' + @mikeTableName + '.dbf',
  @sql = 'select ''OFF'' + dptno,jul * -1,null from openrowset(''VFPOLEDB'',''' + @mikePath + ''';'''';'''',''SELECT * FROM ' + @mikeTableName + ' where fyr = "'+@fy+'" and dptno > ""'')'

 insert @st exec(@sql)

 insert @st select upper(@officialBankCode), sum(abs(bbal)), null from @st

 update @st set csv = dptno + ',' + CAST(bbal as varchar) + ',' 


 if @method = 'GET' 
 begin  
   select 
    @class = 'conversion',
    @guide = 'GET|SHOW|FIX',
    @code = case when count(*) > 0 then 1 else 0 end,
    @tally = COUNT(*),  
    @message = 'Outstanding Warrants not found in KTS'
   from @st
 end

 if @method = 'SHOW'
 begin  

  select * from @st order by dptno

 end

 if @method = 'FIX'
 begin
  
  return

 end

end