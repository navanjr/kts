create proc dbo.glCreateTables2
as
begin
 set nocount on
 exec dbo.logit @@procid, 'Running...'

-- diagnostics
 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[diagnosticResults]') and OBJECTPROPERTY(id, N'IsTable') = 1)
  create table dbo.diagnosticResults(
   id int identity(1,1),
   trialId int,
   testId int,  
   method varchar(max),
   code int,
   message varchar(max),
   tally int,
   fixProc varchar(max),
   timeStamp datetime,
   mode varchar(10),
   guideBlob varchar(250)
  )
 if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'diagnosticResults' and COLUMN_NAME = 'class')
   alter table diagnosticResults add [class] varchar(50)
 if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'settings' and COLUMN_NAME = 'settingType')
   alter table settings add settingType varchar(50)

-- create or update G/L Account Types
 exec dbo.createAccountTypes
-- create or update Receipt Types
 exec dbo.createReceiptTypes
-- create or update Reasons to Cancel
 exec dbo.createReasonsToCancel
-- create GL Collection Descriptions
 exec dbo.createGLCollectionDescriptions
-- create ReportCommentSections
 exec dbo.createReportCommentSections

-- Mortgage Names and Info
 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[mortgageInfo]') and OBJECTPROPERTY(id, N'IsTable') = 1)
  create table mortgageInfo(
   id int identity(1,1),
   receiptId int,
   mortgagor varchar(100),
   mortgagee varchar(100),
   description varchar(100),
   section varchar(100),
   township varchar(100),
   range varchar(100),
   lender varchar(100),
   creationdate int default (left(CONVERT([real],getdate(),0),(5))+(36163)),
   creationtime int default ((substring(CONVERT([char],getdate(),(114)),(1),(2))*(360000)+substring(CONVERT([char],getdate(),(114)),(4),(2))*(6000))+substring(CONVERT([char],getdate(),(114)),(7),(2))*(100)), 
  )


if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[mortgageLinksImported]') and OBJECTPROPERTY(id, N'IsTable') = 1)
create table dbo.mortgageLinksImported (
 id int identity(1,1),
 parcel [nvarchar](24),
 year [numeric](5, 0),
 mortgage_code varchar(10),
 company varchar(50),
 blob varchar(max),
 modified datetime not null default getDate(),
 apiUpdated datetime default null)

 if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'temp_mortgageLink' and COLUMN_NAME = 'mortgage_Code')
   alter table temp_mortgageLink add mortgage_Code varchar(10)

if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'aamaster' and COLUMN_NAME = 'taxYear')
  alter table aamaster add taxYear [numeric](5, 0)  

-- TAXROLLCORRECTIONS
 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[taxrollCorrections]') and OBJECTPROPERTY(id, N'IsTable') = 1)
  create table taxrollCorrections(
   id int identity(1,1),
   taxrollId int,
   fieldNumber int,
   fieldName varchar(50),
   fieldData varchar(max),
   invoiceId int,
   originalData varchar(max),
   correctionDate int,
   creationdate int default (left(CONVERT([real],getdate(),0),(5))+(36163)),
   creationtime int default ((substring(CONVERT([char],getdate(),(114)),(1),(2))*(360000)+substring(CONVERT([char],getdate(),(114)),(4),(2))*(6000))+substring(CONVERT([char],getdate(),(114)),(7),(2))*(100)),
   ini varchar(50),
   comment varchar(max)    
  )

 if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'taxrollCorrections' and COLUMN_NAME = 'ini')
   alter table taxrollCorrections add ini varchar(50)

 if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'taxrollCorrections' and COLUMN_NAME = 'comment')
   alter table taxrollCorrections add comment varchar(max)

--alter invoices
 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'invoices' and COLUMN_NAME = 'NAME' and character_maximum_length=30)
   alter table invoices alter column NAME nvarchar(40) not null  
 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'invoices' and COLUMN_NAME = 'BUSINESSNAME' and character_maximum_length=30)
   alter table invoices alter column BUSINESSNAME nvarchar(40) not null 
 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'invoices' and COLUMN_NAME = 'Parcel' and character_maximum_length=24)
   alter table invoices alter column parcel nvarchar(40) not null 

--taxrollDetail
 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'taxrollDetail' and COLUMN_NAME = 'parcelNumber' and character_maximum_length=24)
   alter table taxrollDetail alter column parcelNumber nvarchar(40) not null 
 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'taxrollDetail' and COLUMN_NAME = 'NAME' and character_maximum_length=30)
   alter table taxrollDetail alter column NAME nvarchar(40) not null  
 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'taxrollDetail' and COLUMN_NAME = 'BUSINESSNAME' and character_maximum_length=30)
   alter table taxrollDetail alter column BUSINESSNAME nvarchar(40) not null 

--alter adtax
 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AdTax' and COLUMN_NAME = 'BASEEXEMPTION' and NUMERIC_PRECISION=7)
  begin
   IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[AdTax]') AND name = N'Id,OwnerName')
     DROP INDEX [Id,OwnerName] ON [dbo].[AdTax] WITH ( ONLINE = OFF )
   alter table adtax alter column BASEEXEMPTION numeric(9,0) not null
  end 
 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AdTax' and COLUMN_NAME = 'FULLPIDNUMBER' and character_maximum_length=24)
   alter table adtax alter column FULLPIDNUMBER nvarchar(40) not null  
 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AdTax' and COLUMN_NAME = 'DBLEXEMPTION' and NUMERIC_PRECISION=7)
   alter table adtax alter column DBLEXEMPTION numeric(9,0) not null 
 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AdTax' and COLUMN_NAME = 'OWNERNAME' and character_maximum_length=30)
   alter table adtax alter column OWNERNAME nvarchar(40) not null  
 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AdTax' and COLUMN_NAME = 'BUSINESSNAME' and character_maximum_length=30)
   alter table adtax alter column BUSINESSNAME nvarchar(40) not null  
 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AdTax' and COLUMN_NAME = 'ORGSCHOOLDISTRICTMAIN' and character_maximum_length=15)
   alter table adtax alter column ORGSCHOOLDISTRICTMAIN nvarchar(20) not null  
 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AdTax' and COLUMN_NAME = 'SCHOOLDISTRICTMAIN' and character_maximum_length=15)
  begin
   IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[AdTax]') AND name = N'Id,OwnerName')
     DROP INDEX [Id,OwnerName] ON [dbo].[AdTax] WITH ( ONLINE = OFF )
   alter table adtax alter column SCHOOLDISTRICTMAIN nvarchar(20) not null  
  end
 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AdTax' and COLUMN_NAME = 'ORGSCHOOLDISTRICTTAXRATE' and character_maximum_length=15)
   alter table adtax alter column ORGSCHOOLDISTRICTTAXRATE nvarchar(20) not null  
 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AdTax' and COLUMN_NAME = 'SCHOOLDISTRICTTAXRATE' and character_maximum_length=15)
   alter table adtax alter column SCHOOLDISTRICTTAXRATE nvarchar(20) not null  

--alter adtaxcheck
 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AdTaxCheck' and COLUMN_NAME = 'ORGSCHOOLDISTRICTMAIN' and character_maximum_length=15)
   alter table adtaxCheck alter column ORGSCHOOLDISTRICTMAIN nvarchar(20) not null  
 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AdTaxCheck' and COLUMN_NAME = 'SCHOOLDISTRICTMAIN' and character_maximum_length=15)
   alter table adtaxCheck alter column SCHOOLDISTRICTMAIN nvarchar(20) not null  
 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AdTaxCheck' and COLUMN_NAME = 'ORGSCHOOLDISTRICTTAXRATE' and character_maximum_length=15)
   alter table adtaxCheck alter column ORGSCHOOLDISTRICTTAXRATE nvarchar(20) not null  
 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AdTaxCheck' and COLUMN_NAME = 'SCHOOLDISTRICTTAXRATE' and character_maximum_length=15)
   alter table adtaxCheck alter column SCHOOLDISTRICTTAXRATE nvarchar(20) not null  

IF not EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[AdTax]') AND name = N'Id,OwnerName') 
    CREATE NONCLUSTERED INDEX [Id,OwnerName] ON [dbo].[AdTax] 
    ([ID] ASC,
     [OWNERNAME] ASC)
      INCLUDE ( [RECORDTYPE],
      [ADDITIONNUMBER],
      [TOWNSHIPBLOCK],
      [RANGELOT],
      [FULLPIDNUMBER],
      [ITEMNUMBER],
      [REALTAXYEAR],
      [ADDRESS1],
      [ADDRESS2],
      [CITY],
      [STATE],
      [ZIP1],
      [SCHOOLDISTRICTMAIN],
      [ACRES],
      [MFGHOMEASSESSED],
      [GROSSASSESSED],
      [BASEEXEMPTION],
      [NETASSESSEDVALUE],
      [TOTALTAXRATE],
      [proploc], 
      [LandAssessed],
      [ImprovedAssessed],
      [MiscAssessed],
      [modified],
      [apiUpdated]) 


-- postedObjectChangeLog
 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[postedObjectChangeLog]') and OBJECTPROPERTY(id, N'IsTable') = 1)
  create table postedObjectChangeLog(
   id int identity(1,1),
   sourceId int,
   ini varchar(10),
   typ varchar(50),
   userString varchar(max),
   oldData varchar(max),
   newData varchar(max),
   creationdate int default (left(CONVERT([real],getdate(),0),(5))+(36163)),
   creationtime int default ((substring(CONVERT([char],getdate(),(114)),(1),(2))*(360000)+substring(CONVERT([char],getdate(),(114)),(4),(2))*(6000))+substring(CONVERT([char],getdate(),(114)),(7),(2))*(100)), 
  )

 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[securityDecision]') and OBJECTPROPERTY(id, N'IsTable') = 1)
  create table securityDecision(
    id int identity,
    slink varchar(16),
    location varchar(50),
    requestDateTime datetime not null default getdate(),
    requestPerson varchar(300),
    requestNotes varchar(max),
    approvedDateTime datetime,
    approvedPerson varchar(300),
    approvedNotes varchar(max),
    beforeData varchar(max),
    afterData varchar(max)
  )
 if  not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'securityDecision' and COLUMN_NAME = 'level')
   alter table securityDecision add level int not null default 3
 if  not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'securityDecision' and COLUMN_NAME = 'results')
   alter table securityDecision add results varchar(max)


/*
Level:
 1 - No second login required
 2 - Any second login is sufficient
 3 - Login with 81 or greater security level required for either the requester or the approver
 4 - Login with 81 or greater security level required for both the requester and the approver
*/

 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[settingsHistory]') and OBJECTPROPERTY(id, N'IsTable') = 1)
  CREATE TABLE [dbo].[settingsHistory](
	[id] [int] not null,
	[settingName] [varchar](200) NULL,
	[settingValue] [varchar](150) NULL,
	[modifiedDateTime] [datetime] NULL,
	[modifiedBy] [varchar](150) NULL,
	[parentId] [varchar](50) NOT NULL,
	[description] [varchar](500) NOT NULL,
	[settingType] [varchar](50) NULL
  )

 if  not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'settings' and COLUMN_NAME = 'notes')
   alter table settings add notes varchar(max) not null default ''
 if  not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'settingsHistory' and COLUMN_NAME = 'notes')
   alter table settingsHistory add notes varchar(max) not null default ''

 exec dbo.conversion_reKey @method='fix'


end