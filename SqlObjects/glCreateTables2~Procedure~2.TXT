create proc dbo.glCreateTables2
as
begin
 set nocount on
 exec dbo.logit @@procid, 'Running...'

-- AdTaxArchive
 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[AdTaxArchive]') and OBJECTPROPERTY(id, N'IsTable') = 1)
CREATE TABLE [dbo].[AdTaxArchive](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[ADTAXID] [int] NOT NULL,
	[RECORDTYPE] [nvarchar](1) NOT NULL,
	[ADDITIONNUMBER] [nvarchar](4) NOT NULL,
	[TOWNSHIPBLOCK] [nvarchar](3) NOT NULL,
	[RANGELOT] [nvarchar](3) NOT NULL,
	[SECTIONNUMBER] [nvarchar](2) NOT NULL,
	[QTRSECTIONNUMBER] [nvarchar](1) NOT NULL,
	[PARCELNUMBER] [nvarchar](3) NOT NULL,
	[PROPERTYSPLIT] [nvarchar](2) NOT NULL,
	[FULLPIDNUMBER] [nvarchar](40) NOT NULL,
	[PIDSORTNUMBER] [nvarchar](18) NOT NULL,
	[ITEMNUMBER] [numeric](7, 1) NOT NULL,
	[REALTAXYEAR] [numeric](5, 0) NOT NULL,
	[OWNERNAME] [nvarchar](40) NOT NULL,
	[BUSINESSNAME] [nvarchar](40) NOT NULL,
	[ADDRESS1] [nvarchar](40) NOT NULL,
	[ADDRESS2] [nvarchar](40) NOT NULL,
	[ADDRESS3] [nvarchar](40) NOT NULL,
	[CITY] [nvarchar](30) NOT NULL,
	[STATE] [nvarchar](2) NOT NULL,
	[ZIP1] [nvarchar](5) NOT NULL,
	[ZIP2] [nvarchar](4) NOT NULL,
	[ZIP3] [nvarchar](4) NOT NULL,
	[COUNTRY] [nvarchar](30) NOT NULL,
	[ORGSCHOOLDISTRICTMAIN] [nvarchar](20) NULL,
	[SCHOOLDISTRICTMAIN] [nvarchar](20) NULL,
	[ORGSCHOOLDISTRICTTAXRATE] [nvarchar](20) NULL,
	[SCHOOLDISTRICTTAXRATE] [nvarchar](20) NULL,
	[FIREDISTRICT] [nvarchar](15) NOT NULL,
	[MORTGAGECODE] [numeric](7, 0) NOT NULL,
	[OWNERNUMBER] [numeric](14, 2) NULL,
	[ACRES] [numeric](7, 2) NOT NULL,
	[LOTS] [numeric](5, 2) NOT NULL,
	[MFGHOMEASSESSED] [numeric](7, 0) NOT NULL,
	[GROSSASSESSED] [numeric](9, 0) NOT NULL,
	[FREEPORTEXEMPTION] [numeric](9, 0) NOT NULL,
	[BASEEXEMPTION] [numeric](9, 0) NOT NULL,
	[DBLEXEMPTION] [numeric](9, 0) NOT NULL,
	[EXEMPTION1] [numeric](9, 0) NOT NULL,
	[EXEMPTION2] [numeric](9, 0) NOT NULL,
	[EXEMPTION3] [numeric](9, 0) NOT NULL,
	[NETASSESSEDVALUE] [numeric](9, 0) NOT NULL,
	[TOTALTAXRATE] [numeric](9, 7) NOT NULL,
	[ORIGINALTOTALDUE] [numeric](11, 2) NOT NULL,
	[TOTALDUE] [numeric](11, 2) NOT NULL,
	[BALANCEDUE] [numeric](11, 2) NOT NULL,
	[CERTIFICATENUMBER] [varchar](15) NULL,
	[PAIDOFFDATE] [int] NOT NULL,
	[PROPERTYLIENCODE1] [nvarchar](5) NOT NULL,
	[PROPERTYLIENAMOUNT1] [numeric](7, 2) NOT NULL,
	[PROPERTYLIENCODE2] [nvarchar](5) NOT NULL,
	[PROPERTYLIENAMOUNT2] [numeric](7, 2) NOT NULL,
	[LASTTRANDATE] [int] NOT NULL,
	[TAXCORRECTIONDATE] [int] NOT NULL,
	[TAXCORRECTIONINITIALS] [nvarchar](3) NOT NULL,
	[FLAG1] [nvarchar](1) NOT NULL,
	[FLAG2] [nvarchar](1) NOT NULL,
	[FLAG3] [nvarchar](1) NOT NULL,
	[LEGALDESCRIPTION] [ntext] NOT NULL,
	[pertyp] [varchar](1) NOT NULL DEFAULT (''),
	[proploc] [varchar](51) NOT NULL DEFAULT (''),
	[mort_cd] [varchar](5) NOT NULL DEFAULT (''),
	[morleg] [varchar](1) NOT NULL DEFAULT (''),
	[bankrupt] [varchar](1) NOT NULL DEFAULT (''),
	[treamort] [varchar](5) NOT NULL DEFAULT (''),
	[chg_asmt] [varchar](1) NOT NULL DEFAULT (''),
	[cur_adr] [varchar](8) NOT NULL DEFAULT (''),
	[trcode] [varchar](51) NOT NULL DEFAULT (''),
	[kpsc_schn] [varchar](5) NOT NULL DEFAULT (''),
	[origin] [varchar](50) NOT NULL DEFAULT (''),
	[LandAssessed] [numeric](9, 0) NOT NULL DEFAULT ((0)),
	[ImprovedAssessed] [numeric](9, 0) NOT NULL DEFAULT ((0)),
	[MiscAssessed] [numeric](9, 0) NOT NULL DEFAULT ((0)),
	[modified] [datetime] NOT NULL DEFAULT (getdate()),
	[apiUpdated] [datetime] NULL,
	[apiUpdatedLegal] [datetime] NULL,
	[PHYSICALSTREETNUMBER] [varchar](50) NOT NULL DEFAULT (''),
	[PHYSICALSTREET] [varchar](50) NOT NULL DEFAULT (''),
	[PHYSICALTOWN] [varchar](50) NOT NULL DEFAULT (''),
	[PHYSICALSTREETDIRECTION] [varchar](50) NOT NULL DEFAULT ('')
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]


-- diagnostics
 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[diagnosticResults]') and OBJECTPROPERTY(id, N'IsTable') = 1)
  create table dbo.diagnosticResults(
   id int identity(1,1),
   trialId int,
   testId int,  
   method varchar(max),
   code int,
   message varchar(max),
   tally int,
   fixProc varchar(max),
   timeStamp datetime,
   mode varchar(10),
   guideBlob varchar(250)
  )
 if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'diagnosticResults' and COLUMN_NAME = 'class')
   alter table diagnosticResults add [class] varchar(50)
 if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'settings' and COLUMN_NAME = 'settingType')
   alter table settings add settingType varchar(50)

 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'settings' and COLUMN_NAME = 'settingValue' and character_maximum_length=150)
  alter table settings alter column settingValue varchar(1000)


-- create or update G/L Account Types
 exec dbo.createAccountTypes
-- create or update Receipt Types
 exec dbo.createReceiptTypes
-- create or update Reasons to Cancel
 exec dbo.createReasonsToCancel
-- create GL Collection Descriptions
 exec dbo.createGLCollectionDescriptions
-- create ReportCommentSections
 exec dbo.createReportCommentSections

-- Mortgage Names and Info
 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[mortgageInfo]') and OBJECTPROPERTY(id, N'IsTable') = 1)
  create table mortgageInfo(
   id int identity(1,1),
   receiptId int,
   mortgagor varchar(100),
   mortgagee varchar(100),
   description varchar(100),
   section varchar(100),
   township varchar(100),
   range varchar(100),
   lender varchar(100),
   creationdate int default (left(CONVERT([real],getdate(),0),(5))+(36163)),
   creationtime int default ((substring(CONVERT([char],getdate(),(114)),(1),(2))*(360000)+substring(CONVERT([char],getdate(),(114)),(4),(2))*(6000))+substring(CONVERT([char],getdate(),(114)),(7),(2))*(100)), 
  )


if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[mortgageLinksImported]') and OBJECTPROPERTY(id, N'IsTable') = 1)
create table dbo.mortgageLinksImported (
 id int identity(1,1),
 parcel [nvarchar](24),
 year [numeric](5, 0),
 mortgage_code varchar(10),
 company varchar(50),
 blob varchar(max),
 modified datetime not null default getDate(),
 apiUpdated datetime default null)

 if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'temp_mortgageLink' and COLUMN_NAME = 'mortgage_Code')
   alter table temp_mortgageLink add mortgage_Code varchar(10)

if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'aamaster' and COLUMN_NAME = 'taxYear')
  alter table aamaster add taxYear [numeric](5, 0)  

-- TAXROLLCORRECTIONS
 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[taxrollCorrections]') and OBJECTPROPERTY(id, N'IsTable') = 1)
  create table taxrollCorrections(
   id int identity(1,1),
   taxrollId int,
   fieldNumber int,
   fieldName varchar(50),
   fieldData varchar(max),
   invoiceId int,
   originalData varchar(max),
   correctionDate int,
   creationdate int default (left(CONVERT([real],getdate(),0),(5))+(36163)),
   creationtime int default ((substring(CONVERT([char],getdate(),(114)),(1),(2))*(360000)+substring(CONVERT([char],getdate(),(114)),(4),(2))*(6000))+substring(CONVERT([char],getdate(),(114)),(7),(2))*(100)),
   ini varchar(50),
   comment varchar(max),
   modified datetime not null default getDate()
  )

 if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'taxrollCorrections' and COLUMN_NAME = 'ini')
   alter table taxrollCorrections add ini varchar(50)

 if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'taxrollCorrections' and COLUMN_NAME = 'comment')
   alter table taxrollCorrections add comment varchar(max)

 if not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'taxrollCorrections' and COLUMN_NAME = 'modified')
   alter table taxrollCorrections add modified datetime not null default getDate()

--alter invoices
 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'invoices' and COLUMN_NAME = 'NAME' and character_maximum_length=30)
   alter table invoices alter column NAME nvarchar(40) not null  
 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'invoices' and COLUMN_NAME = 'BUSINESSNAME' and character_maximum_length=30)
   alter table invoices alter column BUSINESSNAME nvarchar(40) not null 
 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'invoices' and COLUMN_NAME = 'Parcel' and character_maximum_length=24)
   alter table invoices alter column parcel nvarchar(40) not null 

--taxrollDetail
 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'taxrollDetail' and COLUMN_NAME = 'parcelNumber' and character_maximum_length=24)
   alter table taxrollDetail alter column parcelNumber nvarchar(40) not null 
 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'taxrollDetail' and COLUMN_NAME = 'NAME' and character_maximum_length=30)
   alter table taxrollDetail alter column NAME nvarchar(40) not null  
 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'taxrollDetail' and COLUMN_NAME = 'BUSINESSNAME' and character_maximum_length=30)
   alter table taxrollDetail alter column BUSINESSNAME nvarchar(40) not null 

--alter adtax
 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AdTax' and COLUMN_NAME = 'BASEEXEMPTION' and NUMERIC_PRECISION=7)
  begin
   IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[AdTax]') AND name = N'Id,OwnerName')
     DROP INDEX [Id,OwnerName] ON [dbo].[AdTax] WITH ( ONLINE = OFF )
   alter table adtax alter column BASEEXEMPTION numeric(9,0) not null
  end 
 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AdTax' and COLUMN_NAME = 'FULLPIDNUMBER' and character_maximum_length=24)
   alter table adtax alter column FULLPIDNUMBER nvarchar(40) not null  
 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AdTax' and COLUMN_NAME = 'DBLEXEMPTION' and NUMERIC_PRECISION=7)
   alter table adtax alter column DBLEXEMPTION numeric(9,0) not null 
 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AdTax' and COLUMN_NAME = 'OWNERNAME' and character_maximum_length=30)
   alter table adtax alter column OWNERNAME nvarchar(40) not null  
 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AdTax' and COLUMN_NAME = 'BUSINESSNAME' and character_maximum_length=30)
   alter table adtax alter column BUSINESSNAME nvarchar(40) not null  
 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AdTax' and COLUMN_NAME = 'ORGSCHOOLDISTRICTMAIN' and character_maximum_length=15)
   alter table adtax alter column ORGSCHOOLDISTRICTMAIN nvarchar(20) not null  
 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AdTax' and COLUMN_NAME = 'SCHOOLDISTRICTMAIN' and character_maximum_length=15)
  begin
   IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[AdTax]') AND name = N'Id,OwnerName')
     DROP INDEX [Id,OwnerName] ON [dbo].[AdTax] WITH ( ONLINE = OFF )
   alter table adtax alter column SCHOOLDISTRICTMAIN nvarchar(20) not null  
  end
 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AdTax' and COLUMN_NAME = 'ORGSCHOOLDISTRICTTAXRATE' and character_maximum_length=15)
   alter table adtax alter column ORGSCHOOLDISTRICTTAXRATE nvarchar(20) not null  
 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AdTax' and COLUMN_NAME = 'SCHOOLDISTRICTTAXRATE' and character_maximum_length=15)
   alter table adtax alter column SCHOOLDISTRICTTAXRATE nvarchar(20) not null  

--alter adtaxcheck
 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AdTaxCheck' and COLUMN_NAME = 'ORGSCHOOLDISTRICTMAIN' and character_maximum_length=15)
   alter table adtaxCheck alter column ORGSCHOOLDISTRICTMAIN nvarchar(20) not null  
 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AdTaxCheck' and COLUMN_NAME = 'SCHOOLDISTRICTMAIN' and character_maximum_length=15)
   alter table adtaxCheck alter column SCHOOLDISTRICTMAIN nvarchar(20) not null  
 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AdTaxCheck' and COLUMN_NAME = 'ORGSCHOOLDISTRICTTAXRATE' and character_maximum_length=15)
   alter table adtaxCheck alter column ORGSCHOOLDISTRICTTAXRATE nvarchar(20) not null  
 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'AdTaxCheck' and COLUMN_NAME = 'SCHOOLDISTRICTTAXRATE' and character_maximum_length=15)
   alter table adtaxCheck alter column SCHOOLDISTRICTTAXRATE nvarchar(20) not null  

IF not EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[AdTax]') AND name = N'Id,OwnerName') 
    CREATE NONCLUSTERED INDEX [Id,OwnerName] ON [dbo].[AdTax] 
    ([ID] ASC,
     [OWNERNAME] ASC)
      INCLUDE ( [RECORDTYPE],
      [ADDITIONNUMBER],
      [TOWNSHIPBLOCK],
      [RANGELOT],
      [FULLPIDNUMBER],
      [ITEMNUMBER],
      [REALTAXYEAR],
      [ADDRESS1],
      [ADDRESS2],
      [CITY],
      [STATE],
      [ZIP1],
      [SCHOOLDISTRICTMAIN],
      [ACRES],
      [MFGHOMEASSESSED],
      [GROSSASSESSED],
      [BASEEXEMPTION],
      [NETASSESSEDVALUE],
      [TOTALTAXRATE],
      [proploc], 
      [LandAssessed],
      [ImprovedAssessed],
      [MiscAssessed],
      [modified],
      [apiUpdated]) 


-- postedObjectChangeLog
 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[postedObjectChangeLog]') and OBJECTPROPERTY(id, N'IsTable') = 1)
  create table postedObjectChangeLog(
   id int identity(1,1),
   sourceId int,
   ini varchar(10),
   typ varchar(50),
   userString varchar(max),
   oldData varchar(max),
   newData varchar(max),
   creationdate int default (left(CONVERT([real],getdate(),0),(5))+(36163)),
   creationtime int default ((substring(CONVERT([char],getdate(),(114)),(1),(2))*(360000)+substring(CONVERT([char],getdate(),(114)),(4),(2))*(6000))+substring(CONVERT([char],getdate(),(114)),(7),(2))*(100)), 
  )

 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[securityDecision]') and OBJECTPROPERTY(id, N'IsTable') = 1)
  create table securityDecision(
    id int identity,
    slink varchar(16),
    location varchar(50),
    requestDateTime datetime not null default getdate(),
    requestPerson varchar(300),
    requestNotes varchar(max),
    approvedDateTime datetime,
    approvedPerson varchar(300),
    approvedNotes varchar(max),
    beforeData varchar(max),
    afterData varchar(max),
    level int not null default 3,
    results varchar(max),
    notify varchar(20),
    execproc varchar(200),
    deniedDateTime datetime
  )
 if  not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'securityDecision' and COLUMN_NAME = 'level')
   alter table securityDecision add level int not null default 3
 if  not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'securityDecision' and COLUMN_NAME = 'results')
   alter table securityDecision add results varchar(max)
 if  not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'securityDecision' and COLUMN_NAME = 'notify')
   alter table securityDecision add notify varchar(20)
 if  not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'securityDecision' and COLUMN_NAME = 'execproc')
   alter table securityDecision add execproc varchar(200)
 if  not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'securityDecision' and COLUMN_NAME = 'deniedDateTime')
   alter table securityDecision add deniedDateTime datetime

/*
Level:
 1 - No second login required
 2 - Any second login is sufficient
 3 - Login with 81 or greater security level required for either the requester or the approver
 4 - Login with 81 or greater security level required for both the requester and the approver
*/

 if not exists(select * from dbo.sysobjects where id = object_id(N'[dbo].[settingsHistory]') and OBJECTPROPERTY(id, N'IsTable') = 1)
  CREATE TABLE [dbo].[settingsHistory](
	[id] [int] not null,
	[settingName] [varchar](200) NULL,
	[settingValue] [varchar](1000) NULL,
	[modifiedDateTime] [datetime] NULL,
	[modifiedBy] [varchar](150) NULL,
	[parentId] [varchar](50) NOT NULL,
	[description] [varchar](500) NOT NULL,
	[settingType] [varchar](50) NULL,
        notes varchar(max) not null default ''
  )

 if  not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'settings' and COLUMN_NAME = 'notes')
   alter table settings add notes varchar(max) not null default ''
 if  not exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'settingsHistory' and COLUMN_NAME = 'notes')
   alter table settingsHistory add notes varchar(max) not null default ''
 if exists(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'settingsHistory' and COLUMN_NAME = 'settingValue' and character_maximum_length=150)
  alter table settingsHistory alter column settingValue varchar(1000)

 exec dbo.conversion_reKey @method='fix'

/****** Object:  Index [_dta_index_invoices_c_7_450100644__K10_K11_K7_K13]    Script Date: 09/02/2015 15:50:28 ******/
IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[invoices]') AND name = N'_dta_index_invoices_c_7_450100644__K10_K11_K7_K13')
begin
/****** Object:  Index [_dta_index_invoices_c_7_450100644__K10_K11_K7_K13]    Script Date: 09/02/2015 15:50:28 ******/
CREATE CLUSTERED INDEX [_dta_index_invoices_c_7_450100644__K10_K11_K7_K13] ON [dbo].[invoices] 
(
	[STATUS] ASC,
	[invoiceId] ASC,
	[NAME] ASC,
	[invoiceDue] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]

end

 --statementunpaidtfnew
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[statementunpaidtfnew]') AND type in (N'U'))
DROP TABLE [dbo].[statementunpaidtfnew]

create table statementunpaidtfnew (printId int,
 invoiceid int,
 origin varchar(50),
 year varchar(4),
 recordType varchar(10),
 perTyp varchar(10),
 invoiceDue Money,
 halfRate Money,
 interestAsOfDate varchar(50),
 subjectToPenalty int,
 penaltyPercent decimal(19,9),
 penalty Money,
 link2parentInvoice int,
 trcode varchar(50),
 trSection int,
 ord int,
 ini varchar(10)
)
 --statementunpaid
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[statementunpaid]') AND type in (N'U'))
DROP TABLE [dbo].[statementunpaid]

create table statementunpaid (printId int, due money, [year] varchar(10), ini varchar(10))

 --statementunpaidtf1
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[statementunpaidtf1]') AND type in (N'U'))
DROP TABLE [dbo].[statementunpaidtf1]

create table statementunpaidtf1 (printid int, trcode varchar(100), due money, ini varchar(10))

 --statementstatementdetail
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[statementstatementdetail]') AND type in (N'U'))
DROP TABLE [dbo].[statementstatementdetail]

create table statementstatementdetail (printId int, distribution varchar(200), mills varchar(200), amount money, ini varchar(10))


 --statementmain
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[statementmain]') AND type in (N'U'))
DROP TABLE [dbo].[statementmain]

create table statementmain (printId int,
  taxrollid int,
  TYP varchar(50),
  PARCEL varchar(50),
  ITEM varchar(50),
  TAXYEAR varchar(10),
  POSTDATE varchar(50),
  [STATUS] varchar(50),
  INVOICEAMT money,
  PENALTY money,
  FEE money,
  currenttax money,
  halftax money,
  pastdue money,
  CURRENTDUE money,
  [QUEUE] varchar(100),
  printOrder varchar(100),
  FULLTYP varchar(100),
  invoiceType varchar(50),
  NAME varchar(100),
  BUSINESSNAME varchar(100),
  Stamp varchar(100),
  address1 varchar(100),
  address2 varchar(100),
  address3 varchar(100),
  city varchar(100),
  [state] varchar(50),
  zip1 varchar(50),
  zip2 varchar(50),
  zip3 varchar(50),
  GROSSASSESSED [numeric](9, 0),
  EXEMPTION3 [numeric](9, 0),
  IMPROVEDASSESSEDVALUE [numeric](9, 0),
  LANDASSESSEDVALUE [numeric](9, 0),
  NETASSESSEDVALUE [numeric](9, 0),
  MISCASSESSEDVALUE [numeric](9, 0),
  MFGHOMEASSESSED [numeric](9, 0),
  SCHOOLDISTRICTMAIN varchar(100),
  SCHOOLDISTRICTTAXRATE varchar(100),
  ACRES [numeric](7, 2),
  TWP varchar(50),
  SEC varchar(50),
  RNG varchar(50),
  TOTALDUE money,
  LEGALDESCRIPTION varchar(max),
  MortgageCode varchar(50),
  OwnerNumber varchar(50),
  propLoc varchar(100),
  HideMrtgMsg varchar(100),
  revised varchar(10),
  siteid int,
  SecondHalfFlag varchar(10),
  interestto2nd varchar(100),
  ini varchar(10))




end