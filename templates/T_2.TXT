@id=2;
@template=Key Git Procedures;
@shortcut=;
@group=;
@security=Key;
@securitylevel=1;
@lastedit=0077240.5057;

###---###---###---###---###
@noupdate;
@bbgcolor=999B0Dh;
@wbgcolor=999B0Dh;
@lmode=2;

@loadwindow=
 gitCreateIni=,
 gcBranchName=getini('gitInfo','BRANCHNAME','unknown','c:\client\key\gitInfo.ini'),
 gcBat='gitcmd_temp.bat',
 gcBatIni='gitcmdIni_temp.bat',
 create(150,34,64,3,'',002),
 prop(150,'From','jeff|matt|nate|steve|wade|master'),
 prop(150,'Width',80),
 prop(150,'Height',12),
 prop(150,'Readonly',0),
 prop(150,'Drop',5),
 prop(150,7cfah,16777215),
 create(151,10,64,17,'',),
 prop(151,'Width',300),
 prop(151,'Height',120),
 prop(151,7cfah,16777215),
 prop(151,font,Lucida Console),
 prop(151,fontsize,7),
 create(152,10,64,140,'',),
 prop(152,'Width',300),
 prop(152,'Height',120),
 prop(152,7cfah,16777215),
 prop(152,font,Lucida Console),
 prop(152,fontsize,7);


@afterloadwindow=
 gitFetchAll=,
 gitStatus=;

\t001Current Branch; \h002; \f002=gcBranchName;
\t003Git Status; \h004;

\t105Export;
@acc105=
 dumpTemplates=,
 dumpUsers=,
 exportObjects=,
 gitCreateIni=,
 gitStatus=;

\t108Import;
@acc108=
 m('Are you sure you wish to import objects?','Import from local git repo...',,6,4),
 break(gcretval<>2),
 templateImport=,
 userImport=,
 importObjects=,
 gitCreateIni=,
 gitStatus=;

\t110Git Reset;
@acc110=
 gcGitCmd='call git reset --hard HEAD',
 gitCommand=,
 gitCreateIni=,
 gitStatus=;

\t111&Git Commit;
@acc111=
 iw(',.t000Please Enter the Commit Message...., ,.t097Commit Message., ,.w098300.,,.h097.,,.x0983.,,.y0983.,'),
 break(gcretval<>'OK'),
 lcMessage=obj7:d1,
 gcGitCmd='call git add .',
 gitCommand=,
 gcGitCmd='call git commit -a -m "key_commit: '&lcMessage&'"',
 gitCommand=,
 gitCreateIni=,
 gitStatus=;

\t112Git Push;
@acc112=
 gcGitCmd='call git push origin '&obj:key1,
 gitCommand=,
 gitCreateIni=,
 gitStatus=;

\t113Git P&ull;
@acc113=
 gcGitCmd='call git pull origin '&obj:key1,
 gitCommand=,
 gitCreateIni=,
 gitStatus=;

\t114Backup Data;
@acc114=
 sql('backup database '&kp('database')&' to disk=''c:\client\key\kts\kts.dat'' with retaindays=0,INIT');

\t115Export CSV;
@acc115=
 do(454,exportCsv1=);

@acc150=
 break(obj:key1<'  0'),
 gitFetchAll=,
 gcGitCmd='git checkout '&obj:key1,
 gitCommand=,
 gitCreateIni=,
 gitStatus=;

@templateImport=
 importtexttemplate(kpexepath()&'\kts\templates','RTEM:ID>0');.

@userImport=
 lcpath=kpexepath(),
 lcpath1=kpexepath()&'\kts',
 gcGitCmd='del '&lcpath&'\kts.usr',
 gitCommand=,
 gcGitCmd='copy '&lcpath1&'\kts.usr '&lcpath&'\kts.usr',
 gitCommand=,
 importusers('kts.usr');

@dumpTemplates=
 exporttexttemplate(kpexepath()&'\kts\templates','RTEM:ID>0');

@dumpUsers=
 lcpath=kpexepath(),
 lcpath1=kpexepath()&'\kts',
 gcGitCmd='del '&lcpath&'\kts.usr',
 gitCommand=,
 exportusers('kts.usr'),
 gcGitCmd='copy '&lcpath&'\kts.usr '&lcpath1&'\kts.usr',
 gitCommand=;

@exportObjects=
 if(kpexists(kpexepath()&'\kts\SqlObjects')<>1,createFolder=,cleanOutFolder=),
 sqlloop('select id,key1,key2,a17,a18 from object where typ=451',exportObject1=);

@createFolder=
 gcGitCmd='mkdir c:\client\key\kts\SqlObjects',
 gitCommand=;

@cleanOutFolder=
  gcGitCmd='del '&kpexepath()&'\kts\sqlobjects\*.* /q',
  gitCommand=;

@exportObject1=
 fastmodify(obj5:a1,044=''),
 lcFile=obj5:a2&'~'&obj5:a3&'~'&obj5:a4&'.TXT',
 e1select('select e1 from object where id='&obj5:a1),
 lcE1=clip(obj7:e1),
 send('kts\SqlObjects\'&lcFile,lcE1);

@importObjects=
 setpath(kpexepath()&'\KTS\sqlObjects'),
 dirObjectCheck=;

@importObjectsA=
 sqlloop('select name,path from dbo.dirRead('''&kp('path')&''') where name is not null',importObjects1=),
 do(451,bbproc5=),
 setpath(kpexepath());

@importObjects1=
 lcFile=obj5:a1,
 importObjects2=;

@importObjects2=
 lcWrk=lcFile,
 lcName=sub(lcWrk,1,instring('~',lcWrk,1,1)-1),
 lcWrk=sub(lcWrk,len(lcName)+2,len(lcWrk)-(len(lcName))),
 lcType=sub(lcWrk,1,instring('~',lcWrk,1,1)-1),
 lcOrder=sub(lcWrk,len(lcType)+2,len(lcWrk)-(len(lcType))),
 readdos(lcFile&'.txt'),
 lcObjectId=kp('select id from object where typ=451 and key1='''&lcName&''''),
 if(lcObjectId+0>0,updateIt=,insertIt=);

@updateIt=
 modify(lcObjectId,004=lcType,006=lcOrder,102=workmemo);
@insertIt=
 insert(-02=451,002=lcName,004=lcType,006=lcOrder,102=workmemo);

@dirObjectCheck=
 lcDirId=kp('select id from dbo.sysobjects where id = object_id(N''[dbo].[dirRead]'') and OBJECTPROPERTY(id, N''IsTableFunction'') = 1'),
 if(lcDirId+0=0,createFunction=),
 importObjectsA=;

@createFunction=
 lcFile='EnableAdvancedSQLOptions~Script~99',
 importObjects2=,
 createoneobject=,
 lcFile='dirRead~TableFunction~99',
 importObjects2=,
 createoneobject=;

@createoneobject=
 get(obj1:id),
 gcid=obj7:id,
 gcname=obj7:key1,
 gctype=obj7:key2,
 do(451,createobject=)

@gitFetchAll=
 gcGitCmd='git fetch --all',
 gitCommand=;

@gitStatus=
 readdos('gitStatus.txt'),
 prop(151,text,workmemo),
 readdos('gitLog.txt'),
 prop(152,text,workmemo);

@gitCommand=
 send(gcBat,'pushd \client\key\kts'),
 send(gcBat,'call '&gcGitCmd,1),
 send(gcBat,'popd',1),
 runw(gcBat,'Git Command...');

@gitCreateIni=
 send(gcBatIni,'@echo off'),
 send(gcBatIni,'set TERM=msys',1),
 send(gcBatIni,'pushd \client\key\kts',1),
 send(gcBatIni,'echo [gitInfo] > ..\gitInfo.ini',1),
 send(gcBatIni,'for /F "tokens=3 delims=/" %%i in (.git/HEAD) do echo BRANCHNAME=%%i >> ..\gitInfo.ini',1),
 send(gcBatIni,'call git status > ..\gitStatus.txt',1),
 send(gcBatIni,'call git log -n10 > ..\gitLog.txt',1),
 send(gcBatIni,'popd',1),
 runw(gcBatIni,'Git Command...');